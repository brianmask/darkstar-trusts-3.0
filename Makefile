# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/DarkStar
pkgincludedir = $(includedir)/DarkStar
pkglibdir = $(libdir)/DarkStar
pkglibexecdir = $(libexecdir)/DarkStar
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
am__append_1 = -ldl
#am__append_2 = -lsocket -lnsl -ldl
#am__append_3 = -D__FREEBSD__
#am__append_4 = -D__NETBSD__
#am__append_5 = -DFD_SETSIZE=4096 -DCYGWIN
bin_PROGRAMS = dsgame$(EXEEXT) dsconnect$(EXEEXT) dssearch$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_lib_mysql.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/common/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = dsconnect-blowfish.$(OBJEXT) \
	dsconnect-DetourAlloc.$(OBJEXT) \
	dsconnect-DetourCommon.$(OBJEXT) \
	dsconnect-DetourNavMesh.$(OBJEXT) \
	dsconnect-DetourNavMeshBuilder.$(OBJEXT) \
	dsconnect-DetourNavMeshQuery.$(OBJEXT) \
	dsconnect-DetourNode.$(OBJEXT) dsconnect-kernel.$(OBJEXT) \
	dsconnect-malloc.$(OBJEXT) dsconnect-md52.$(OBJEXT) \
	dsconnect-showmsg.$(OBJEXT) dsconnect-socket.$(OBJEXT) \
	dsconnect-sql.$(OBJEXT) dsconnect-strlib.$(OBJEXT) \
	dsconnect-taskmgr.$(OBJEXT) dsconnect-timer.$(OBJEXT) \
	dsconnect-utils.$(OBJEXT) dsconnect-zlib.$(OBJEXT)
am__objects_2 = $(am__objects_1)
am__objects_3 = $(am__objects_2)
am__objects_4 = dsconnect-account.$(OBJEXT) \
	dsconnect-message_server.$(OBJEXT) dsconnect-lobby.$(OBJEXT) \
	dsconnect-login.$(OBJEXT) dsconnect-login_auth.$(OBJEXT) \
	dsconnect-login_session.$(OBJEXT)
am_dsconnect_OBJECTS = $(am__objects_3) $(am__objects_4)
dsconnect_OBJECTS = $(am_dsconnect_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dsconnect_DEPENDENCIES = $(am__DEPENDENCIES_2)
dsconnect_LINK = $(CXXLD) $(dsconnect_CXXFLAGS) $(CXXFLAGS) \
	$(dsconnect_LDFLAGS) $(LDFLAGS) -o $@
am__objects_5 = dsgame-blowfish.$(OBJEXT) dsgame-DetourAlloc.$(OBJEXT) \
	dsgame-DetourCommon.$(OBJEXT) dsgame-DetourNavMesh.$(OBJEXT) \
	dsgame-DetourNavMeshBuilder.$(OBJEXT) \
	dsgame-DetourNavMeshQuery.$(OBJEXT) \
	dsgame-DetourNode.$(OBJEXT) dsgame-kernel.$(OBJEXT) \
	dsgame-malloc.$(OBJEXT) dsgame-md52.$(OBJEXT) \
	dsgame-showmsg.$(OBJEXT) dsgame-socket.$(OBJEXT) \
	dsgame-sql.$(OBJEXT) dsgame-strlib.$(OBJEXT) \
	dsgame-taskmgr.$(OBJEXT) dsgame-timer.$(OBJEXT) \
	dsgame-utils.$(OBJEXT) dsgame-zlib.$(OBJEXT)
am__objects_6 = $(am__objects_5)
am__objects_7 = $(am__objects_6)
am__objects_8 = dsgame-ability.$(OBJEXT) \
	dsgame-ai_automaton_dummy.$(OBJEXT) \
	dsgame-ai_char_charm.$(OBJEXT) dsgame-ai_char_gm.$(OBJEXT) \
	dsgame-ai_char_normal.$(OBJEXT) \
	dsgame-ai_char_prisoner.$(OBJEXT) dsgame-ai_general.$(OBJEXT) \
	dsgame-ai_mob_dummy.$(OBJEXT) dsgame-ai_npc_dummy.$(OBJEXT) \
	dsgame-ai_pet_dummy.$(OBJEXT) \
	dsgame-ai_ultimate_summon.$(OBJEXT) dsgame-pathfind.$(OBJEXT) \
	dsgame-targetfind.$(OBJEXT) dsgame-ability_state.$(OBJEXT) \
	dsgame-attack_state.$(OBJEXT) dsgame-item_state.$(OBJEXT) \
	dsgame-magic_state.$(OBJEXT) dsgame-mobskill_state.$(OBJEXT) \
	dsgame-range_state.$(OBJEXT) dsgame-state.$(OBJEXT) \
	dsgame-weaponskill_state.$(OBJEXT) dsgame-alliance.$(OBJEXT) \
	dsgame-blue_spell.$(OBJEXT) dsgame-blue_trait.$(OBJEXT) \
	dsgame-guild.$(OBJEXT) dsgame-message.$(OBJEXT) \
	dsgame-commandhandler.$(OBJEXT) \
	dsgame-conquest_system.$(OBJEXT) \
	dsgame-enmity_container.$(OBJEXT) \
	dsgame-automatonentity.$(OBJEXT) dsgame-baseentity.$(OBJEXT) \
	dsgame-battleentity.$(OBJEXT) dsgame-charentity.$(OBJEXT) \
	dsgame-mobentity.$(OBJEXT) dsgame-npcentity.$(OBJEXT) \
	dsgame-petentity.$(OBJEXT) dsgame-grades.$(OBJEXT) \
	dsgame-battlefield.$(OBJEXT) \
	dsgame-battlefield_handler.$(OBJEXT) dsgame-instance.$(OBJEXT) \
	dsgame-instance_loader.$(OBJEXT) dsgame-item.$(OBJEXT) \
	dsgame-item_armor.$(OBJEXT) dsgame-item_currency.$(OBJEXT) \
	dsgame-item_fish.$(OBJEXT) dsgame-item_furnishing.$(OBJEXT) \
	dsgame-item_general.$(OBJEXT) dsgame-item_linkshell.$(OBJEXT) \
	dsgame-item_puppet.$(OBJEXT) dsgame-item_shop.$(OBJEXT) \
	dsgame-item_usable.$(OBJEXT) dsgame-item_weapon.$(OBJEXT) \
	dsgame-item_container.$(OBJEXT) dsgame-latent_effect.$(OBJEXT) \
	dsgame-latent_effect_container.$(OBJEXT) \
	dsgame-linkshell.$(OBJEXT) dsgame-luautils.$(OBJEXT) \
	dsgame-lua_ability.$(OBJEXT) dsgame-lua_action.$(OBJEXT) \
	dsgame-lua_baseentity.$(OBJEXT) \
	dsgame-lua_battlefield.$(OBJEXT) dsgame-lua_instance.$(OBJEXT) \
	dsgame-lua_item.$(OBJEXT) dsgame-lua_mobskill.$(OBJEXT) \
	dsgame-lua_region.$(OBJEXT) dsgame-lua_spell.$(OBJEXT) \
	dsgame-lua_statuseffect.$(OBJEXT) \
	dsgame-lua_trade_container.$(OBJEXT) dsgame-lua_zone.$(OBJEXT) \
	dsgame-map.$(OBJEXT) dsgame-merit.$(OBJEXT) \
	dsgame-mobskill.$(OBJEXT) dsgame-mob_spell_container.$(OBJEXT) \
	dsgame-mob_spell_list.$(OBJEXT) dsgame-modifier.$(OBJEXT) \
	dsgame-navmesh.$(OBJEXT) dsgame-action.$(OBJEXT) \
	dsgame-auction_house.$(OBJEXT) \
	dsgame-bazaar_confirmation.$(OBJEXT) \
	dsgame-bazaar_purchase.$(OBJEXT) dsgame-bazaar_check.$(OBJEXT) \
	dsgame-bazaar_close.$(OBJEXT) dsgame-bazaar_item.$(OBJEXT) \
	dsgame-bazaar_message.$(OBJEXT) dsgame-blacklist.$(OBJEXT) \
	dsgame-campaing_map.$(OBJEXT) dsgame-caught_fish.$(OBJEXT) \
	dsgame-char.$(OBJEXT) dsgame-char_abilities.$(OBJEXT) \
	dsgame-char_appearance.$(OBJEXT) dsgame-char_check.$(OBJEXT) \
	dsgame-char_emotion.$(OBJEXT) dsgame-char_equip.$(OBJEXT) \
	dsgame-char_health.$(OBJEXT) dsgame-char_job_extra.$(OBJEXT) \
	dsgame-char_jobs.$(OBJEXT) dsgame-char_recast.$(OBJEXT) \
	dsgame-char_skills.$(OBJEXT) dsgame-char_spells.$(OBJEXT) \
	dsgame-char_stats.$(OBJEXT) dsgame-char_sync.$(OBJEXT) \
	dsgame-char_update.$(OBJEXT) dsgame-chat_message.$(OBJEXT) \
	dsgame-chocobo_digging.$(OBJEXT) dsgame-change_music.$(OBJEXT) \
	dsgame-conquest_map.$(OBJEXT) dsgame-cs_position.$(OBJEXT) \
	dsgame-currency1.$(OBJEXT) dsgame-currency2.$(OBJEXT) \
	dsgame-delivery_box.$(OBJEXT) \
	dsgame-downloading_data.$(OBJEXT) \
	dsgame-entity_update.$(OBJEXT) dsgame-event.$(OBJEXT) \
	dsgame-event_string.$(OBJEXT) dsgame-event_update.$(OBJEXT) \
	dsgame-entity_animation.$(OBJEXT) dsgame-fishing.$(OBJEXT) \
	dsgame-guild_menu.$(OBJEXT) dsgame-guild_menu_buy.$(OBJEXT) \
	dsgame-guild_menu_sell.$(OBJEXT) \
	dsgame-guild_menu_buy_update.$(OBJEXT) \
	dsgame-guild_menu_sell_update.$(OBJEXT) \
	dsgame-instance_entry.$(OBJEXT) \
	dsgame-inventory_assign.$(OBJEXT) \
	dsgame-inventory_finish.$(OBJEXT) \
	dsgame-inventory_item.$(OBJEXT) \
	dsgame-inventory_modify.$(OBJEXT) \
	dsgame-inventory_size.$(OBJEXT) dsgame-key_items.$(OBJEXT) \
	dsgame-linkshell_message.$(OBJEXT) \
	dsgame-linkshell_equip.$(OBJEXT) dsgame-lock_on.$(OBJEXT) \
	dsgame-macroequipset.$(OBJEXT) dsgame-menu_config.$(OBJEXT) \
	dsgame-menu_merit.$(OBJEXT) dsgame-menu_mog.$(OBJEXT) \
	dsgame-menu_raisetractor.$(OBJEXT) \
	dsgame-merit_points_categories.$(OBJEXT) \
	dsgame-message_basic.$(OBJEXT) dsgame-message_debug.$(OBJEXT) \
	dsgame-message_special.$(OBJEXT) \
	dsgame-message_standard.$(OBJEXT) \
	dsgame-message_system.$(OBJEXT) dsgame-message_text.$(OBJEXT) \
	dsgame-party_effects.$(OBJEXT) dsgame-status_effects.$(OBJEXT) \
	dsgame-synth_result.$(OBJEXT) \
	dsgame-synth_suggestion.$(OBJEXT) \
	dsgame-trade_action.$(OBJEXT) dsgame-trade_item.$(OBJEXT) \
	dsgame-trade_request.$(OBJEXT) dsgame-trade_update.$(OBJEXT) \
	dsgame-world_pass.$(OBJEXT) dsgame-party_define.$(OBJEXT) \
	dsgame-party_invite.$(OBJEXT) dsgame-party_map.$(OBJEXT) \
	dsgame-party_member_update.$(OBJEXT) \
	dsgame-party_search.$(OBJEXT) dsgame-pet_sync.$(OBJEXT) \
	dsgame-position.$(OBJEXT) dsgame-quest_mission_log.$(OBJEXT) \
	dsgame-release.$(OBJEXT) dsgame-server_ip.$(OBJEXT) \
	dsgame-server_message.$(OBJEXT) dsgame-shop_appraise.$(OBJEXT) \
	dsgame-shop_buy.$(OBJEXT) dsgame-shop_items.$(OBJEXT) \
	dsgame-shop_menu.$(OBJEXT) dsgame-stop_downloading.$(OBJEXT) \
	dsgame-synth_animation.$(OBJEXT) \
	dsgame-synth_message.$(OBJEXT) \
	dsgame-treasure_find_item.$(OBJEXT) \
	dsgame-treasure_lot_item.$(OBJEXT) \
	dsgame-entity_visual.$(OBJEXT) dsgame-weather.$(OBJEXT) \
	dsgame-wide_scan.$(OBJEXT) dsgame-wide_scan_track.$(OBJEXT) \
	dsgame-zone_in.$(OBJEXT) dsgame-zone_visited.$(OBJEXT) \
	dsgame-packet_system.$(OBJEXT) dsgame-party.$(OBJEXT) \
	dsgame-recast_container.$(OBJEXT) dsgame-region.$(OBJEXT) \
	dsgame-spell.$(OBJEXT) dsgame-status_effect.$(OBJEXT) \
	dsgame-status_effect_container.$(OBJEXT) \
	dsgame-time_server.$(OBJEXT) dsgame-trade_container.$(OBJEXT) \
	dsgame-trait.$(OBJEXT) dsgame-transport.$(OBJEXT) \
	dsgame-treasure_pool.$(OBJEXT) \
	dsgame-universal_container.$(OBJEXT) \
	dsgame-attackutils.$(OBJEXT) dsgame-battleutils.$(OBJEXT) \
	dsgame-blacklistutils.$(OBJEXT) dsgame-blueutils.$(OBJEXT) \
	dsgame-charutils.$(OBJEXT) dsgame-fishingutils.$(OBJEXT) \
	dsgame-guildutils.$(OBJEXT) dsgame-battlefieldutils.$(OBJEXT) \
	dsgame-instanceutils.$(OBJEXT) dsgame-itemutils.$(OBJEXT) \
	dsgame-jailutils.$(OBJEXT) dsgame-mobutils.$(OBJEXT) \
	dsgame-petutils.$(OBJEXT) dsgame-puppetutils.$(OBJEXT) \
	dsgame-synthutils.$(OBJEXT) dsgame-zoneutils.$(OBJEXT) \
	dsgame-vana_time.$(OBJEXT) dsgame-weapon_skill.$(OBJEXT) \
	dsgame-zone.$(OBJEXT) dsgame-attack.$(OBJEXT) \
	dsgame-attackround.$(OBJEXT) dsgame-zone_entities.$(OBJEXT) \
	dsgame-zone_instance.$(OBJEXT)
am_dsgame_OBJECTS = $(am__objects_7) $(am__objects_8)
dsgame_OBJECTS = $(am_dsgame_OBJECTS)
dsgame_DEPENDENCIES = $(am__DEPENDENCIES_2)
dsgame_LINK = $(CXXLD) $(dsgame_CXXFLAGS) $(CXXFLAGS) \
	$(dsgame_LDFLAGS) $(LDFLAGS) -o $@
am__objects_9 = dssearch-blowfish.$(OBJEXT) dssearch-malloc.$(OBJEXT) \
	dssearch-md52.$(OBJEXT) dssearch-showmsg.$(OBJEXT) \
	dssearch-sql.$(OBJEXT) dssearch-strlib.$(OBJEXT) \
	dssearch-taskmgr.$(OBJEXT) dssearch-timer.$(OBJEXT) \
	dssearch-utils.$(OBJEXT)
am__objects_10 = dssearch-data_loader.$(OBJEXT) \
	dssearch-auction_history.$(OBJEXT) \
	dssearch-auction_list.$(OBJEXT) \
	dssearch-linkshell_list.$(OBJEXT) \
	dssearch-party_list.$(OBJEXT) \
	dssearch-search_comment.$(OBJEXT) \
	dssearch-search_list.$(OBJEXT) dssearch-search.$(OBJEXT) \
	dssearch-tcp_request.$(OBJEXT)
am_dssearch_OBJECTS = $(am__objects_9) $(am__objects_10)
dssearch_OBJECTS = $(am_dssearch_OBJECTS)
dssearch_DEPENDENCIES = $(am__DEPENDENCIES_2)
dssearch_LINK = $(CXXLD) $(dssearch_CXXFLAGS) $(CXXFLAGS) \
	$(dssearch_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/common
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(dsconnect_SOURCES) $(dsgame_SOURCES) $(dssearch_SOURCES)
DIST_SOURCES = $(dsconnect_SOURCES) $(dsgame_SOURCES) \
	$(dssearch_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/sources.am \
	$(top_srcdir)/src/common/config.h.in compile config.guess \
	config.sub depcomp install-sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/ffxi/darkstar/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/ffxi/darkstar/missing autoconf
AUTOHEADER = ${SHELL} /home/ffxi/darkstar/missing autoheader
AUTOMAKE = ${SHELL} /home/ffxi/darkstar/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++ -std=c++1y
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLEXT = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lrt -lm 
LTLIBOBJS = 
LUA_CFLAGS = -I/usr/include/luajit-2.0
LUA_LIBS = -lluajit-5.1
MAKEINFO = ${SHELL} /home/ffxi/darkstar/missing makeinfo
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = -I/usr/include/mysql 
MYSQL_CONFIG = /usr/bin/mysql_config
MYSQL_LDFLAGS = -L/usr/lib/i386-linux-gnu -lmysqlclient -lpthread -lz -lm -lrt -ldl
MYSQL_VERSION = 5.7.20
OBJEXT = o
PACKAGE = DarkStar
PACKAGE_BUGREPORT = 
PACKAGE_NAME = DarkStarProject
PACKAGE_STRING = DarkStarProject 6118326ba85983aba2dc1ade6e039a250e77ef05
PACKAGE_TARNAME = darkstarproject
PACKAGE_URL = 
PACKAGE_VERSION = 6118326ba85983aba2dc1ade6e039a250e77ef05
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = git
ZMQ_CFLAGS = 
ZMQ_LIBS = -lzmq
abs_builddir = /home/ffxi/darkstar
abs_srcdir = /home/ffxi/darkstar
abs_top_builddir = /home/ffxi/darkstar
abs_top_srcdir = /home/ffxi/darkstar
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ffxi/darkstar/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = 
top_builddir = .
top_srcdir = .
AUTOMAKE_OPTIONS = foreign
SRC_COMMON = \
src/common/blowfish.h \
src/common/cbasetypes.h \
src/common/detour/DetourAlloc.h \
src/common/detour/DetourAssert.h \
src/common/detour/DetourCommon.h \
src/common/detour/DetourNavMesh.h \
src/common/detour/DetourNavMeshBuilder.h \
src/common/detour/DetourNavMeshQuery.h \
src/common/detour/DetourNode.h \
src/common/detour/DetourStatus.h \
src/common/dsprand.h \
src/common/kernel.h \
src/common/lua/lua.h \
src/common/lua/lua.hpp \
src/common/lua/luaconf.h \
src/common/lua/lualib.h \
src/common/lua/luaxlib.h \
src/common/lua/lunar.h \
src/common/malloc.h \
src/common/marshal/string.h \
src/common/md52.h \
src/common/mmo.h \
src/common/recast/Recast.h \
src/common/recast/RecastAlloc.h \
src/common/recast/RecastAssert.h \
src/common/showmsg.h \
src/common/socket.h \
src/common/sql.h \
src/common/strlib.h \
src/common/taskmgr.h \
src/common/timer.h \
src/common/utils.h \
src/common/version.h \
src/common/zlib.h \
src/common/blowfish.cpp \
src/common/detour/DetourAlloc.cpp \
src/common/detour/DetourCommon.cpp \
src/common/detour/DetourNavMesh.cpp \
src/common/detour/DetourNavMeshBuilder.cpp \
src/common/detour/DetourNavMeshQuery.cpp \
src/common/detour/DetourNode.cpp \
src/common/kernel.cpp \
src/common/malloc.cpp \
src/common/md52.cpp \
src/common/showmsg.cpp \
src/common/socket.cpp \
src/common/sql.cpp \
src/common/strlib.cpp \
src/common/taskmgr.cpp \
src/common/timer.cpp \
src/common/utils.cpp \
src/common/zlib.cpp 

SRC_MAP = \
src/map/ability.h \
src/map/ai/ai_automaton_dummy.h \
src/map/ai/ai_char_charm.h \
src/map/ai/ai_char_gm.h \
src/map/ai/ai_char_normal.h \
src/map/ai/ai_char_prisoner.h \
src/map/ai/ai_general.h \
src/map/ai/ai_mob_dummy.h \
src/map/ai/ai_npc_dummy.h \
src/map/ai/ai_pet_dummy.h \
src/map/ai/ai_ultimate_summon.h \
src/map/ai/helpers/pathfind.h \
src/map/ai/helpers/targetfind.h \
src/map/ai/states/ability_state.h \
src/map/ai/states/attack_state.h \
src/map/ai/states/item_state.h \
src/map/ai/states/magic_state.h \
src/map/ai/states/mobskill_state.h \
src/map/ai/states/range_state.h \
src/map/ai/states/state.h \
src/map/ai/states/weaponskill_state.h \
src/map/alliance.h \
src/map/blue_spell.h \
src/map/blue_trait.h \
src/map/guild.h \
src/map/message.h \
src/map/commandhandler.h \
src/map/conquest_system.h \
src/map/enmity_container.h \
src/map/entities/automatonentity.h \
src/map/entities/baseentity.h \
src/map/entities/battleentity.h \
src/map/entities/charentity.h \
src/map/entities/mobentity.h \
src/map/entities/npcentity.h \
src/map/entities/petentity.h \
src/map/grades.h \
src/map/battlefield.h \
src/map/battlefield_handler.h \
src/map/instance.h \
src/map/instance_loader.h \
src/map/items/item.h \
src/map/items/item_armor.h \
src/map/items/item_currency.h \
src/map/items/item_fish.h \
src/map/items/item_furnishing.h \
src/map/items/item_general.h \
src/map/items/item_linkshell.h \
src/map/items/item_puppet.h \
src/map/items/item_shop.h \
src/map/items/item_usable.h \
src/map/items/item_weapon.h \
src/map/item_container.h \
src/map/latent_effect.h \
src/map/latent_effect_container.h \
src/map/linkshell.h \
src/map/lua/luautils.h \
src/map/lua/lua_ability.h \
src/map/lua/lua_action.h \
src/map/lua/lua_baseentity.h \
src/map/lua/lua_battlefield.h \
src/map/lua/lua_instance.h \
src/map/lua/lua_item.h \
src/map/lua/lua_mobskill.h \
src/map/lua/lua_region.h \
src/map/lua/lua_spell.h \
src/map/lua/lua_statuseffect.h \
src/map/lua/lua_trade_container.h \
src/map/lua/lua_zone.h \
src/map/map.h \
src/map/merit.h \
src/map/mobskill.h \
src/map/mob_spell_container.h \
src/map/mob_spell_list.h \
src/map/modifier.h \
src/map/mob_modifier.h \
src/map/navmesh.h \
src/map/packets/action.h \
src/map/packets/auction_house.h \
src/map/packets/basic.h \
src/map/packets/bazaar_confirmation.h \
src/map/packets/bazaar_purchase.h \
src/map/packets/bazaar_check.h \
src/map/packets/bazaar_close.h \
src/map/packets/bazaar_item.h \
src/map/packets/bazaar_message.h \
src/map/packets/blacklist.h \
src/map/packets/campaing_map.h \
src/map/packets/caught_fish.h \
src/map/packets/char.h \
src/map/packets/char_abilities.h \
src/map/packets/char_appearance.h \
src/map/packets/char_check.h \
src/map/packets/char_emotion.h \
src/map/packets/char_equip.h \
src/map/packets/char_health.h \
src/map/packets/char_job_extra.h \
src/map/packets/char_jobs.h \
src/map/packets/char_recast.h \
src/map/packets/char_skills.h \
src/map/packets/char_spells.h \
src/map/packets/char_stats.h \
src/map/packets/char_sync.h \
src/map/packets/char_update.h \
src/map/packets/chat_message.h \
src/map/packets/chocobo_digging.h \
src/map/packets/change_music.h \
src/map/packets/conquest_map.h \
src/map/packets/cs_position.h \
src/map/packets/currency1.h \
src/map/packets/currency2.h \
src/map/packets/delivery_box.h \
src/map/packets/downloading_data.h \
src/map/packets/entity_update.h \
src/map/packets/event.h \
src/map/packets/event_string.h \
src/map/packets/event_update.h \
src/map/packets/entity_animation.h \
src/map/packets/fishing.h \
src/map/packets/guild_menu.h \
src/map/packets/guild_menu_buy.h \
src/map/packets/guild_menu_sell.h \
src/map/packets/guild_menu_buy_update.h \
src/map/packets/guild_menu_sell_update.h \
src/map/packets/instance_entry.h \
src/map/packets/inventory_assign.h \
src/map/packets/inventory_finish.h \
src/map/packets/inventory_item.h \
src/map/packets/inventory_modify.h \
src/map/packets/inventory_size.h \
src/map/packets/key_items.h \
src/map/packets/linkshell_message.h \
src/map/packets/linkshell_equip.h \
src/map/packets/lock_on.h \
src/map/packets/macroequipset.h \
src/map/packets/menu_config.h \
src/map/packets/menu_merit.h \
src/map/packets/menu_mog.h \
src/map/packets/menu_raisetractor.h \
src/map/packets/merit_points_categories.h \
src/map/packets/message_basic.h \
src/map/packets/message_debug.h \
src/map/packets/message_special.h \
src/map/packets/message_standard.h \
src/map/packets/message_system.h \
src/map/packets/message_text.h \
src/map/packets/party_effects.h \
src/map/packets/status_effects.h \
src/map/packets/synth_result.h \
src/map/packets/synth_suggestion.h \
src/map/packets/trade_action.h \
src/map/packets/trade_item.h \
src/map/packets/trade_request.h \
src/map/packets/trade_update.h \
src/map/packets/world_pass.h \
src/map/packets/party_define.h \
src/map/packets/party_invite.h \
src/map/packets/party_map.h \
src/map/packets/party_member_update.h \
src/map/packets/party_search.h \
src/map/packets/pet_sync.h \
src/map/packets/position.h \
src/map/packets/quest_mission_log.h \
src/map/packets/release.h \
src/map/packets/server_ip.h \
src/map/packets/server_message.h \
src/map/packets/shop_appraise.h \
src/map/packets/shop_buy.h \
src/map/packets/shop_items.h \
src/map/packets/shop_menu.h \
src/map/packets/stop_downloading.h \
src/map/packets/synth_animation.h \
src/map/packets/synth_message.h \
src/map/packets/treasure_find_item.h \
src/map/packets/treasure_lot_item.h \
src/map/packets/entity_visual.h \
src/map/packets/weather.h \
src/map/packets/wide_scan.h \
src/map/packets/wide_scan_track.h \
src/map/packets/zone_in.h \
src/map/packets/zone_visited.h \
src/map/packet_system.h \
src/map/party.h \
src/map/recast_container.h \
src/map/region.h \
src/map/spell.h \
src/map/status_effect.h \
src/map/status_effect_container.h \
src/map/time_server.h \
src/map/trade_container.h \
src/map/trait.h \
src/map/transport.h \
src/map/treasure_pool.h \
src/map/universal_container.h \
src/map/utils/battleutils.h \
src/map/utils/attackutils.h \
src/map/utils/blacklistutils.h \
src/map/utils/blueutils.h \
src/map/utils/charutils.h \
src/map/utils/fishingutils.h \
src/map/utils/guildutils.h \
src/map/utils/battlefieldutils.h \
src/map/utils/instanceutils.h \
src/map/utils/itemutils.h \
src/map/utils/jailutils.h \
src/map/utils/mobutils.h \
src/map/utils/petutils.h \
src/map/utils/puppetutils.h \
src/map/utils/synthutils.h \
src/map/utils/zoneutils.h \
src/map/vana_time.h \
src/map/weapon_skill.h \
src/map/zone.h \
src/map/attack.h \
src/map/attackround.h \
src/map/zone_entities.h \
src/map/zone_instance.h \
src/map/ability.cpp \
src/map/ai/ai_automaton_dummy.cpp \
src/map/ai/ai_char_charm.cpp \
src/map/ai/ai_char_gm.cpp \
src/map/ai/ai_char_normal.cpp \
src/map/ai/ai_char_prisoner.cpp \
src/map/ai/ai_general.cpp \
src/map/ai/ai_mob_dummy.cpp \
src/map/ai/ai_npc_dummy.cpp \
src/map/ai/ai_pet_dummy.cpp \
src/map/ai/ai_ultimate_summon.cpp \
src/map/ai/helpers/pathfind.cpp \
src/map/ai/helpers/targetfind.cpp \
src/map/ai/states/ability_state.cpp \
src/map/ai/states/attack_state.cpp \
src/map/ai/states/item_state.cpp \
src/map/ai/states/magic_state.cpp \
src/map/ai/states/mobskill_state.cpp \
src/map/ai/states/range_state.cpp \
src/map/ai/states/state.cpp \
src/map/ai/states/weaponskill_state.cpp \
src/map/alliance.cpp \
src/map/blue_spell.cpp \
src/map/blue_trait.cpp \
src/map/guild.cpp \
src/map/message.cpp \
src/map/commandhandler.cpp \
src/map/conquest_system.cpp \
src/map/enmity_container.cpp \
src/map/entities/automatonentity.cpp \
src/map/entities/baseentity.cpp \
src/map/entities/battleentity.cpp \
src/map/entities/charentity.cpp \
src/map/entities/mobentity.cpp \
src/map/entities/npcentity.cpp \
src/map/entities/petentity.cpp \
src/map/grades.cpp \
src/map/battlefield.cpp \
src/map/battlefield_handler.cpp \
src/map/instance.cpp \
src/map/instance_loader.cpp \
src/map/items/item.cpp \
src/map/items/item_armor.cpp \
src/map/items/item_currency.cpp \
src/map/items/item_fish.cpp \
src/map/items/item_furnishing.cpp \
src/map/items/item_general.cpp \
src/map/items/item_linkshell.cpp \
src/map/items/item_puppet.cpp \
src/map/items/item_shop.cpp \
src/map/items/item_usable.cpp \
src/map/items/item_weapon.cpp \
src/map/item_container.cpp \
src/map/latent_effect.cpp \
src/map/latent_effect_container.cpp \
src/map/linkshell.cpp \
src/map/lua/luautils.cpp \
src/map/lua/lua_ability.cpp \
src/map/lua/lua_action.cpp \
src/map/lua/lua_baseentity.cpp \
src/map/lua/lua_battlefield.cpp \
src/map/lua/lua_instance.cpp \
src/map/lua/lua_item.cpp \
src/map/lua/lua_mobskill.cpp \
src/map/lua/lua_region.cpp \
src/map/lua/lua_spell.cpp \
src/map/lua/lua_statuseffect.cpp \
src/map/lua/lua_trade_container.cpp \
src/map/lua/lua_zone.cpp \
src/map/map.cpp \
src/map/merit.cpp \
src/map/mobskill.cpp \
src/map/mob_spell_container.cpp \
src/map/mob_spell_list.cpp \
src/map/modifier.cpp \
src/map/navmesh.cpp \
src/map/packets/action.cpp \
src/map/packets/auction_house.cpp \
src/map/packets/bazaar_confirmation.cpp \
src/map/packets/bazaar_purchase.cpp \
src/map/packets/bazaar_check.cpp \
src/map/packets/bazaar_close.cpp \
src/map/packets/bazaar_item.cpp \
src/map/packets/bazaar_message.cpp \
src/map/packets/blacklist.cpp \
src/map/packets/campaing_map.cpp \
src/map/packets/caught_fish.cpp \
src/map/packets/char.cpp \
src/map/packets/char_abilities.cpp \
src/map/packets/char_appearance.cpp \
src/map/packets/char_check.cpp \
src/map/packets/char_emotion.cpp \
src/map/packets/char_equip.cpp \
src/map/packets/char_health.cpp \
src/map/packets/char_job_extra.cpp \
src/map/packets/char_jobs.cpp \
src/map/packets/char_recast.cpp \
src/map/packets/char_skills.cpp \
src/map/packets/char_spells.cpp \
src/map/packets/char_stats.cpp \
src/map/packets/char_sync.cpp \
src/map/packets/char_update.cpp \
src/map/packets/chat_message.cpp \
src/map/packets/chocobo_digging.cpp \
src/map/packets/change_music.cpp \
src/map/packets/conquest_map.cpp \
src/map/packets/cs_position.cpp \
src/map/packets/currency1.cpp \
src/map/packets/currency2.cpp \
src/map/packets/delivery_box.cpp \
src/map/packets/downloading_data.cpp \
src/map/packets/entity_update.cpp \
src/map/packets/event.cpp \
src/map/packets/event_string.cpp \
src/map/packets/event_update.cpp \
src/map/packets/entity_animation.cpp \
src/map/packets/fishing.cpp \
src/map/packets/guild_menu.cpp \
src/map/packets/guild_menu_buy.cpp \
src/map/packets/guild_menu_sell.cpp \
src/map/packets/guild_menu_buy_update.cpp \
src/map/packets/guild_menu_sell_update.cpp \
src/map/packets/instance_entry.cpp \
src/map/packets/inventory_assign.cpp \
src/map/packets/inventory_finish.cpp \
src/map/packets/inventory_item.cpp \
src/map/packets/inventory_modify.cpp \
src/map/packets/inventory_size.cpp \
src/map/packets/key_items.cpp \
src/map/packets/linkshell_message.cpp \
src/map/packets/linkshell_equip.cpp \
src/map/packets/lock_on.cpp \
src/map/packets/macroequipset.cpp \
src/map/packets/menu_config.cpp \
src/map/packets/menu_merit.cpp \
src/map/packets/menu_mog.cpp \
src/map/packets/menu_raisetractor.cpp \
src/map/packets/merit_points_categories.cpp \
src/map/packets/message_basic.cpp \
src/map/packets/message_debug.cpp \
src/map/packets/message_special.cpp \
src/map/packets/message_standard.cpp \
src/map/packets/message_system.cpp \
src/map/packets/message_text.cpp \
src/map/packets/party_effects.cpp \
src/map/packets/status_effects.cpp \
src/map/packets/synth_result.cpp \
src/map/packets/synth_suggestion.cpp \
src/map/packets/trade_action.cpp \
src/map/packets/trade_item.cpp \
src/map/packets/trade_request.cpp \
src/map/packets/trade_update.cpp \
src/map/packets/world_pass.cpp \
src/map/packets/party_define.cpp \
src/map/packets/party_invite.cpp \
src/map/packets/party_map.cpp \
src/map/packets/party_member_update.cpp \
src/map/packets/party_search.cpp \
src/map/packets/pet_sync.cpp \
src/map/packets/position.cpp \
src/map/packets/quest_mission_log.cpp \
src/map/packets/release.cpp \
src/map/packets/server_ip.cpp \
src/map/packets/server_message.cpp \
src/map/packets/shop_appraise.cpp \
src/map/packets/shop_buy.cpp \
src/map/packets/shop_items.cpp \
src/map/packets/shop_menu.cpp \
src/map/packets/stop_downloading.cpp \
src/map/packets/synth_animation.cpp \
src/map/packets/synth_message.cpp \
src/map/packets/treasure_find_item.cpp \
src/map/packets/treasure_lot_item.cpp \
src/map/packets/entity_visual.cpp \
src/map/packets/weather.cpp \
src/map/packets/wide_scan.cpp \
src/map/packets/wide_scan_track.cpp \
src/map/packets/zone_in.cpp \
src/map/packets/zone_visited.cpp \
src/map/packet_system.cpp \
src/map/party.cpp \
src/map/recast_container.cpp \
src/map/region.cpp \
src/map/spell.cpp \
src/map/status_effect.cpp \
src/map/status_effect_container.cpp \
src/map/time_server.cpp \
src/map/trade_container.cpp \
src/map/trait.cpp \
src/map/transport.cpp \
src/map/treasure_pool.cpp \
src/map/universal_container.cpp \
src/map/utils/attackutils.cpp \
src/map/utils/battleutils.cpp \
src/map/utils/blacklistutils.cpp \
src/map/utils/blueutils.cpp \
src/map/utils/charutils.cpp \
src/map/utils/fishingutils.cpp \
src/map/utils/guildutils.cpp \
src/map/utils/battlefieldutils.cpp \
src/map/utils/instanceutils.cpp \
src/map/utils/itemutils.cpp \
src/map/utils/jailutils.cpp \
src/map/utils/mobutils.cpp \
src/map/utils/petutils.cpp \
src/map/utils/puppetutils.cpp \
src/map/utils/synthutils.cpp \
src/map/utils/zoneutils.cpp \
src/map/vana_time.cpp \
src/map/weapon_skill.cpp \
src/map/zone.cpp \
src/map/attack.cpp \
src/map/attackround.cpp \
src/map/zone_entities.cpp \
src/map/zone_instance.cpp 

SRC_LOGIN = \
src/login/account.h \
src/login/message_server.h \
src/login/lobby.h \
src/login/login.h \
src/login/login_auth.h \
src/login/login_session.h \
src/login/account.cpp \
src/login/message_server.cpp \
src/login/lobby.cpp \
src/login/login.cpp \
src/login/login_auth.cpp \
src/login/login_session.cpp 

SRC_SEARCH_COMMON = \
src/common/blowfish.cpp \
src/common/malloc.cpp \
src/common/md52.cpp \
src/common/showmsg.cpp \
src/common/sql.cpp \
src/common/strlib.cpp \
src/common/taskmgr.cpp \
src/common/timer.cpp \
src/common/utils.cpp \
src/common/blowfish.h \
src/common/cbasetypes.h \
src/common/malloc.h \
src/common/md52.h \
src/common/mmo.h \
src/common/showmsg.h \
src/common/socket.h \
src/common/sql.h \
src/common/strlib.h \
src/common/taskmgr.h \
src/common/timer.h \
src/common/utils.h 

SRC_SEARCH = \
src/search/data_loader.cpp \
src/search/packets/auction_history.cpp \
src/search/packets/auction_list.cpp \
src/search/packets/linkshell_list.cpp \
src/search/packets/party_list.cpp \
src/search/packets/search_comment.cpp \
src/search/packets/search_list.cpp \
src/search/search.cpp \
src/search/tcp_request.cpp \
src/search/data_loader.h \
src/search/packets/auction_history.h \
src/search/packets/auction_list.h \
src/search/packets/linkshell_list.h \
src/search/packets/party_list.h \
src/search/packets/search_comment.h \
src/search/packets/search_list.h \
src/search/search.h \
src/search/tcp_request.h 

SRC_DARKSTAR = $(SRC_COMMON)
SRC_ALL = $(SRC_DARKSTAR)
CFLAGS_ALL = $(DARKSTAR_CFLAGS) $(LUA_CFLAGS) $(MYSQL_CFLAGS)
CPPFLAGS_ALL = $(DARKSTAR_CPPFLAGS) $(am__append_3) $(am__append_4) \
	$(am__append_5)
CXXFLAGS_ALL = $(DARKSTAR_CXXFLAGS)
LIBS_ALL = $(DARKSTAR_LIBS) $(LUA_LIBS) $(MYSQL_LDFLAGS) -lzmq \
	$(am__append_1) $(am__append_2)
LDFLAGS_ALL = $(DARKSTAR_LDFLAGS)
dsgame_SOURCES = $(SRC_ALL) $(SRC_MAP)
dsgame_CXXFLAGS = $(CFLAGS_ALL) $(CXXFLAGS_ALL)
dsgame_CPPFLAGS = $(CPPFLAGS_ALL) -DdsUDPSERV
dsgame_CFLAGS = $(CFLAGS_ALL)
dsgame_LDFLAGS = $(LDFLAGS_ALL)
dsgame_LDADD = $(LIBS_ALL)
dsconnect_SOURCES = $(SRC_ALL) $(SRC_LOGIN)
dsconnect_CXXFLAGS = $(CFLAGS_ALL) $(CXXFLAGS_ALL)
dsconnect_CPPFLAGS = $(CPPFLAGS_ALL) -DdsTCPSERV
dsconnect_CFLAGS = $(CFLAGS_ALL)
dsconnect_LDFLAGS = $(LDFLAGS_ALL)
dsconnect_LDADD = $(LIBS_ALL)
dssearch_SOURCES = $(SRC_SEARCH_COMMON) $(SRC_SEARCH)
dssearch_CXXFLAGS = $(CFLAGS_ALL) $(CXXFLAGS_ALL)
dssearch_CPPFLAGS = $(CPPFLAGS_ALL)
dssearch_CFLAGS = $(CFLAGS_ALL)
dssearch_LDFLAGS = $(LDFLAGS_ALL)
dssearch_LDADD = $(LIBS_ALL)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/sources.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/sources.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

src/common/config.h: src/common/stamp-h1
	@test -f $@ || rm -f src/common/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/common/stamp-h1

src/common/stamp-h1: $(top_srcdir)/src/common/config.h.in $(top_builddir)/config.status
	@rm -f src/common/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/common/config.h
$(top_srcdir)/src/common/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f src/common/stamp-h1
	touch $@

distclean-hdr:
	-rm -f src/common/config.h src/common/stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

dsconnect$(EXEEXT): $(dsconnect_OBJECTS) $(dsconnect_DEPENDENCIES) $(EXTRA_dsconnect_DEPENDENCIES) 
	@rm -f dsconnect$(EXEEXT)
	$(AM_V_CXXLD)$(dsconnect_LINK) $(dsconnect_OBJECTS) $(dsconnect_LDADD) $(LIBS)

dsgame$(EXEEXT): $(dsgame_OBJECTS) $(dsgame_DEPENDENCIES) $(EXTRA_dsgame_DEPENDENCIES) 
	@rm -f dsgame$(EXEEXT)
	$(AM_V_CXXLD)$(dsgame_LINK) $(dsgame_OBJECTS) $(dsgame_LDADD) $(LIBS)

dssearch$(EXEEXT): $(dssearch_OBJECTS) $(dssearch_DEPENDENCIES) $(EXTRA_dssearch_DEPENDENCIES) 
	@rm -f dssearch$(EXEEXT)
	$(AM_V_CXXLD)$(dssearch_LINK) $(dssearch_OBJECTS) $(dssearch_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dsconnect-DetourAlloc.Po
include ./$(DEPDIR)/dsconnect-DetourCommon.Po
include ./$(DEPDIR)/dsconnect-DetourNavMesh.Po
include ./$(DEPDIR)/dsconnect-DetourNavMeshBuilder.Po
include ./$(DEPDIR)/dsconnect-DetourNavMeshQuery.Po
include ./$(DEPDIR)/dsconnect-DetourNode.Po
include ./$(DEPDIR)/dsconnect-account.Po
include ./$(DEPDIR)/dsconnect-blowfish.Po
include ./$(DEPDIR)/dsconnect-kernel.Po
include ./$(DEPDIR)/dsconnect-lobby.Po
include ./$(DEPDIR)/dsconnect-login.Po
include ./$(DEPDIR)/dsconnect-login_auth.Po
include ./$(DEPDIR)/dsconnect-login_session.Po
include ./$(DEPDIR)/dsconnect-malloc.Po
include ./$(DEPDIR)/dsconnect-md52.Po
include ./$(DEPDIR)/dsconnect-message_server.Po
include ./$(DEPDIR)/dsconnect-showmsg.Po
include ./$(DEPDIR)/dsconnect-socket.Po
include ./$(DEPDIR)/dsconnect-sql.Po
include ./$(DEPDIR)/dsconnect-strlib.Po
include ./$(DEPDIR)/dsconnect-taskmgr.Po
include ./$(DEPDIR)/dsconnect-timer.Po
include ./$(DEPDIR)/dsconnect-utils.Po
include ./$(DEPDIR)/dsconnect-zlib.Po
include ./$(DEPDIR)/dsgame-DetourAlloc.Po
include ./$(DEPDIR)/dsgame-DetourCommon.Po
include ./$(DEPDIR)/dsgame-DetourNavMesh.Po
include ./$(DEPDIR)/dsgame-DetourNavMeshBuilder.Po
include ./$(DEPDIR)/dsgame-DetourNavMeshQuery.Po
include ./$(DEPDIR)/dsgame-DetourNode.Po
include ./$(DEPDIR)/dsgame-ability.Po
include ./$(DEPDIR)/dsgame-ability_state.Po
include ./$(DEPDIR)/dsgame-action.Po
include ./$(DEPDIR)/dsgame-ai_automaton_dummy.Po
include ./$(DEPDIR)/dsgame-ai_char_charm.Po
include ./$(DEPDIR)/dsgame-ai_char_gm.Po
include ./$(DEPDIR)/dsgame-ai_char_normal.Po
include ./$(DEPDIR)/dsgame-ai_char_prisoner.Po
include ./$(DEPDIR)/dsgame-ai_general.Po
include ./$(DEPDIR)/dsgame-ai_mob_dummy.Po
include ./$(DEPDIR)/dsgame-ai_npc_dummy.Po
include ./$(DEPDIR)/dsgame-ai_pet_dummy.Po
include ./$(DEPDIR)/dsgame-ai_ultimate_summon.Po
include ./$(DEPDIR)/dsgame-alliance.Po
include ./$(DEPDIR)/dsgame-attack.Po
include ./$(DEPDIR)/dsgame-attack_state.Po
include ./$(DEPDIR)/dsgame-attackround.Po
include ./$(DEPDIR)/dsgame-attackutils.Po
include ./$(DEPDIR)/dsgame-auction_house.Po
include ./$(DEPDIR)/dsgame-automatonentity.Po
include ./$(DEPDIR)/dsgame-baseentity.Po
include ./$(DEPDIR)/dsgame-battleentity.Po
include ./$(DEPDIR)/dsgame-battlefield.Po
include ./$(DEPDIR)/dsgame-battlefield_handler.Po
include ./$(DEPDIR)/dsgame-battlefieldutils.Po
include ./$(DEPDIR)/dsgame-battleutils.Po
include ./$(DEPDIR)/dsgame-bazaar_check.Po
include ./$(DEPDIR)/dsgame-bazaar_close.Po
include ./$(DEPDIR)/dsgame-bazaar_confirmation.Po
include ./$(DEPDIR)/dsgame-bazaar_item.Po
include ./$(DEPDIR)/dsgame-bazaar_message.Po
include ./$(DEPDIR)/dsgame-bazaar_purchase.Po
include ./$(DEPDIR)/dsgame-blacklist.Po
include ./$(DEPDIR)/dsgame-blacklistutils.Po
include ./$(DEPDIR)/dsgame-blowfish.Po
include ./$(DEPDIR)/dsgame-blue_spell.Po
include ./$(DEPDIR)/dsgame-blue_trait.Po
include ./$(DEPDIR)/dsgame-blueutils.Po
include ./$(DEPDIR)/dsgame-campaing_map.Po
include ./$(DEPDIR)/dsgame-caught_fish.Po
include ./$(DEPDIR)/dsgame-change_music.Po
include ./$(DEPDIR)/dsgame-char.Po
include ./$(DEPDIR)/dsgame-char_abilities.Po
include ./$(DEPDIR)/dsgame-char_appearance.Po
include ./$(DEPDIR)/dsgame-char_check.Po
include ./$(DEPDIR)/dsgame-char_emotion.Po
include ./$(DEPDIR)/dsgame-char_equip.Po
include ./$(DEPDIR)/dsgame-char_health.Po
include ./$(DEPDIR)/dsgame-char_job_extra.Po
include ./$(DEPDIR)/dsgame-char_jobs.Po
include ./$(DEPDIR)/dsgame-char_recast.Po
include ./$(DEPDIR)/dsgame-char_skills.Po
include ./$(DEPDIR)/dsgame-char_spells.Po
include ./$(DEPDIR)/dsgame-char_stats.Po
include ./$(DEPDIR)/dsgame-char_sync.Po
include ./$(DEPDIR)/dsgame-char_update.Po
include ./$(DEPDIR)/dsgame-charentity.Po
include ./$(DEPDIR)/dsgame-charutils.Po
include ./$(DEPDIR)/dsgame-chat_message.Po
include ./$(DEPDIR)/dsgame-chocobo_digging.Po
include ./$(DEPDIR)/dsgame-commandhandler.Po
include ./$(DEPDIR)/dsgame-conquest_map.Po
include ./$(DEPDIR)/dsgame-conquest_system.Po
include ./$(DEPDIR)/dsgame-cs_position.Po
include ./$(DEPDIR)/dsgame-currency1.Po
include ./$(DEPDIR)/dsgame-currency2.Po
include ./$(DEPDIR)/dsgame-delivery_box.Po
include ./$(DEPDIR)/dsgame-downloading_data.Po
include ./$(DEPDIR)/dsgame-enmity_container.Po
include ./$(DEPDIR)/dsgame-entity_animation.Po
include ./$(DEPDIR)/dsgame-entity_update.Po
include ./$(DEPDIR)/dsgame-entity_visual.Po
include ./$(DEPDIR)/dsgame-event.Po
include ./$(DEPDIR)/dsgame-event_string.Po
include ./$(DEPDIR)/dsgame-event_update.Po
include ./$(DEPDIR)/dsgame-fishing.Po
include ./$(DEPDIR)/dsgame-fishingutils.Po
include ./$(DEPDIR)/dsgame-grades.Po
include ./$(DEPDIR)/dsgame-guild.Po
include ./$(DEPDIR)/dsgame-guild_menu.Po
include ./$(DEPDIR)/dsgame-guild_menu_buy.Po
include ./$(DEPDIR)/dsgame-guild_menu_buy_update.Po
include ./$(DEPDIR)/dsgame-guild_menu_sell.Po
include ./$(DEPDIR)/dsgame-guild_menu_sell_update.Po
include ./$(DEPDIR)/dsgame-guildutils.Po
include ./$(DEPDIR)/dsgame-instance.Po
include ./$(DEPDIR)/dsgame-instance_entry.Po
include ./$(DEPDIR)/dsgame-instance_loader.Po
include ./$(DEPDIR)/dsgame-instanceutils.Po
include ./$(DEPDIR)/dsgame-inventory_assign.Po
include ./$(DEPDIR)/dsgame-inventory_finish.Po
include ./$(DEPDIR)/dsgame-inventory_item.Po
include ./$(DEPDIR)/dsgame-inventory_modify.Po
include ./$(DEPDIR)/dsgame-inventory_size.Po
include ./$(DEPDIR)/dsgame-item.Po
include ./$(DEPDIR)/dsgame-item_armor.Po
include ./$(DEPDIR)/dsgame-item_container.Po
include ./$(DEPDIR)/dsgame-item_currency.Po
include ./$(DEPDIR)/dsgame-item_fish.Po
include ./$(DEPDIR)/dsgame-item_furnishing.Po
include ./$(DEPDIR)/dsgame-item_general.Po
include ./$(DEPDIR)/dsgame-item_linkshell.Po
include ./$(DEPDIR)/dsgame-item_puppet.Po
include ./$(DEPDIR)/dsgame-item_shop.Po
include ./$(DEPDIR)/dsgame-item_state.Po
include ./$(DEPDIR)/dsgame-item_usable.Po
include ./$(DEPDIR)/dsgame-item_weapon.Po
include ./$(DEPDIR)/dsgame-itemutils.Po
include ./$(DEPDIR)/dsgame-jailutils.Po
include ./$(DEPDIR)/dsgame-kernel.Po
include ./$(DEPDIR)/dsgame-key_items.Po
include ./$(DEPDIR)/dsgame-latent_effect.Po
include ./$(DEPDIR)/dsgame-latent_effect_container.Po
include ./$(DEPDIR)/dsgame-linkshell.Po
include ./$(DEPDIR)/dsgame-linkshell_equip.Po
include ./$(DEPDIR)/dsgame-linkshell_message.Po
include ./$(DEPDIR)/dsgame-lock_on.Po
include ./$(DEPDIR)/dsgame-lua_ability.Po
include ./$(DEPDIR)/dsgame-lua_action.Po
include ./$(DEPDIR)/dsgame-lua_baseentity.Po
include ./$(DEPDIR)/dsgame-lua_battlefield.Po
include ./$(DEPDIR)/dsgame-lua_instance.Po
include ./$(DEPDIR)/dsgame-lua_item.Po
include ./$(DEPDIR)/dsgame-lua_mobskill.Po
include ./$(DEPDIR)/dsgame-lua_region.Po
include ./$(DEPDIR)/dsgame-lua_spell.Po
include ./$(DEPDIR)/dsgame-lua_statuseffect.Po
include ./$(DEPDIR)/dsgame-lua_trade_container.Po
include ./$(DEPDIR)/dsgame-lua_zone.Po
include ./$(DEPDIR)/dsgame-luautils.Po
include ./$(DEPDIR)/dsgame-macroequipset.Po
include ./$(DEPDIR)/dsgame-magic_state.Po
include ./$(DEPDIR)/dsgame-malloc.Po
include ./$(DEPDIR)/dsgame-map.Po
include ./$(DEPDIR)/dsgame-md52.Po
include ./$(DEPDIR)/dsgame-menu_config.Po
include ./$(DEPDIR)/dsgame-menu_merit.Po
include ./$(DEPDIR)/dsgame-menu_mog.Po
include ./$(DEPDIR)/dsgame-menu_raisetractor.Po
include ./$(DEPDIR)/dsgame-merit.Po
include ./$(DEPDIR)/dsgame-merit_points_categories.Po
include ./$(DEPDIR)/dsgame-message.Po
include ./$(DEPDIR)/dsgame-message_basic.Po
include ./$(DEPDIR)/dsgame-message_debug.Po
include ./$(DEPDIR)/dsgame-message_special.Po
include ./$(DEPDIR)/dsgame-message_standard.Po
include ./$(DEPDIR)/dsgame-message_system.Po
include ./$(DEPDIR)/dsgame-message_text.Po
include ./$(DEPDIR)/dsgame-mob_spell_container.Po
include ./$(DEPDIR)/dsgame-mob_spell_list.Po
include ./$(DEPDIR)/dsgame-mobentity.Po
include ./$(DEPDIR)/dsgame-mobskill.Po
include ./$(DEPDIR)/dsgame-mobskill_state.Po
include ./$(DEPDIR)/dsgame-mobutils.Po
include ./$(DEPDIR)/dsgame-modifier.Po
include ./$(DEPDIR)/dsgame-navmesh.Po
include ./$(DEPDIR)/dsgame-npcentity.Po
include ./$(DEPDIR)/dsgame-packet_system.Po
include ./$(DEPDIR)/dsgame-party.Po
include ./$(DEPDIR)/dsgame-party_define.Po
include ./$(DEPDIR)/dsgame-party_effects.Po
include ./$(DEPDIR)/dsgame-party_invite.Po
include ./$(DEPDIR)/dsgame-party_map.Po
include ./$(DEPDIR)/dsgame-party_member_update.Po
include ./$(DEPDIR)/dsgame-party_search.Po
include ./$(DEPDIR)/dsgame-pathfind.Po
include ./$(DEPDIR)/dsgame-pet_sync.Po
include ./$(DEPDIR)/dsgame-petentity.Po
include ./$(DEPDIR)/dsgame-petutils.Po
include ./$(DEPDIR)/dsgame-position.Po
include ./$(DEPDIR)/dsgame-puppetutils.Po
include ./$(DEPDIR)/dsgame-quest_mission_log.Po
include ./$(DEPDIR)/dsgame-range_state.Po
include ./$(DEPDIR)/dsgame-recast_container.Po
include ./$(DEPDIR)/dsgame-region.Po
include ./$(DEPDIR)/dsgame-release.Po
include ./$(DEPDIR)/dsgame-server_ip.Po
include ./$(DEPDIR)/dsgame-server_message.Po
include ./$(DEPDIR)/dsgame-shop_appraise.Po
include ./$(DEPDIR)/dsgame-shop_buy.Po
include ./$(DEPDIR)/dsgame-shop_items.Po
include ./$(DEPDIR)/dsgame-shop_menu.Po
include ./$(DEPDIR)/dsgame-showmsg.Po
include ./$(DEPDIR)/dsgame-socket.Po
include ./$(DEPDIR)/dsgame-spell.Po
include ./$(DEPDIR)/dsgame-sql.Po
include ./$(DEPDIR)/dsgame-state.Po
include ./$(DEPDIR)/dsgame-status_effect.Po
include ./$(DEPDIR)/dsgame-status_effect_container.Po
include ./$(DEPDIR)/dsgame-status_effects.Po
include ./$(DEPDIR)/dsgame-stop_downloading.Po
include ./$(DEPDIR)/dsgame-strlib.Po
include ./$(DEPDIR)/dsgame-synth_animation.Po
include ./$(DEPDIR)/dsgame-synth_message.Po
include ./$(DEPDIR)/dsgame-synth_result.Po
include ./$(DEPDIR)/dsgame-synth_suggestion.Po
include ./$(DEPDIR)/dsgame-synthutils.Po
include ./$(DEPDIR)/dsgame-targetfind.Po
include ./$(DEPDIR)/dsgame-taskmgr.Po
include ./$(DEPDIR)/dsgame-time_server.Po
include ./$(DEPDIR)/dsgame-timer.Po
include ./$(DEPDIR)/dsgame-trade_action.Po
include ./$(DEPDIR)/dsgame-trade_container.Po
include ./$(DEPDIR)/dsgame-trade_item.Po
include ./$(DEPDIR)/dsgame-trade_request.Po
include ./$(DEPDIR)/dsgame-trade_update.Po
include ./$(DEPDIR)/dsgame-trait.Po
include ./$(DEPDIR)/dsgame-transport.Po
include ./$(DEPDIR)/dsgame-treasure_find_item.Po
include ./$(DEPDIR)/dsgame-treasure_lot_item.Po
include ./$(DEPDIR)/dsgame-treasure_pool.Po
include ./$(DEPDIR)/dsgame-universal_container.Po
include ./$(DEPDIR)/dsgame-utils.Po
include ./$(DEPDIR)/dsgame-vana_time.Po
include ./$(DEPDIR)/dsgame-weapon_skill.Po
include ./$(DEPDIR)/dsgame-weaponskill_state.Po
include ./$(DEPDIR)/dsgame-weather.Po
include ./$(DEPDIR)/dsgame-wide_scan.Po
include ./$(DEPDIR)/dsgame-wide_scan_track.Po
include ./$(DEPDIR)/dsgame-world_pass.Po
include ./$(DEPDIR)/dsgame-zlib.Po
include ./$(DEPDIR)/dsgame-zone.Po
include ./$(DEPDIR)/dsgame-zone_entities.Po
include ./$(DEPDIR)/dsgame-zone_in.Po
include ./$(DEPDIR)/dsgame-zone_instance.Po
include ./$(DEPDIR)/dsgame-zone_visited.Po
include ./$(DEPDIR)/dsgame-zoneutils.Po
include ./$(DEPDIR)/dssearch-auction_history.Po
include ./$(DEPDIR)/dssearch-auction_list.Po
include ./$(DEPDIR)/dssearch-blowfish.Po
include ./$(DEPDIR)/dssearch-data_loader.Po
include ./$(DEPDIR)/dssearch-linkshell_list.Po
include ./$(DEPDIR)/dssearch-malloc.Po
include ./$(DEPDIR)/dssearch-md52.Po
include ./$(DEPDIR)/dssearch-party_list.Po
include ./$(DEPDIR)/dssearch-search.Po
include ./$(DEPDIR)/dssearch-search_comment.Po
include ./$(DEPDIR)/dssearch-search_list.Po
include ./$(DEPDIR)/dssearch-showmsg.Po
include ./$(DEPDIR)/dssearch-sql.Po
include ./$(DEPDIR)/dssearch-strlib.Po
include ./$(DEPDIR)/dssearch-taskmgr.Po
include ./$(DEPDIR)/dssearch-tcp_request.Po
include ./$(DEPDIR)/dssearch-timer.Po
include ./$(DEPDIR)/dssearch-utils.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

dsconnect-blowfish.o: src/common/blowfish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-blowfish.o -MD -MP -MF $(DEPDIR)/dsconnect-blowfish.Tpo -c -o dsconnect-blowfish.o `test -f 'src/common/blowfish.cpp' || echo '$(srcdir)/'`src/common/blowfish.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-blowfish.Tpo $(DEPDIR)/dsconnect-blowfish.Po
#	$(AM_V_CXX)source='src/common/blowfish.cpp' object='dsconnect-blowfish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-blowfish.o `test -f 'src/common/blowfish.cpp' || echo '$(srcdir)/'`src/common/blowfish.cpp

dsconnect-blowfish.obj: src/common/blowfish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-blowfish.obj -MD -MP -MF $(DEPDIR)/dsconnect-blowfish.Tpo -c -o dsconnect-blowfish.obj `if test -f 'src/common/blowfish.cpp'; then $(CYGPATH_W) 'src/common/blowfish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/blowfish.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-blowfish.Tpo $(DEPDIR)/dsconnect-blowfish.Po
#	$(AM_V_CXX)source='src/common/blowfish.cpp' object='dsconnect-blowfish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-blowfish.obj `if test -f 'src/common/blowfish.cpp'; then $(CYGPATH_W) 'src/common/blowfish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/blowfish.cpp'; fi`

dsconnect-DetourAlloc.o: src/common/detour/DetourAlloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourAlloc.o -MD -MP -MF $(DEPDIR)/dsconnect-DetourAlloc.Tpo -c -o dsconnect-DetourAlloc.o `test -f 'src/common/detour/DetourAlloc.cpp' || echo '$(srcdir)/'`src/common/detour/DetourAlloc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourAlloc.Tpo $(DEPDIR)/dsconnect-DetourAlloc.Po
#	$(AM_V_CXX)source='src/common/detour/DetourAlloc.cpp' object='dsconnect-DetourAlloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourAlloc.o `test -f 'src/common/detour/DetourAlloc.cpp' || echo '$(srcdir)/'`src/common/detour/DetourAlloc.cpp

dsconnect-DetourAlloc.obj: src/common/detour/DetourAlloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourAlloc.obj -MD -MP -MF $(DEPDIR)/dsconnect-DetourAlloc.Tpo -c -o dsconnect-DetourAlloc.obj `if test -f 'src/common/detour/DetourAlloc.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourAlloc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourAlloc.Tpo $(DEPDIR)/dsconnect-DetourAlloc.Po
#	$(AM_V_CXX)source='src/common/detour/DetourAlloc.cpp' object='dsconnect-DetourAlloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourAlloc.obj `if test -f 'src/common/detour/DetourAlloc.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourAlloc.cpp'; fi`

dsconnect-DetourCommon.o: src/common/detour/DetourCommon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourCommon.o -MD -MP -MF $(DEPDIR)/dsconnect-DetourCommon.Tpo -c -o dsconnect-DetourCommon.o `test -f 'src/common/detour/DetourCommon.cpp' || echo '$(srcdir)/'`src/common/detour/DetourCommon.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourCommon.Tpo $(DEPDIR)/dsconnect-DetourCommon.Po
#	$(AM_V_CXX)source='src/common/detour/DetourCommon.cpp' object='dsconnect-DetourCommon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourCommon.o `test -f 'src/common/detour/DetourCommon.cpp' || echo '$(srcdir)/'`src/common/detour/DetourCommon.cpp

dsconnect-DetourCommon.obj: src/common/detour/DetourCommon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourCommon.obj -MD -MP -MF $(DEPDIR)/dsconnect-DetourCommon.Tpo -c -o dsconnect-DetourCommon.obj `if test -f 'src/common/detour/DetourCommon.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourCommon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourCommon.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourCommon.Tpo $(DEPDIR)/dsconnect-DetourCommon.Po
#	$(AM_V_CXX)source='src/common/detour/DetourCommon.cpp' object='dsconnect-DetourCommon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourCommon.obj `if test -f 'src/common/detour/DetourCommon.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourCommon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourCommon.cpp'; fi`

dsconnect-DetourNavMesh.o: src/common/detour/DetourNavMesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNavMesh.o -MD -MP -MF $(DEPDIR)/dsconnect-DetourNavMesh.Tpo -c -o dsconnect-DetourNavMesh.o `test -f 'src/common/detour/DetourNavMesh.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNavMesh.Tpo $(DEPDIR)/dsconnect-DetourNavMesh.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMesh.cpp' object='dsconnect-DetourNavMesh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNavMesh.o `test -f 'src/common/detour/DetourNavMesh.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMesh.cpp

dsconnect-DetourNavMesh.obj: src/common/detour/DetourNavMesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNavMesh.obj -MD -MP -MF $(DEPDIR)/dsconnect-DetourNavMesh.Tpo -c -o dsconnect-DetourNavMesh.obj `if test -f 'src/common/detour/DetourNavMesh.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMesh.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMesh.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNavMesh.Tpo $(DEPDIR)/dsconnect-DetourNavMesh.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMesh.cpp' object='dsconnect-DetourNavMesh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNavMesh.obj `if test -f 'src/common/detour/DetourNavMesh.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMesh.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMesh.cpp'; fi`

dsconnect-DetourNavMeshBuilder.o: src/common/detour/DetourNavMeshBuilder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNavMeshBuilder.o -MD -MP -MF $(DEPDIR)/dsconnect-DetourNavMeshBuilder.Tpo -c -o dsconnect-DetourNavMeshBuilder.o `test -f 'src/common/detour/DetourNavMeshBuilder.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshBuilder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNavMeshBuilder.Tpo $(DEPDIR)/dsconnect-DetourNavMeshBuilder.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshBuilder.cpp' object='dsconnect-DetourNavMeshBuilder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNavMeshBuilder.o `test -f 'src/common/detour/DetourNavMeshBuilder.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshBuilder.cpp

dsconnect-DetourNavMeshBuilder.obj: src/common/detour/DetourNavMeshBuilder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNavMeshBuilder.obj -MD -MP -MF $(DEPDIR)/dsconnect-DetourNavMeshBuilder.Tpo -c -o dsconnect-DetourNavMeshBuilder.obj `if test -f 'src/common/detour/DetourNavMeshBuilder.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshBuilder.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNavMeshBuilder.Tpo $(DEPDIR)/dsconnect-DetourNavMeshBuilder.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshBuilder.cpp' object='dsconnect-DetourNavMeshBuilder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNavMeshBuilder.obj `if test -f 'src/common/detour/DetourNavMeshBuilder.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshBuilder.cpp'; fi`

dsconnect-DetourNavMeshQuery.o: src/common/detour/DetourNavMeshQuery.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNavMeshQuery.o -MD -MP -MF $(DEPDIR)/dsconnect-DetourNavMeshQuery.Tpo -c -o dsconnect-DetourNavMeshQuery.o `test -f 'src/common/detour/DetourNavMeshQuery.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshQuery.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNavMeshQuery.Tpo $(DEPDIR)/dsconnect-DetourNavMeshQuery.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshQuery.cpp' object='dsconnect-DetourNavMeshQuery.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNavMeshQuery.o `test -f 'src/common/detour/DetourNavMeshQuery.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshQuery.cpp

dsconnect-DetourNavMeshQuery.obj: src/common/detour/DetourNavMeshQuery.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNavMeshQuery.obj -MD -MP -MF $(DEPDIR)/dsconnect-DetourNavMeshQuery.Tpo -c -o dsconnect-DetourNavMeshQuery.obj `if test -f 'src/common/detour/DetourNavMeshQuery.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshQuery.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshQuery.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNavMeshQuery.Tpo $(DEPDIR)/dsconnect-DetourNavMeshQuery.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshQuery.cpp' object='dsconnect-DetourNavMeshQuery.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNavMeshQuery.obj `if test -f 'src/common/detour/DetourNavMeshQuery.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshQuery.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshQuery.cpp'; fi`

dsconnect-DetourNode.o: src/common/detour/DetourNode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNode.o -MD -MP -MF $(DEPDIR)/dsconnect-DetourNode.Tpo -c -o dsconnect-DetourNode.o `test -f 'src/common/detour/DetourNode.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNode.Tpo $(DEPDIR)/dsconnect-DetourNode.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNode.cpp' object='dsconnect-DetourNode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNode.o `test -f 'src/common/detour/DetourNode.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNode.cpp

dsconnect-DetourNode.obj: src/common/detour/DetourNode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-DetourNode.obj -MD -MP -MF $(DEPDIR)/dsconnect-DetourNode.Tpo -c -o dsconnect-DetourNode.obj `if test -f 'src/common/detour/DetourNode.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNode.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNode.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-DetourNode.Tpo $(DEPDIR)/dsconnect-DetourNode.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNode.cpp' object='dsconnect-DetourNode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-DetourNode.obj `if test -f 'src/common/detour/DetourNode.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNode.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNode.cpp'; fi`

dsconnect-kernel.o: src/common/kernel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-kernel.o -MD -MP -MF $(DEPDIR)/dsconnect-kernel.Tpo -c -o dsconnect-kernel.o `test -f 'src/common/kernel.cpp' || echo '$(srcdir)/'`src/common/kernel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-kernel.Tpo $(DEPDIR)/dsconnect-kernel.Po
#	$(AM_V_CXX)source='src/common/kernel.cpp' object='dsconnect-kernel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-kernel.o `test -f 'src/common/kernel.cpp' || echo '$(srcdir)/'`src/common/kernel.cpp

dsconnect-kernel.obj: src/common/kernel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-kernel.obj -MD -MP -MF $(DEPDIR)/dsconnect-kernel.Tpo -c -o dsconnect-kernel.obj `if test -f 'src/common/kernel.cpp'; then $(CYGPATH_W) 'src/common/kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/kernel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-kernel.Tpo $(DEPDIR)/dsconnect-kernel.Po
#	$(AM_V_CXX)source='src/common/kernel.cpp' object='dsconnect-kernel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-kernel.obj `if test -f 'src/common/kernel.cpp'; then $(CYGPATH_W) 'src/common/kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/kernel.cpp'; fi`

dsconnect-malloc.o: src/common/malloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-malloc.o -MD -MP -MF $(DEPDIR)/dsconnect-malloc.Tpo -c -o dsconnect-malloc.o `test -f 'src/common/malloc.cpp' || echo '$(srcdir)/'`src/common/malloc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-malloc.Tpo $(DEPDIR)/dsconnect-malloc.Po
#	$(AM_V_CXX)source='src/common/malloc.cpp' object='dsconnect-malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-malloc.o `test -f 'src/common/malloc.cpp' || echo '$(srcdir)/'`src/common/malloc.cpp

dsconnect-malloc.obj: src/common/malloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-malloc.obj -MD -MP -MF $(DEPDIR)/dsconnect-malloc.Tpo -c -o dsconnect-malloc.obj `if test -f 'src/common/malloc.cpp'; then $(CYGPATH_W) 'src/common/malloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/malloc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-malloc.Tpo $(DEPDIR)/dsconnect-malloc.Po
#	$(AM_V_CXX)source='src/common/malloc.cpp' object='dsconnect-malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-malloc.obj `if test -f 'src/common/malloc.cpp'; then $(CYGPATH_W) 'src/common/malloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/malloc.cpp'; fi`

dsconnect-md52.o: src/common/md52.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-md52.o -MD -MP -MF $(DEPDIR)/dsconnect-md52.Tpo -c -o dsconnect-md52.o `test -f 'src/common/md52.cpp' || echo '$(srcdir)/'`src/common/md52.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-md52.Tpo $(DEPDIR)/dsconnect-md52.Po
#	$(AM_V_CXX)source='src/common/md52.cpp' object='dsconnect-md52.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-md52.o `test -f 'src/common/md52.cpp' || echo '$(srcdir)/'`src/common/md52.cpp

dsconnect-md52.obj: src/common/md52.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-md52.obj -MD -MP -MF $(DEPDIR)/dsconnect-md52.Tpo -c -o dsconnect-md52.obj `if test -f 'src/common/md52.cpp'; then $(CYGPATH_W) 'src/common/md52.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/md52.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-md52.Tpo $(DEPDIR)/dsconnect-md52.Po
#	$(AM_V_CXX)source='src/common/md52.cpp' object='dsconnect-md52.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-md52.obj `if test -f 'src/common/md52.cpp'; then $(CYGPATH_W) 'src/common/md52.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/md52.cpp'; fi`

dsconnect-showmsg.o: src/common/showmsg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-showmsg.o -MD -MP -MF $(DEPDIR)/dsconnect-showmsg.Tpo -c -o dsconnect-showmsg.o `test -f 'src/common/showmsg.cpp' || echo '$(srcdir)/'`src/common/showmsg.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-showmsg.Tpo $(DEPDIR)/dsconnect-showmsg.Po
#	$(AM_V_CXX)source='src/common/showmsg.cpp' object='dsconnect-showmsg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-showmsg.o `test -f 'src/common/showmsg.cpp' || echo '$(srcdir)/'`src/common/showmsg.cpp

dsconnect-showmsg.obj: src/common/showmsg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-showmsg.obj -MD -MP -MF $(DEPDIR)/dsconnect-showmsg.Tpo -c -o dsconnect-showmsg.obj `if test -f 'src/common/showmsg.cpp'; then $(CYGPATH_W) 'src/common/showmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/showmsg.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-showmsg.Tpo $(DEPDIR)/dsconnect-showmsg.Po
#	$(AM_V_CXX)source='src/common/showmsg.cpp' object='dsconnect-showmsg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-showmsg.obj `if test -f 'src/common/showmsg.cpp'; then $(CYGPATH_W) 'src/common/showmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/showmsg.cpp'; fi`

dsconnect-socket.o: src/common/socket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-socket.o -MD -MP -MF $(DEPDIR)/dsconnect-socket.Tpo -c -o dsconnect-socket.o `test -f 'src/common/socket.cpp' || echo '$(srcdir)/'`src/common/socket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-socket.Tpo $(DEPDIR)/dsconnect-socket.Po
#	$(AM_V_CXX)source='src/common/socket.cpp' object='dsconnect-socket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-socket.o `test -f 'src/common/socket.cpp' || echo '$(srcdir)/'`src/common/socket.cpp

dsconnect-socket.obj: src/common/socket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-socket.obj -MD -MP -MF $(DEPDIR)/dsconnect-socket.Tpo -c -o dsconnect-socket.obj `if test -f 'src/common/socket.cpp'; then $(CYGPATH_W) 'src/common/socket.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/socket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-socket.Tpo $(DEPDIR)/dsconnect-socket.Po
#	$(AM_V_CXX)source='src/common/socket.cpp' object='dsconnect-socket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-socket.obj `if test -f 'src/common/socket.cpp'; then $(CYGPATH_W) 'src/common/socket.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/socket.cpp'; fi`

dsconnect-sql.o: src/common/sql.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-sql.o -MD -MP -MF $(DEPDIR)/dsconnect-sql.Tpo -c -o dsconnect-sql.o `test -f 'src/common/sql.cpp' || echo '$(srcdir)/'`src/common/sql.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-sql.Tpo $(DEPDIR)/dsconnect-sql.Po
#	$(AM_V_CXX)source='src/common/sql.cpp' object='dsconnect-sql.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-sql.o `test -f 'src/common/sql.cpp' || echo '$(srcdir)/'`src/common/sql.cpp

dsconnect-sql.obj: src/common/sql.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-sql.obj -MD -MP -MF $(DEPDIR)/dsconnect-sql.Tpo -c -o dsconnect-sql.obj `if test -f 'src/common/sql.cpp'; then $(CYGPATH_W) 'src/common/sql.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/sql.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-sql.Tpo $(DEPDIR)/dsconnect-sql.Po
#	$(AM_V_CXX)source='src/common/sql.cpp' object='dsconnect-sql.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-sql.obj `if test -f 'src/common/sql.cpp'; then $(CYGPATH_W) 'src/common/sql.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/sql.cpp'; fi`

dsconnect-strlib.o: src/common/strlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-strlib.o -MD -MP -MF $(DEPDIR)/dsconnect-strlib.Tpo -c -o dsconnect-strlib.o `test -f 'src/common/strlib.cpp' || echo '$(srcdir)/'`src/common/strlib.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-strlib.Tpo $(DEPDIR)/dsconnect-strlib.Po
#	$(AM_V_CXX)source='src/common/strlib.cpp' object='dsconnect-strlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-strlib.o `test -f 'src/common/strlib.cpp' || echo '$(srcdir)/'`src/common/strlib.cpp

dsconnect-strlib.obj: src/common/strlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-strlib.obj -MD -MP -MF $(DEPDIR)/dsconnect-strlib.Tpo -c -o dsconnect-strlib.obj `if test -f 'src/common/strlib.cpp'; then $(CYGPATH_W) 'src/common/strlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/strlib.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-strlib.Tpo $(DEPDIR)/dsconnect-strlib.Po
#	$(AM_V_CXX)source='src/common/strlib.cpp' object='dsconnect-strlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-strlib.obj `if test -f 'src/common/strlib.cpp'; then $(CYGPATH_W) 'src/common/strlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/strlib.cpp'; fi`

dsconnect-taskmgr.o: src/common/taskmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-taskmgr.o -MD -MP -MF $(DEPDIR)/dsconnect-taskmgr.Tpo -c -o dsconnect-taskmgr.o `test -f 'src/common/taskmgr.cpp' || echo '$(srcdir)/'`src/common/taskmgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-taskmgr.Tpo $(DEPDIR)/dsconnect-taskmgr.Po
#	$(AM_V_CXX)source='src/common/taskmgr.cpp' object='dsconnect-taskmgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-taskmgr.o `test -f 'src/common/taskmgr.cpp' || echo '$(srcdir)/'`src/common/taskmgr.cpp

dsconnect-taskmgr.obj: src/common/taskmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-taskmgr.obj -MD -MP -MF $(DEPDIR)/dsconnect-taskmgr.Tpo -c -o dsconnect-taskmgr.obj `if test -f 'src/common/taskmgr.cpp'; then $(CYGPATH_W) 'src/common/taskmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/taskmgr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-taskmgr.Tpo $(DEPDIR)/dsconnect-taskmgr.Po
#	$(AM_V_CXX)source='src/common/taskmgr.cpp' object='dsconnect-taskmgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-taskmgr.obj `if test -f 'src/common/taskmgr.cpp'; then $(CYGPATH_W) 'src/common/taskmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/taskmgr.cpp'; fi`

dsconnect-timer.o: src/common/timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-timer.o -MD -MP -MF $(DEPDIR)/dsconnect-timer.Tpo -c -o dsconnect-timer.o `test -f 'src/common/timer.cpp' || echo '$(srcdir)/'`src/common/timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-timer.Tpo $(DEPDIR)/dsconnect-timer.Po
#	$(AM_V_CXX)source='src/common/timer.cpp' object='dsconnect-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-timer.o `test -f 'src/common/timer.cpp' || echo '$(srcdir)/'`src/common/timer.cpp

dsconnect-timer.obj: src/common/timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-timer.obj -MD -MP -MF $(DEPDIR)/dsconnect-timer.Tpo -c -o dsconnect-timer.obj `if test -f 'src/common/timer.cpp'; then $(CYGPATH_W) 'src/common/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/timer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-timer.Tpo $(DEPDIR)/dsconnect-timer.Po
#	$(AM_V_CXX)source='src/common/timer.cpp' object='dsconnect-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-timer.obj `if test -f 'src/common/timer.cpp'; then $(CYGPATH_W) 'src/common/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/timer.cpp'; fi`

dsconnect-utils.o: src/common/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-utils.o -MD -MP -MF $(DEPDIR)/dsconnect-utils.Tpo -c -o dsconnect-utils.o `test -f 'src/common/utils.cpp' || echo '$(srcdir)/'`src/common/utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-utils.Tpo $(DEPDIR)/dsconnect-utils.Po
#	$(AM_V_CXX)source='src/common/utils.cpp' object='dsconnect-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-utils.o `test -f 'src/common/utils.cpp' || echo '$(srcdir)/'`src/common/utils.cpp

dsconnect-utils.obj: src/common/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-utils.obj -MD -MP -MF $(DEPDIR)/dsconnect-utils.Tpo -c -o dsconnect-utils.obj `if test -f 'src/common/utils.cpp'; then $(CYGPATH_W) 'src/common/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-utils.Tpo $(DEPDIR)/dsconnect-utils.Po
#	$(AM_V_CXX)source='src/common/utils.cpp' object='dsconnect-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-utils.obj `if test -f 'src/common/utils.cpp'; then $(CYGPATH_W) 'src/common/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/utils.cpp'; fi`

dsconnect-zlib.o: src/common/zlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-zlib.o -MD -MP -MF $(DEPDIR)/dsconnect-zlib.Tpo -c -o dsconnect-zlib.o `test -f 'src/common/zlib.cpp' || echo '$(srcdir)/'`src/common/zlib.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-zlib.Tpo $(DEPDIR)/dsconnect-zlib.Po
#	$(AM_V_CXX)source='src/common/zlib.cpp' object='dsconnect-zlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-zlib.o `test -f 'src/common/zlib.cpp' || echo '$(srcdir)/'`src/common/zlib.cpp

dsconnect-zlib.obj: src/common/zlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-zlib.obj -MD -MP -MF $(DEPDIR)/dsconnect-zlib.Tpo -c -o dsconnect-zlib.obj `if test -f 'src/common/zlib.cpp'; then $(CYGPATH_W) 'src/common/zlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/zlib.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-zlib.Tpo $(DEPDIR)/dsconnect-zlib.Po
#	$(AM_V_CXX)source='src/common/zlib.cpp' object='dsconnect-zlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-zlib.obj `if test -f 'src/common/zlib.cpp'; then $(CYGPATH_W) 'src/common/zlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/zlib.cpp'; fi`

dsconnect-account.o: src/login/account.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-account.o -MD -MP -MF $(DEPDIR)/dsconnect-account.Tpo -c -o dsconnect-account.o `test -f 'src/login/account.cpp' || echo '$(srcdir)/'`src/login/account.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-account.Tpo $(DEPDIR)/dsconnect-account.Po
#	$(AM_V_CXX)source='src/login/account.cpp' object='dsconnect-account.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-account.o `test -f 'src/login/account.cpp' || echo '$(srcdir)/'`src/login/account.cpp

dsconnect-account.obj: src/login/account.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-account.obj -MD -MP -MF $(DEPDIR)/dsconnect-account.Tpo -c -o dsconnect-account.obj `if test -f 'src/login/account.cpp'; then $(CYGPATH_W) 'src/login/account.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/account.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-account.Tpo $(DEPDIR)/dsconnect-account.Po
#	$(AM_V_CXX)source='src/login/account.cpp' object='dsconnect-account.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-account.obj `if test -f 'src/login/account.cpp'; then $(CYGPATH_W) 'src/login/account.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/account.cpp'; fi`

dsconnect-message_server.o: src/login/message_server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-message_server.o -MD -MP -MF $(DEPDIR)/dsconnect-message_server.Tpo -c -o dsconnect-message_server.o `test -f 'src/login/message_server.cpp' || echo '$(srcdir)/'`src/login/message_server.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-message_server.Tpo $(DEPDIR)/dsconnect-message_server.Po
#	$(AM_V_CXX)source='src/login/message_server.cpp' object='dsconnect-message_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-message_server.o `test -f 'src/login/message_server.cpp' || echo '$(srcdir)/'`src/login/message_server.cpp

dsconnect-message_server.obj: src/login/message_server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-message_server.obj -MD -MP -MF $(DEPDIR)/dsconnect-message_server.Tpo -c -o dsconnect-message_server.obj `if test -f 'src/login/message_server.cpp'; then $(CYGPATH_W) 'src/login/message_server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/message_server.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-message_server.Tpo $(DEPDIR)/dsconnect-message_server.Po
#	$(AM_V_CXX)source='src/login/message_server.cpp' object='dsconnect-message_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-message_server.obj `if test -f 'src/login/message_server.cpp'; then $(CYGPATH_W) 'src/login/message_server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/message_server.cpp'; fi`

dsconnect-lobby.o: src/login/lobby.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-lobby.o -MD -MP -MF $(DEPDIR)/dsconnect-lobby.Tpo -c -o dsconnect-lobby.o `test -f 'src/login/lobby.cpp' || echo '$(srcdir)/'`src/login/lobby.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-lobby.Tpo $(DEPDIR)/dsconnect-lobby.Po
#	$(AM_V_CXX)source='src/login/lobby.cpp' object='dsconnect-lobby.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-lobby.o `test -f 'src/login/lobby.cpp' || echo '$(srcdir)/'`src/login/lobby.cpp

dsconnect-lobby.obj: src/login/lobby.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-lobby.obj -MD -MP -MF $(DEPDIR)/dsconnect-lobby.Tpo -c -o dsconnect-lobby.obj `if test -f 'src/login/lobby.cpp'; then $(CYGPATH_W) 'src/login/lobby.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/lobby.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-lobby.Tpo $(DEPDIR)/dsconnect-lobby.Po
#	$(AM_V_CXX)source='src/login/lobby.cpp' object='dsconnect-lobby.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-lobby.obj `if test -f 'src/login/lobby.cpp'; then $(CYGPATH_W) 'src/login/lobby.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/lobby.cpp'; fi`

dsconnect-login.o: src/login/login.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-login.o -MD -MP -MF $(DEPDIR)/dsconnect-login.Tpo -c -o dsconnect-login.o `test -f 'src/login/login.cpp' || echo '$(srcdir)/'`src/login/login.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-login.Tpo $(DEPDIR)/dsconnect-login.Po
#	$(AM_V_CXX)source='src/login/login.cpp' object='dsconnect-login.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-login.o `test -f 'src/login/login.cpp' || echo '$(srcdir)/'`src/login/login.cpp

dsconnect-login.obj: src/login/login.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-login.obj -MD -MP -MF $(DEPDIR)/dsconnect-login.Tpo -c -o dsconnect-login.obj `if test -f 'src/login/login.cpp'; then $(CYGPATH_W) 'src/login/login.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/login.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-login.Tpo $(DEPDIR)/dsconnect-login.Po
#	$(AM_V_CXX)source='src/login/login.cpp' object='dsconnect-login.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-login.obj `if test -f 'src/login/login.cpp'; then $(CYGPATH_W) 'src/login/login.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/login.cpp'; fi`

dsconnect-login_auth.o: src/login/login_auth.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-login_auth.o -MD -MP -MF $(DEPDIR)/dsconnect-login_auth.Tpo -c -o dsconnect-login_auth.o `test -f 'src/login/login_auth.cpp' || echo '$(srcdir)/'`src/login/login_auth.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-login_auth.Tpo $(DEPDIR)/dsconnect-login_auth.Po
#	$(AM_V_CXX)source='src/login/login_auth.cpp' object='dsconnect-login_auth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-login_auth.o `test -f 'src/login/login_auth.cpp' || echo '$(srcdir)/'`src/login/login_auth.cpp

dsconnect-login_auth.obj: src/login/login_auth.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-login_auth.obj -MD -MP -MF $(DEPDIR)/dsconnect-login_auth.Tpo -c -o dsconnect-login_auth.obj `if test -f 'src/login/login_auth.cpp'; then $(CYGPATH_W) 'src/login/login_auth.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/login_auth.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-login_auth.Tpo $(DEPDIR)/dsconnect-login_auth.Po
#	$(AM_V_CXX)source='src/login/login_auth.cpp' object='dsconnect-login_auth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-login_auth.obj `if test -f 'src/login/login_auth.cpp'; then $(CYGPATH_W) 'src/login/login_auth.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/login_auth.cpp'; fi`

dsconnect-login_session.o: src/login/login_session.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-login_session.o -MD -MP -MF $(DEPDIR)/dsconnect-login_session.Tpo -c -o dsconnect-login_session.o `test -f 'src/login/login_session.cpp' || echo '$(srcdir)/'`src/login/login_session.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-login_session.Tpo $(DEPDIR)/dsconnect-login_session.Po
#	$(AM_V_CXX)source='src/login/login_session.cpp' object='dsconnect-login_session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-login_session.o `test -f 'src/login/login_session.cpp' || echo '$(srcdir)/'`src/login/login_session.cpp

dsconnect-login_session.obj: src/login/login_session.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -MT dsconnect-login_session.obj -MD -MP -MF $(DEPDIR)/dsconnect-login_session.Tpo -c -o dsconnect-login_session.obj `if test -f 'src/login/login_session.cpp'; then $(CYGPATH_W) 'src/login/login_session.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/login_session.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsconnect-login_session.Tpo $(DEPDIR)/dsconnect-login_session.Po
#	$(AM_V_CXX)source='src/login/login_session.cpp' object='dsconnect-login_session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsconnect_CPPFLAGS) $(CPPFLAGS) $(dsconnect_CXXFLAGS) $(CXXFLAGS) -c -o dsconnect-login_session.obj `if test -f 'src/login/login_session.cpp'; then $(CYGPATH_W) 'src/login/login_session.cpp'; else $(CYGPATH_W) '$(srcdir)/src/login/login_session.cpp'; fi`

dsgame-blowfish.o: src/common/blowfish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blowfish.o -MD -MP -MF $(DEPDIR)/dsgame-blowfish.Tpo -c -o dsgame-blowfish.o `test -f 'src/common/blowfish.cpp' || echo '$(srcdir)/'`src/common/blowfish.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blowfish.Tpo $(DEPDIR)/dsgame-blowfish.Po
#	$(AM_V_CXX)source='src/common/blowfish.cpp' object='dsgame-blowfish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blowfish.o `test -f 'src/common/blowfish.cpp' || echo '$(srcdir)/'`src/common/blowfish.cpp

dsgame-blowfish.obj: src/common/blowfish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blowfish.obj -MD -MP -MF $(DEPDIR)/dsgame-blowfish.Tpo -c -o dsgame-blowfish.obj `if test -f 'src/common/blowfish.cpp'; then $(CYGPATH_W) 'src/common/blowfish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/blowfish.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blowfish.Tpo $(DEPDIR)/dsgame-blowfish.Po
#	$(AM_V_CXX)source='src/common/blowfish.cpp' object='dsgame-blowfish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blowfish.obj `if test -f 'src/common/blowfish.cpp'; then $(CYGPATH_W) 'src/common/blowfish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/blowfish.cpp'; fi`

dsgame-DetourAlloc.o: src/common/detour/DetourAlloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourAlloc.o -MD -MP -MF $(DEPDIR)/dsgame-DetourAlloc.Tpo -c -o dsgame-DetourAlloc.o `test -f 'src/common/detour/DetourAlloc.cpp' || echo '$(srcdir)/'`src/common/detour/DetourAlloc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourAlloc.Tpo $(DEPDIR)/dsgame-DetourAlloc.Po
#	$(AM_V_CXX)source='src/common/detour/DetourAlloc.cpp' object='dsgame-DetourAlloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourAlloc.o `test -f 'src/common/detour/DetourAlloc.cpp' || echo '$(srcdir)/'`src/common/detour/DetourAlloc.cpp

dsgame-DetourAlloc.obj: src/common/detour/DetourAlloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourAlloc.obj -MD -MP -MF $(DEPDIR)/dsgame-DetourAlloc.Tpo -c -o dsgame-DetourAlloc.obj `if test -f 'src/common/detour/DetourAlloc.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourAlloc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourAlloc.Tpo $(DEPDIR)/dsgame-DetourAlloc.Po
#	$(AM_V_CXX)source='src/common/detour/DetourAlloc.cpp' object='dsgame-DetourAlloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourAlloc.obj `if test -f 'src/common/detour/DetourAlloc.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourAlloc.cpp'; fi`

dsgame-DetourCommon.o: src/common/detour/DetourCommon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourCommon.o -MD -MP -MF $(DEPDIR)/dsgame-DetourCommon.Tpo -c -o dsgame-DetourCommon.o `test -f 'src/common/detour/DetourCommon.cpp' || echo '$(srcdir)/'`src/common/detour/DetourCommon.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourCommon.Tpo $(DEPDIR)/dsgame-DetourCommon.Po
#	$(AM_V_CXX)source='src/common/detour/DetourCommon.cpp' object='dsgame-DetourCommon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourCommon.o `test -f 'src/common/detour/DetourCommon.cpp' || echo '$(srcdir)/'`src/common/detour/DetourCommon.cpp

dsgame-DetourCommon.obj: src/common/detour/DetourCommon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourCommon.obj -MD -MP -MF $(DEPDIR)/dsgame-DetourCommon.Tpo -c -o dsgame-DetourCommon.obj `if test -f 'src/common/detour/DetourCommon.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourCommon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourCommon.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourCommon.Tpo $(DEPDIR)/dsgame-DetourCommon.Po
#	$(AM_V_CXX)source='src/common/detour/DetourCommon.cpp' object='dsgame-DetourCommon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourCommon.obj `if test -f 'src/common/detour/DetourCommon.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourCommon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourCommon.cpp'; fi`

dsgame-DetourNavMesh.o: src/common/detour/DetourNavMesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNavMesh.o -MD -MP -MF $(DEPDIR)/dsgame-DetourNavMesh.Tpo -c -o dsgame-DetourNavMesh.o `test -f 'src/common/detour/DetourNavMesh.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNavMesh.Tpo $(DEPDIR)/dsgame-DetourNavMesh.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMesh.cpp' object='dsgame-DetourNavMesh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNavMesh.o `test -f 'src/common/detour/DetourNavMesh.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMesh.cpp

dsgame-DetourNavMesh.obj: src/common/detour/DetourNavMesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNavMesh.obj -MD -MP -MF $(DEPDIR)/dsgame-DetourNavMesh.Tpo -c -o dsgame-DetourNavMesh.obj `if test -f 'src/common/detour/DetourNavMesh.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMesh.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMesh.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNavMesh.Tpo $(DEPDIR)/dsgame-DetourNavMesh.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMesh.cpp' object='dsgame-DetourNavMesh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNavMesh.obj `if test -f 'src/common/detour/DetourNavMesh.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMesh.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMesh.cpp'; fi`

dsgame-DetourNavMeshBuilder.o: src/common/detour/DetourNavMeshBuilder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNavMeshBuilder.o -MD -MP -MF $(DEPDIR)/dsgame-DetourNavMeshBuilder.Tpo -c -o dsgame-DetourNavMeshBuilder.o `test -f 'src/common/detour/DetourNavMeshBuilder.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshBuilder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNavMeshBuilder.Tpo $(DEPDIR)/dsgame-DetourNavMeshBuilder.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshBuilder.cpp' object='dsgame-DetourNavMeshBuilder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNavMeshBuilder.o `test -f 'src/common/detour/DetourNavMeshBuilder.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshBuilder.cpp

dsgame-DetourNavMeshBuilder.obj: src/common/detour/DetourNavMeshBuilder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNavMeshBuilder.obj -MD -MP -MF $(DEPDIR)/dsgame-DetourNavMeshBuilder.Tpo -c -o dsgame-DetourNavMeshBuilder.obj `if test -f 'src/common/detour/DetourNavMeshBuilder.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshBuilder.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNavMeshBuilder.Tpo $(DEPDIR)/dsgame-DetourNavMeshBuilder.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshBuilder.cpp' object='dsgame-DetourNavMeshBuilder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNavMeshBuilder.obj `if test -f 'src/common/detour/DetourNavMeshBuilder.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshBuilder.cpp'; fi`

dsgame-DetourNavMeshQuery.o: src/common/detour/DetourNavMeshQuery.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNavMeshQuery.o -MD -MP -MF $(DEPDIR)/dsgame-DetourNavMeshQuery.Tpo -c -o dsgame-DetourNavMeshQuery.o `test -f 'src/common/detour/DetourNavMeshQuery.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshQuery.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNavMeshQuery.Tpo $(DEPDIR)/dsgame-DetourNavMeshQuery.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshQuery.cpp' object='dsgame-DetourNavMeshQuery.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNavMeshQuery.o `test -f 'src/common/detour/DetourNavMeshQuery.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNavMeshQuery.cpp

dsgame-DetourNavMeshQuery.obj: src/common/detour/DetourNavMeshQuery.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNavMeshQuery.obj -MD -MP -MF $(DEPDIR)/dsgame-DetourNavMeshQuery.Tpo -c -o dsgame-DetourNavMeshQuery.obj `if test -f 'src/common/detour/DetourNavMeshQuery.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshQuery.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshQuery.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNavMeshQuery.Tpo $(DEPDIR)/dsgame-DetourNavMeshQuery.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNavMeshQuery.cpp' object='dsgame-DetourNavMeshQuery.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNavMeshQuery.obj `if test -f 'src/common/detour/DetourNavMeshQuery.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNavMeshQuery.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNavMeshQuery.cpp'; fi`

dsgame-DetourNode.o: src/common/detour/DetourNode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNode.o -MD -MP -MF $(DEPDIR)/dsgame-DetourNode.Tpo -c -o dsgame-DetourNode.o `test -f 'src/common/detour/DetourNode.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNode.Tpo $(DEPDIR)/dsgame-DetourNode.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNode.cpp' object='dsgame-DetourNode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNode.o `test -f 'src/common/detour/DetourNode.cpp' || echo '$(srcdir)/'`src/common/detour/DetourNode.cpp

dsgame-DetourNode.obj: src/common/detour/DetourNode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-DetourNode.obj -MD -MP -MF $(DEPDIR)/dsgame-DetourNode.Tpo -c -o dsgame-DetourNode.obj `if test -f 'src/common/detour/DetourNode.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNode.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNode.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-DetourNode.Tpo $(DEPDIR)/dsgame-DetourNode.Po
#	$(AM_V_CXX)source='src/common/detour/DetourNode.cpp' object='dsgame-DetourNode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-DetourNode.obj `if test -f 'src/common/detour/DetourNode.cpp'; then $(CYGPATH_W) 'src/common/detour/DetourNode.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/detour/DetourNode.cpp'; fi`

dsgame-kernel.o: src/common/kernel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-kernel.o -MD -MP -MF $(DEPDIR)/dsgame-kernel.Tpo -c -o dsgame-kernel.o `test -f 'src/common/kernel.cpp' || echo '$(srcdir)/'`src/common/kernel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-kernel.Tpo $(DEPDIR)/dsgame-kernel.Po
#	$(AM_V_CXX)source='src/common/kernel.cpp' object='dsgame-kernel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-kernel.o `test -f 'src/common/kernel.cpp' || echo '$(srcdir)/'`src/common/kernel.cpp

dsgame-kernel.obj: src/common/kernel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-kernel.obj -MD -MP -MF $(DEPDIR)/dsgame-kernel.Tpo -c -o dsgame-kernel.obj `if test -f 'src/common/kernel.cpp'; then $(CYGPATH_W) 'src/common/kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/kernel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-kernel.Tpo $(DEPDIR)/dsgame-kernel.Po
#	$(AM_V_CXX)source='src/common/kernel.cpp' object='dsgame-kernel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-kernel.obj `if test -f 'src/common/kernel.cpp'; then $(CYGPATH_W) 'src/common/kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/kernel.cpp'; fi`

dsgame-malloc.o: src/common/malloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-malloc.o -MD -MP -MF $(DEPDIR)/dsgame-malloc.Tpo -c -o dsgame-malloc.o `test -f 'src/common/malloc.cpp' || echo '$(srcdir)/'`src/common/malloc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-malloc.Tpo $(DEPDIR)/dsgame-malloc.Po
#	$(AM_V_CXX)source='src/common/malloc.cpp' object='dsgame-malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-malloc.o `test -f 'src/common/malloc.cpp' || echo '$(srcdir)/'`src/common/malloc.cpp

dsgame-malloc.obj: src/common/malloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-malloc.obj -MD -MP -MF $(DEPDIR)/dsgame-malloc.Tpo -c -o dsgame-malloc.obj `if test -f 'src/common/malloc.cpp'; then $(CYGPATH_W) 'src/common/malloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/malloc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-malloc.Tpo $(DEPDIR)/dsgame-malloc.Po
#	$(AM_V_CXX)source='src/common/malloc.cpp' object='dsgame-malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-malloc.obj `if test -f 'src/common/malloc.cpp'; then $(CYGPATH_W) 'src/common/malloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/malloc.cpp'; fi`

dsgame-md52.o: src/common/md52.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-md52.o -MD -MP -MF $(DEPDIR)/dsgame-md52.Tpo -c -o dsgame-md52.o `test -f 'src/common/md52.cpp' || echo '$(srcdir)/'`src/common/md52.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-md52.Tpo $(DEPDIR)/dsgame-md52.Po
#	$(AM_V_CXX)source='src/common/md52.cpp' object='dsgame-md52.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-md52.o `test -f 'src/common/md52.cpp' || echo '$(srcdir)/'`src/common/md52.cpp

dsgame-md52.obj: src/common/md52.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-md52.obj -MD -MP -MF $(DEPDIR)/dsgame-md52.Tpo -c -o dsgame-md52.obj `if test -f 'src/common/md52.cpp'; then $(CYGPATH_W) 'src/common/md52.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/md52.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-md52.Tpo $(DEPDIR)/dsgame-md52.Po
#	$(AM_V_CXX)source='src/common/md52.cpp' object='dsgame-md52.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-md52.obj `if test -f 'src/common/md52.cpp'; then $(CYGPATH_W) 'src/common/md52.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/md52.cpp'; fi`

dsgame-showmsg.o: src/common/showmsg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-showmsg.o -MD -MP -MF $(DEPDIR)/dsgame-showmsg.Tpo -c -o dsgame-showmsg.o `test -f 'src/common/showmsg.cpp' || echo '$(srcdir)/'`src/common/showmsg.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-showmsg.Tpo $(DEPDIR)/dsgame-showmsg.Po
#	$(AM_V_CXX)source='src/common/showmsg.cpp' object='dsgame-showmsg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-showmsg.o `test -f 'src/common/showmsg.cpp' || echo '$(srcdir)/'`src/common/showmsg.cpp

dsgame-showmsg.obj: src/common/showmsg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-showmsg.obj -MD -MP -MF $(DEPDIR)/dsgame-showmsg.Tpo -c -o dsgame-showmsg.obj `if test -f 'src/common/showmsg.cpp'; then $(CYGPATH_W) 'src/common/showmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/showmsg.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-showmsg.Tpo $(DEPDIR)/dsgame-showmsg.Po
#	$(AM_V_CXX)source='src/common/showmsg.cpp' object='dsgame-showmsg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-showmsg.obj `if test -f 'src/common/showmsg.cpp'; then $(CYGPATH_W) 'src/common/showmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/showmsg.cpp'; fi`

dsgame-socket.o: src/common/socket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-socket.o -MD -MP -MF $(DEPDIR)/dsgame-socket.Tpo -c -o dsgame-socket.o `test -f 'src/common/socket.cpp' || echo '$(srcdir)/'`src/common/socket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-socket.Tpo $(DEPDIR)/dsgame-socket.Po
#	$(AM_V_CXX)source='src/common/socket.cpp' object='dsgame-socket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-socket.o `test -f 'src/common/socket.cpp' || echo '$(srcdir)/'`src/common/socket.cpp

dsgame-socket.obj: src/common/socket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-socket.obj -MD -MP -MF $(DEPDIR)/dsgame-socket.Tpo -c -o dsgame-socket.obj `if test -f 'src/common/socket.cpp'; then $(CYGPATH_W) 'src/common/socket.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/socket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-socket.Tpo $(DEPDIR)/dsgame-socket.Po
#	$(AM_V_CXX)source='src/common/socket.cpp' object='dsgame-socket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-socket.obj `if test -f 'src/common/socket.cpp'; then $(CYGPATH_W) 'src/common/socket.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/socket.cpp'; fi`

dsgame-sql.o: src/common/sql.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-sql.o -MD -MP -MF $(DEPDIR)/dsgame-sql.Tpo -c -o dsgame-sql.o `test -f 'src/common/sql.cpp' || echo '$(srcdir)/'`src/common/sql.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-sql.Tpo $(DEPDIR)/dsgame-sql.Po
#	$(AM_V_CXX)source='src/common/sql.cpp' object='dsgame-sql.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-sql.o `test -f 'src/common/sql.cpp' || echo '$(srcdir)/'`src/common/sql.cpp

dsgame-sql.obj: src/common/sql.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-sql.obj -MD -MP -MF $(DEPDIR)/dsgame-sql.Tpo -c -o dsgame-sql.obj `if test -f 'src/common/sql.cpp'; then $(CYGPATH_W) 'src/common/sql.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/sql.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-sql.Tpo $(DEPDIR)/dsgame-sql.Po
#	$(AM_V_CXX)source='src/common/sql.cpp' object='dsgame-sql.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-sql.obj `if test -f 'src/common/sql.cpp'; then $(CYGPATH_W) 'src/common/sql.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/sql.cpp'; fi`

dsgame-strlib.o: src/common/strlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-strlib.o -MD -MP -MF $(DEPDIR)/dsgame-strlib.Tpo -c -o dsgame-strlib.o `test -f 'src/common/strlib.cpp' || echo '$(srcdir)/'`src/common/strlib.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-strlib.Tpo $(DEPDIR)/dsgame-strlib.Po
#	$(AM_V_CXX)source='src/common/strlib.cpp' object='dsgame-strlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-strlib.o `test -f 'src/common/strlib.cpp' || echo '$(srcdir)/'`src/common/strlib.cpp

dsgame-strlib.obj: src/common/strlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-strlib.obj -MD -MP -MF $(DEPDIR)/dsgame-strlib.Tpo -c -o dsgame-strlib.obj `if test -f 'src/common/strlib.cpp'; then $(CYGPATH_W) 'src/common/strlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/strlib.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-strlib.Tpo $(DEPDIR)/dsgame-strlib.Po
#	$(AM_V_CXX)source='src/common/strlib.cpp' object='dsgame-strlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-strlib.obj `if test -f 'src/common/strlib.cpp'; then $(CYGPATH_W) 'src/common/strlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/strlib.cpp'; fi`

dsgame-taskmgr.o: src/common/taskmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-taskmgr.o -MD -MP -MF $(DEPDIR)/dsgame-taskmgr.Tpo -c -o dsgame-taskmgr.o `test -f 'src/common/taskmgr.cpp' || echo '$(srcdir)/'`src/common/taskmgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-taskmgr.Tpo $(DEPDIR)/dsgame-taskmgr.Po
#	$(AM_V_CXX)source='src/common/taskmgr.cpp' object='dsgame-taskmgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-taskmgr.o `test -f 'src/common/taskmgr.cpp' || echo '$(srcdir)/'`src/common/taskmgr.cpp

dsgame-taskmgr.obj: src/common/taskmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-taskmgr.obj -MD -MP -MF $(DEPDIR)/dsgame-taskmgr.Tpo -c -o dsgame-taskmgr.obj `if test -f 'src/common/taskmgr.cpp'; then $(CYGPATH_W) 'src/common/taskmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/taskmgr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-taskmgr.Tpo $(DEPDIR)/dsgame-taskmgr.Po
#	$(AM_V_CXX)source='src/common/taskmgr.cpp' object='dsgame-taskmgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-taskmgr.obj `if test -f 'src/common/taskmgr.cpp'; then $(CYGPATH_W) 'src/common/taskmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/taskmgr.cpp'; fi`

dsgame-timer.o: src/common/timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-timer.o -MD -MP -MF $(DEPDIR)/dsgame-timer.Tpo -c -o dsgame-timer.o `test -f 'src/common/timer.cpp' || echo '$(srcdir)/'`src/common/timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-timer.Tpo $(DEPDIR)/dsgame-timer.Po
#	$(AM_V_CXX)source='src/common/timer.cpp' object='dsgame-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-timer.o `test -f 'src/common/timer.cpp' || echo '$(srcdir)/'`src/common/timer.cpp

dsgame-timer.obj: src/common/timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-timer.obj -MD -MP -MF $(DEPDIR)/dsgame-timer.Tpo -c -o dsgame-timer.obj `if test -f 'src/common/timer.cpp'; then $(CYGPATH_W) 'src/common/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/timer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-timer.Tpo $(DEPDIR)/dsgame-timer.Po
#	$(AM_V_CXX)source='src/common/timer.cpp' object='dsgame-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-timer.obj `if test -f 'src/common/timer.cpp'; then $(CYGPATH_W) 'src/common/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/timer.cpp'; fi`

dsgame-utils.o: src/common/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-utils.o -MD -MP -MF $(DEPDIR)/dsgame-utils.Tpo -c -o dsgame-utils.o `test -f 'src/common/utils.cpp' || echo '$(srcdir)/'`src/common/utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-utils.Tpo $(DEPDIR)/dsgame-utils.Po
#	$(AM_V_CXX)source='src/common/utils.cpp' object='dsgame-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-utils.o `test -f 'src/common/utils.cpp' || echo '$(srcdir)/'`src/common/utils.cpp

dsgame-utils.obj: src/common/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-utils.obj -MD -MP -MF $(DEPDIR)/dsgame-utils.Tpo -c -o dsgame-utils.obj `if test -f 'src/common/utils.cpp'; then $(CYGPATH_W) 'src/common/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-utils.Tpo $(DEPDIR)/dsgame-utils.Po
#	$(AM_V_CXX)source='src/common/utils.cpp' object='dsgame-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-utils.obj `if test -f 'src/common/utils.cpp'; then $(CYGPATH_W) 'src/common/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/utils.cpp'; fi`

dsgame-zlib.o: src/common/zlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zlib.o -MD -MP -MF $(DEPDIR)/dsgame-zlib.Tpo -c -o dsgame-zlib.o `test -f 'src/common/zlib.cpp' || echo '$(srcdir)/'`src/common/zlib.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zlib.Tpo $(DEPDIR)/dsgame-zlib.Po
#	$(AM_V_CXX)source='src/common/zlib.cpp' object='dsgame-zlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zlib.o `test -f 'src/common/zlib.cpp' || echo '$(srcdir)/'`src/common/zlib.cpp

dsgame-zlib.obj: src/common/zlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zlib.obj -MD -MP -MF $(DEPDIR)/dsgame-zlib.Tpo -c -o dsgame-zlib.obj `if test -f 'src/common/zlib.cpp'; then $(CYGPATH_W) 'src/common/zlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/zlib.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zlib.Tpo $(DEPDIR)/dsgame-zlib.Po
#	$(AM_V_CXX)source='src/common/zlib.cpp' object='dsgame-zlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zlib.obj `if test -f 'src/common/zlib.cpp'; then $(CYGPATH_W) 'src/common/zlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/zlib.cpp'; fi`

dsgame-ability.o: src/map/ability.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ability.o -MD -MP -MF $(DEPDIR)/dsgame-ability.Tpo -c -o dsgame-ability.o `test -f 'src/map/ability.cpp' || echo '$(srcdir)/'`src/map/ability.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ability.Tpo $(DEPDIR)/dsgame-ability.Po
#	$(AM_V_CXX)source='src/map/ability.cpp' object='dsgame-ability.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ability.o `test -f 'src/map/ability.cpp' || echo '$(srcdir)/'`src/map/ability.cpp

dsgame-ability.obj: src/map/ability.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ability.obj -MD -MP -MF $(DEPDIR)/dsgame-ability.Tpo -c -o dsgame-ability.obj `if test -f 'src/map/ability.cpp'; then $(CYGPATH_W) 'src/map/ability.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ability.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ability.Tpo $(DEPDIR)/dsgame-ability.Po
#	$(AM_V_CXX)source='src/map/ability.cpp' object='dsgame-ability.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ability.obj `if test -f 'src/map/ability.cpp'; then $(CYGPATH_W) 'src/map/ability.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ability.cpp'; fi`

dsgame-ai_automaton_dummy.o: src/map/ai/ai_automaton_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_automaton_dummy.o -MD -MP -MF $(DEPDIR)/dsgame-ai_automaton_dummy.Tpo -c -o dsgame-ai_automaton_dummy.o `test -f 'src/map/ai/ai_automaton_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_automaton_dummy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_automaton_dummy.Tpo $(DEPDIR)/dsgame-ai_automaton_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_automaton_dummy.cpp' object='dsgame-ai_automaton_dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_automaton_dummy.o `test -f 'src/map/ai/ai_automaton_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_automaton_dummy.cpp

dsgame-ai_automaton_dummy.obj: src/map/ai/ai_automaton_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_automaton_dummy.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_automaton_dummy.Tpo -c -o dsgame-ai_automaton_dummy.obj `if test -f 'src/map/ai/ai_automaton_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_automaton_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_automaton_dummy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_automaton_dummy.Tpo $(DEPDIR)/dsgame-ai_automaton_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_automaton_dummy.cpp' object='dsgame-ai_automaton_dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_automaton_dummy.obj `if test -f 'src/map/ai/ai_automaton_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_automaton_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_automaton_dummy.cpp'; fi`

dsgame-ai_char_charm.o: src/map/ai/ai_char_charm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_charm.o -MD -MP -MF $(DEPDIR)/dsgame-ai_char_charm.Tpo -c -o dsgame-ai_char_charm.o `test -f 'src/map/ai/ai_char_charm.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_charm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_charm.Tpo $(DEPDIR)/dsgame-ai_char_charm.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_charm.cpp' object='dsgame-ai_char_charm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_charm.o `test -f 'src/map/ai/ai_char_charm.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_charm.cpp

dsgame-ai_char_charm.obj: src/map/ai/ai_char_charm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_charm.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_char_charm.Tpo -c -o dsgame-ai_char_charm.obj `if test -f 'src/map/ai/ai_char_charm.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_charm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_charm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_charm.Tpo $(DEPDIR)/dsgame-ai_char_charm.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_charm.cpp' object='dsgame-ai_char_charm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_charm.obj `if test -f 'src/map/ai/ai_char_charm.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_charm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_charm.cpp'; fi`

dsgame-ai_char_gm.o: src/map/ai/ai_char_gm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_gm.o -MD -MP -MF $(DEPDIR)/dsgame-ai_char_gm.Tpo -c -o dsgame-ai_char_gm.o `test -f 'src/map/ai/ai_char_gm.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_gm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_gm.Tpo $(DEPDIR)/dsgame-ai_char_gm.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_gm.cpp' object='dsgame-ai_char_gm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_gm.o `test -f 'src/map/ai/ai_char_gm.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_gm.cpp

dsgame-ai_char_gm.obj: src/map/ai/ai_char_gm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_gm.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_char_gm.Tpo -c -o dsgame-ai_char_gm.obj `if test -f 'src/map/ai/ai_char_gm.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_gm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_gm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_gm.Tpo $(DEPDIR)/dsgame-ai_char_gm.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_gm.cpp' object='dsgame-ai_char_gm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_gm.obj `if test -f 'src/map/ai/ai_char_gm.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_gm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_gm.cpp'; fi`

dsgame-ai_char_normal.o: src/map/ai/ai_char_normal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_normal.o -MD -MP -MF $(DEPDIR)/dsgame-ai_char_normal.Tpo -c -o dsgame-ai_char_normal.o `test -f 'src/map/ai/ai_char_normal.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_normal.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_normal.Tpo $(DEPDIR)/dsgame-ai_char_normal.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_normal.cpp' object='dsgame-ai_char_normal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_normal.o `test -f 'src/map/ai/ai_char_normal.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_normal.cpp

dsgame-ai_char_normal.obj: src/map/ai/ai_char_normal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_normal.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_char_normal.Tpo -c -o dsgame-ai_char_normal.obj `if test -f 'src/map/ai/ai_char_normal.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_normal.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_normal.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_normal.Tpo $(DEPDIR)/dsgame-ai_char_normal.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_normal.cpp' object='dsgame-ai_char_normal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_normal.obj `if test -f 'src/map/ai/ai_char_normal.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_normal.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_normal.cpp'; fi`

dsgame-ai_char_prisoner.o: src/map/ai/ai_char_prisoner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_prisoner.o -MD -MP -MF $(DEPDIR)/dsgame-ai_char_prisoner.Tpo -c -o dsgame-ai_char_prisoner.o `test -f 'src/map/ai/ai_char_prisoner.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_prisoner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_prisoner.Tpo $(DEPDIR)/dsgame-ai_char_prisoner.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_prisoner.cpp' object='dsgame-ai_char_prisoner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_prisoner.o `test -f 'src/map/ai/ai_char_prisoner.cpp' || echo '$(srcdir)/'`src/map/ai/ai_char_prisoner.cpp

dsgame-ai_char_prisoner.obj: src/map/ai/ai_char_prisoner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_char_prisoner.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_char_prisoner.Tpo -c -o dsgame-ai_char_prisoner.obj `if test -f 'src/map/ai/ai_char_prisoner.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_prisoner.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_prisoner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_char_prisoner.Tpo $(DEPDIR)/dsgame-ai_char_prisoner.Po
#	$(AM_V_CXX)source='src/map/ai/ai_char_prisoner.cpp' object='dsgame-ai_char_prisoner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_char_prisoner.obj `if test -f 'src/map/ai/ai_char_prisoner.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_char_prisoner.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_char_prisoner.cpp'; fi`

dsgame-ai_general.o: src/map/ai/ai_general.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_general.o -MD -MP -MF $(DEPDIR)/dsgame-ai_general.Tpo -c -o dsgame-ai_general.o `test -f 'src/map/ai/ai_general.cpp' || echo '$(srcdir)/'`src/map/ai/ai_general.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_general.Tpo $(DEPDIR)/dsgame-ai_general.Po
#	$(AM_V_CXX)source='src/map/ai/ai_general.cpp' object='dsgame-ai_general.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_general.o `test -f 'src/map/ai/ai_general.cpp' || echo '$(srcdir)/'`src/map/ai/ai_general.cpp

dsgame-ai_general.obj: src/map/ai/ai_general.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_general.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_general.Tpo -c -o dsgame-ai_general.obj `if test -f 'src/map/ai/ai_general.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_general.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_general.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_general.Tpo $(DEPDIR)/dsgame-ai_general.Po
#	$(AM_V_CXX)source='src/map/ai/ai_general.cpp' object='dsgame-ai_general.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_general.obj `if test -f 'src/map/ai/ai_general.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_general.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_general.cpp'; fi`

dsgame-ai_mob_dummy.o: src/map/ai/ai_mob_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_mob_dummy.o -MD -MP -MF $(DEPDIR)/dsgame-ai_mob_dummy.Tpo -c -o dsgame-ai_mob_dummy.o `test -f 'src/map/ai/ai_mob_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_mob_dummy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_mob_dummy.Tpo $(DEPDIR)/dsgame-ai_mob_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_mob_dummy.cpp' object='dsgame-ai_mob_dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_mob_dummy.o `test -f 'src/map/ai/ai_mob_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_mob_dummy.cpp

dsgame-ai_mob_dummy.obj: src/map/ai/ai_mob_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_mob_dummy.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_mob_dummy.Tpo -c -o dsgame-ai_mob_dummy.obj `if test -f 'src/map/ai/ai_mob_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_mob_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_mob_dummy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_mob_dummy.Tpo $(DEPDIR)/dsgame-ai_mob_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_mob_dummy.cpp' object='dsgame-ai_mob_dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_mob_dummy.obj `if test -f 'src/map/ai/ai_mob_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_mob_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_mob_dummy.cpp'; fi`

dsgame-ai_npc_dummy.o: src/map/ai/ai_npc_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_npc_dummy.o -MD -MP -MF $(DEPDIR)/dsgame-ai_npc_dummy.Tpo -c -o dsgame-ai_npc_dummy.o `test -f 'src/map/ai/ai_npc_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_npc_dummy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_npc_dummy.Tpo $(DEPDIR)/dsgame-ai_npc_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_npc_dummy.cpp' object='dsgame-ai_npc_dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_npc_dummy.o `test -f 'src/map/ai/ai_npc_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_npc_dummy.cpp

dsgame-ai_npc_dummy.obj: src/map/ai/ai_npc_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_npc_dummy.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_npc_dummy.Tpo -c -o dsgame-ai_npc_dummy.obj `if test -f 'src/map/ai/ai_npc_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_npc_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_npc_dummy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_npc_dummy.Tpo $(DEPDIR)/dsgame-ai_npc_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_npc_dummy.cpp' object='dsgame-ai_npc_dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_npc_dummy.obj `if test -f 'src/map/ai/ai_npc_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_npc_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_npc_dummy.cpp'; fi`

dsgame-ai_pet_dummy.o: src/map/ai/ai_pet_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_pet_dummy.o -MD -MP -MF $(DEPDIR)/dsgame-ai_pet_dummy.Tpo -c -o dsgame-ai_pet_dummy.o `test -f 'src/map/ai/ai_pet_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_pet_dummy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_pet_dummy.Tpo $(DEPDIR)/dsgame-ai_pet_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_pet_dummy.cpp' object='dsgame-ai_pet_dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_pet_dummy.o `test -f 'src/map/ai/ai_pet_dummy.cpp' || echo '$(srcdir)/'`src/map/ai/ai_pet_dummy.cpp

dsgame-ai_pet_dummy.obj: src/map/ai/ai_pet_dummy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_pet_dummy.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_pet_dummy.Tpo -c -o dsgame-ai_pet_dummy.obj `if test -f 'src/map/ai/ai_pet_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_pet_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_pet_dummy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_pet_dummy.Tpo $(DEPDIR)/dsgame-ai_pet_dummy.Po
#	$(AM_V_CXX)source='src/map/ai/ai_pet_dummy.cpp' object='dsgame-ai_pet_dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_pet_dummy.obj `if test -f 'src/map/ai/ai_pet_dummy.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_pet_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_pet_dummy.cpp'; fi`

dsgame-ai_ultimate_summon.o: src/map/ai/ai_ultimate_summon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_ultimate_summon.o -MD -MP -MF $(DEPDIR)/dsgame-ai_ultimate_summon.Tpo -c -o dsgame-ai_ultimate_summon.o `test -f 'src/map/ai/ai_ultimate_summon.cpp' || echo '$(srcdir)/'`src/map/ai/ai_ultimate_summon.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_ultimate_summon.Tpo $(DEPDIR)/dsgame-ai_ultimate_summon.Po
#	$(AM_V_CXX)source='src/map/ai/ai_ultimate_summon.cpp' object='dsgame-ai_ultimate_summon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_ultimate_summon.o `test -f 'src/map/ai/ai_ultimate_summon.cpp' || echo '$(srcdir)/'`src/map/ai/ai_ultimate_summon.cpp

dsgame-ai_ultimate_summon.obj: src/map/ai/ai_ultimate_summon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ai_ultimate_summon.obj -MD -MP -MF $(DEPDIR)/dsgame-ai_ultimate_summon.Tpo -c -o dsgame-ai_ultimate_summon.obj `if test -f 'src/map/ai/ai_ultimate_summon.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_ultimate_summon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_ultimate_summon.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ai_ultimate_summon.Tpo $(DEPDIR)/dsgame-ai_ultimate_summon.Po
#	$(AM_V_CXX)source='src/map/ai/ai_ultimate_summon.cpp' object='dsgame-ai_ultimate_summon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ai_ultimate_summon.obj `if test -f 'src/map/ai/ai_ultimate_summon.cpp'; then $(CYGPATH_W) 'src/map/ai/ai_ultimate_summon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/ai_ultimate_summon.cpp'; fi`

dsgame-pathfind.o: src/map/ai/helpers/pathfind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-pathfind.o -MD -MP -MF $(DEPDIR)/dsgame-pathfind.Tpo -c -o dsgame-pathfind.o `test -f 'src/map/ai/helpers/pathfind.cpp' || echo '$(srcdir)/'`src/map/ai/helpers/pathfind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-pathfind.Tpo $(DEPDIR)/dsgame-pathfind.Po
#	$(AM_V_CXX)source='src/map/ai/helpers/pathfind.cpp' object='dsgame-pathfind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-pathfind.o `test -f 'src/map/ai/helpers/pathfind.cpp' || echo '$(srcdir)/'`src/map/ai/helpers/pathfind.cpp

dsgame-pathfind.obj: src/map/ai/helpers/pathfind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-pathfind.obj -MD -MP -MF $(DEPDIR)/dsgame-pathfind.Tpo -c -o dsgame-pathfind.obj `if test -f 'src/map/ai/helpers/pathfind.cpp'; then $(CYGPATH_W) 'src/map/ai/helpers/pathfind.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/helpers/pathfind.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-pathfind.Tpo $(DEPDIR)/dsgame-pathfind.Po
#	$(AM_V_CXX)source='src/map/ai/helpers/pathfind.cpp' object='dsgame-pathfind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-pathfind.obj `if test -f 'src/map/ai/helpers/pathfind.cpp'; then $(CYGPATH_W) 'src/map/ai/helpers/pathfind.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/helpers/pathfind.cpp'; fi`

dsgame-targetfind.o: src/map/ai/helpers/targetfind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-targetfind.o -MD -MP -MF $(DEPDIR)/dsgame-targetfind.Tpo -c -o dsgame-targetfind.o `test -f 'src/map/ai/helpers/targetfind.cpp' || echo '$(srcdir)/'`src/map/ai/helpers/targetfind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-targetfind.Tpo $(DEPDIR)/dsgame-targetfind.Po
#	$(AM_V_CXX)source='src/map/ai/helpers/targetfind.cpp' object='dsgame-targetfind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-targetfind.o `test -f 'src/map/ai/helpers/targetfind.cpp' || echo '$(srcdir)/'`src/map/ai/helpers/targetfind.cpp

dsgame-targetfind.obj: src/map/ai/helpers/targetfind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-targetfind.obj -MD -MP -MF $(DEPDIR)/dsgame-targetfind.Tpo -c -o dsgame-targetfind.obj `if test -f 'src/map/ai/helpers/targetfind.cpp'; then $(CYGPATH_W) 'src/map/ai/helpers/targetfind.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/helpers/targetfind.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-targetfind.Tpo $(DEPDIR)/dsgame-targetfind.Po
#	$(AM_V_CXX)source='src/map/ai/helpers/targetfind.cpp' object='dsgame-targetfind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-targetfind.obj `if test -f 'src/map/ai/helpers/targetfind.cpp'; then $(CYGPATH_W) 'src/map/ai/helpers/targetfind.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/helpers/targetfind.cpp'; fi`

dsgame-ability_state.o: src/map/ai/states/ability_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ability_state.o -MD -MP -MF $(DEPDIR)/dsgame-ability_state.Tpo -c -o dsgame-ability_state.o `test -f 'src/map/ai/states/ability_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/ability_state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ability_state.Tpo $(DEPDIR)/dsgame-ability_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/ability_state.cpp' object='dsgame-ability_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ability_state.o `test -f 'src/map/ai/states/ability_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/ability_state.cpp

dsgame-ability_state.obj: src/map/ai/states/ability_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-ability_state.obj -MD -MP -MF $(DEPDIR)/dsgame-ability_state.Tpo -c -o dsgame-ability_state.obj `if test -f 'src/map/ai/states/ability_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/ability_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/ability_state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-ability_state.Tpo $(DEPDIR)/dsgame-ability_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/ability_state.cpp' object='dsgame-ability_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-ability_state.obj `if test -f 'src/map/ai/states/ability_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/ability_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/ability_state.cpp'; fi`

dsgame-attack_state.o: src/map/ai/states/attack_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attack_state.o -MD -MP -MF $(DEPDIR)/dsgame-attack_state.Tpo -c -o dsgame-attack_state.o `test -f 'src/map/ai/states/attack_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/attack_state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attack_state.Tpo $(DEPDIR)/dsgame-attack_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/attack_state.cpp' object='dsgame-attack_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attack_state.o `test -f 'src/map/ai/states/attack_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/attack_state.cpp

dsgame-attack_state.obj: src/map/ai/states/attack_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attack_state.obj -MD -MP -MF $(DEPDIR)/dsgame-attack_state.Tpo -c -o dsgame-attack_state.obj `if test -f 'src/map/ai/states/attack_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/attack_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/attack_state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attack_state.Tpo $(DEPDIR)/dsgame-attack_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/attack_state.cpp' object='dsgame-attack_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attack_state.obj `if test -f 'src/map/ai/states/attack_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/attack_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/attack_state.cpp'; fi`

dsgame-item_state.o: src/map/ai/states/item_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_state.o -MD -MP -MF $(DEPDIR)/dsgame-item_state.Tpo -c -o dsgame-item_state.o `test -f 'src/map/ai/states/item_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/item_state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_state.Tpo $(DEPDIR)/dsgame-item_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/item_state.cpp' object='dsgame-item_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_state.o `test -f 'src/map/ai/states/item_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/item_state.cpp

dsgame-item_state.obj: src/map/ai/states/item_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_state.obj -MD -MP -MF $(DEPDIR)/dsgame-item_state.Tpo -c -o dsgame-item_state.obj `if test -f 'src/map/ai/states/item_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/item_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/item_state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_state.Tpo $(DEPDIR)/dsgame-item_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/item_state.cpp' object='dsgame-item_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_state.obj `if test -f 'src/map/ai/states/item_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/item_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/item_state.cpp'; fi`

dsgame-magic_state.o: src/map/ai/states/magic_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-magic_state.o -MD -MP -MF $(DEPDIR)/dsgame-magic_state.Tpo -c -o dsgame-magic_state.o `test -f 'src/map/ai/states/magic_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/magic_state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-magic_state.Tpo $(DEPDIR)/dsgame-magic_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/magic_state.cpp' object='dsgame-magic_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-magic_state.o `test -f 'src/map/ai/states/magic_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/magic_state.cpp

dsgame-magic_state.obj: src/map/ai/states/magic_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-magic_state.obj -MD -MP -MF $(DEPDIR)/dsgame-magic_state.Tpo -c -o dsgame-magic_state.obj `if test -f 'src/map/ai/states/magic_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/magic_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/magic_state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-magic_state.Tpo $(DEPDIR)/dsgame-magic_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/magic_state.cpp' object='dsgame-magic_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-magic_state.obj `if test -f 'src/map/ai/states/magic_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/magic_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/magic_state.cpp'; fi`

dsgame-mobskill_state.o: src/map/ai/states/mobskill_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobskill_state.o -MD -MP -MF $(DEPDIR)/dsgame-mobskill_state.Tpo -c -o dsgame-mobskill_state.o `test -f 'src/map/ai/states/mobskill_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/mobskill_state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobskill_state.Tpo $(DEPDIR)/dsgame-mobskill_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/mobskill_state.cpp' object='dsgame-mobskill_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobskill_state.o `test -f 'src/map/ai/states/mobskill_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/mobskill_state.cpp

dsgame-mobskill_state.obj: src/map/ai/states/mobskill_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobskill_state.obj -MD -MP -MF $(DEPDIR)/dsgame-mobskill_state.Tpo -c -o dsgame-mobskill_state.obj `if test -f 'src/map/ai/states/mobskill_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/mobskill_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/mobskill_state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobskill_state.Tpo $(DEPDIR)/dsgame-mobskill_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/mobskill_state.cpp' object='dsgame-mobskill_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobskill_state.obj `if test -f 'src/map/ai/states/mobskill_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/mobskill_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/mobskill_state.cpp'; fi`

dsgame-range_state.o: src/map/ai/states/range_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-range_state.o -MD -MP -MF $(DEPDIR)/dsgame-range_state.Tpo -c -o dsgame-range_state.o `test -f 'src/map/ai/states/range_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/range_state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-range_state.Tpo $(DEPDIR)/dsgame-range_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/range_state.cpp' object='dsgame-range_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-range_state.o `test -f 'src/map/ai/states/range_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/range_state.cpp

dsgame-range_state.obj: src/map/ai/states/range_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-range_state.obj -MD -MP -MF $(DEPDIR)/dsgame-range_state.Tpo -c -o dsgame-range_state.obj `if test -f 'src/map/ai/states/range_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/range_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/range_state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-range_state.Tpo $(DEPDIR)/dsgame-range_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/range_state.cpp' object='dsgame-range_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-range_state.obj `if test -f 'src/map/ai/states/range_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/range_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/range_state.cpp'; fi`

dsgame-state.o: src/map/ai/states/state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-state.o -MD -MP -MF $(DEPDIR)/dsgame-state.Tpo -c -o dsgame-state.o `test -f 'src/map/ai/states/state.cpp' || echo '$(srcdir)/'`src/map/ai/states/state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-state.Tpo $(DEPDIR)/dsgame-state.Po
#	$(AM_V_CXX)source='src/map/ai/states/state.cpp' object='dsgame-state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-state.o `test -f 'src/map/ai/states/state.cpp' || echo '$(srcdir)/'`src/map/ai/states/state.cpp

dsgame-state.obj: src/map/ai/states/state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-state.obj -MD -MP -MF $(DEPDIR)/dsgame-state.Tpo -c -o dsgame-state.obj `if test -f 'src/map/ai/states/state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-state.Tpo $(DEPDIR)/dsgame-state.Po
#	$(AM_V_CXX)source='src/map/ai/states/state.cpp' object='dsgame-state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-state.obj `if test -f 'src/map/ai/states/state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/state.cpp'; fi`

dsgame-weaponskill_state.o: src/map/ai/states/weaponskill_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-weaponskill_state.o -MD -MP -MF $(DEPDIR)/dsgame-weaponskill_state.Tpo -c -o dsgame-weaponskill_state.o `test -f 'src/map/ai/states/weaponskill_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/weaponskill_state.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-weaponskill_state.Tpo $(DEPDIR)/dsgame-weaponskill_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/weaponskill_state.cpp' object='dsgame-weaponskill_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-weaponskill_state.o `test -f 'src/map/ai/states/weaponskill_state.cpp' || echo '$(srcdir)/'`src/map/ai/states/weaponskill_state.cpp

dsgame-weaponskill_state.obj: src/map/ai/states/weaponskill_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-weaponskill_state.obj -MD -MP -MF $(DEPDIR)/dsgame-weaponskill_state.Tpo -c -o dsgame-weaponskill_state.obj `if test -f 'src/map/ai/states/weaponskill_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/weaponskill_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/weaponskill_state.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-weaponskill_state.Tpo $(DEPDIR)/dsgame-weaponskill_state.Po
#	$(AM_V_CXX)source='src/map/ai/states/weaponskill_state.cpp' object='dsgame-weaponskill_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-weaponskill_state.obj `if test -f 'src/map/ai/states/weaponskill_state.cpp'; then $(CYGPATH_W) 'src/map/ai/states/weaponskill_state.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/ai/states/weaponskill_state.cpp'; fi`

dsgame-alliance.o: src/map/alliance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-alliance.o -MD -MP -MF $(DEPDIR)/dsgame-alliance.Tpo -c -o dsgame-alliance.o `test -f 'src/map/alliance.cpp' || echo '$(srcdir)/'`src/map/alliance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-alliance.Tpo $(DEPDIR)/dsgame-alliance.Po
#	$(AM_V_CXX)source='src/map/alliance.cpp' object='dsgame-alliance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-alliance.o `test -f 'src/map/alliance.cpp' || echo '$(srcdir)/'`src/map/alliance.cpp

dsgame-alliance.obj: src/map/alliance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-alliance.obj -MD -MP -MF $(DEPDIR)/dsgame-alliance.Tpo -c -o dsgame-alliance.obj `if test -f 'src/map/alliance.cpp'; then $(CYGPATH_W) 'src/map/alliance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/alliance.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-alliance.Tpo $(DEPDIR)/dsgame-alliance.Po
#	$(AM_V_CXX)source='src/map/alliance.cpp' object='dsgame-alliance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-alliance.obj `if test -f 'src/map/alliance.cpp'; then $(CYGPATH_W) 'src/map/alliance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/alliance.cpp'; fi`

dsgame-blue_spell.o: src/map/blue_spell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blue_spell.o -MD -MP -MF $(DEPDIR)/dsgame-blue_spell.Tpo -c -o dsgame-blue_spell.o `test -f 'src/map/blue_spell.cpp' || echo '$(srcdir)/'`src/map/blue_spell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blue_spell.Tpo $(DEPDIR)/dsgame-blue_spell.Po
#	$(AM_V_CXX)source='src/map/blue_spell.cpp' object='dsgame-blue_spell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blue_spell.o `test -f 'src/map/blue_spell.cpp' || echo '$(srcdir)/'`src/map/blue_spell.cpp

dsgame-blue_spell.obj: src/map/blue_spell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blue_spell.obj -MD -MP -MF $(DEPDIR)/dsgame-blue_spell.Tpo -c -o dsgame-blue_spell.obj `if test -f 'src/map/blue_spell.cpp'; then $(CYGPATH_W) 'src/map/blue_spell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/blue_spell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blue_spell.Tpo $(DEPDIR)/dsgame-blue_spell.Po
#	$(AM_V_CXX)source='src/map/blue_spell.cpp' object='dsgame-blue_spell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blue_spell.obj `if test -f 'src/map/blue_spell.cpp'; then $(CYGPATH_W) 'src/map/blue_spell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/blue_spell.cpp'; fi`

dsgame-blue_trait.o: src/map/blue_trait.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blue_trait.o -MD -MP -MF $(DEPDIR)/dsgame-blue_trait.Tpo -c -o dsgame-blue_trait.o `test -f 'src/map/blue_trait.cpp' || echo '$(srcdir)/'`src/map/blue_trait.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blue_trait.Tpo $(DEPDIR)/dsgame-blue_trait.Po
#	$(AM_V_CXX)source='src/map/blue_trait.cpp' object='dsgame-blue_trait.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blue_trait.o `test -f 'src/map/blue_trait.cpp' || echo '$(srcdir)/'`src/map/blue_trait.cpp

dsgame-blue_trait.obj: src/map/blue_trait.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blue_trait.obj -MD -MP -MF $(DEPDIR)/dsgame-blue_trait.Tpo -c -o dsgame-blue_trait.obj `if test -f 'src/map/blue_trait.cpp'; then $(CYGPATH_W) 'src/map/blue_trait.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/blue_trait.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blue_trait.Tpo $(DEPDIR)/dsgame-blue_trait.Po
#	$(AM_V_CXX)source='src/map/blue_trait.cpp' object='dsgame-blue_trait.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blue_trait.obj `if test -f 'src/map/blue_trait.cpp'; then $(CYGPATH_W) 'src/map/blue_trait.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/blue_trait.cpp'; fi`

dsgame-guild.o: src/map/guild.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild.o -MD -MP -MF $(DEPDIR)/dsgame-guild.Tpo -c -o dsgame-guild.o `test -f 'src/map/guild.cpp' || echo '$(srcdir)/'`src/map/guild.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild.Tpo $(DEPDIR)/dsgame-guild.Po
#	$(AM_V_CXX)source='src/map/guild.cpp' object='dsgame-guild.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild.o `test -f 'src/map/guild.cpp' || echo '$(srcdir)/'`src/map/guild.cpp

dsgame-guild.obj: src/map/guild.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild.obj -MD -MP -MF $(DEPDIR)/dsgame-guild.Tpo -c -o dsgame-guild.obj `if test -f 'src/map/guild.cpp'; then $(CYGPATH_W) 'src/map/guild.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/guild.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild.Tpo $(DEPDIR)/dsgame-guild.Po
#	$(AM_V_CXX)source='src/map/guild.cpp' object='dsgame-guild.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild.obj `if test -f 'src/map/guild.cpp'; then $(CYGPATH_W) 'src/map/guild.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/guild.cpp'; fi`

dsgame-message.o: src/map/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message.o -MD -MP -MF $(DEPDIR)/dsgame-message.Tpo -c -o dsgame-message.o `test -f 'src/map/message.cpp' || echo '$(srcdir)/'`src/map/message.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message.Tpo $(DEPDIR)/dsgame-message.Po
#	$(AM_V_CXX)source='src/map/message.cpp' object='dsgame-message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message.o `test -f 'src/map/message.cpp' || echo '$(srcdir)/'`src/map/message.cpp

dsgame-message.obj: src/map/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message.obj -MD -MP -MF $(DEPDIR)/dsgame-message.Tpo -c -o dsgame-message.obj `if test -f 'src/map/message.cpp'; then $(CYGPATH_W) 'src/map/message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/message.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message.Tpo $(DEPDIR)/dsgame-message.Po
#	$(AM_V_CXX)source='src/map/message.cpp' object='dsgame-message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message.obj `if test -f 'src/map/message.cpp'; then $(CYGPATH_W) 'src/map/message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/message.cpp'; fi`

dsgame-commandhandler.o: src/map/commandhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-commandhandler.o -MD -MP -MF $(DEPDIR)/dsgame-commandhandler.Tpo -c -o dsgame-commandhandler.o `test -f 'src/map/commandhandler.cpp' || echo '$(srcdir)/'`src/map/commandhandler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-commandhandler.Tpo $(DEPDIR)/dsgame-commandhandler.Po
#	$(AM_V_CXX)source='src/map/commandhandler.cpp' object='dsgame-commandhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-commandhandler.o `test -f 'src/map/commandhandler.cpp' || echo '$(srcdir)/'`src/map/commandhandler.cpp

dsgame-commandhandler.obj: src/map/commandhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-commandhandler.obj -MD -MP -MF $(DEPDIR)/dsgame-commandhandler.Tpo -c -o dsgame-commandhandler.obj `if test -f 'src/map/commandhandler.cpp'; then $(CYGPATH_W) 'src/map/commandhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/commandhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-commandhandler.Tpo $(DEPDIR)/dsgame-commandhandler.Po
#	$(AM_V_CXX)source='src/map/commandhandler.cpp' object='dsgame-commandhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-commandhandler.obj `if test -f 'src/map/commandhandler.cpp'; then $(CYGPATH_W) 'src/map/commandhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/commandhandler.cpp'; fi`

dsgame-conquest_system.o: src/map/conquest_system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-conquest_system.o -MD -MP -MF $(DEPDIR)/dsgame-conquest_system.Tpo -c -o dsgame-conquest_system.o `test -f 'src/map/conquest_system.cpp' || echo '$(srcdir)/'`src/map/conquest_system.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-conquest_system.Tpo $(DEPDIR)/dsgame-conquest_system.Po
#	$(AM_V_CXX)source='src/map/conquest_system.cpp' object='dsgame-conquest_system.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-conquest_system.o `test -f 'src/map/conquest_system.cpp' || echo '$(srcdir)/'`src/map/conquest_system.cpp

dsgame-conquest_system.obj: src/map/conquest_system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-conquest_system.obj -MD -MP -MF $(DEPDIR)/dsgame-conquest_system.Tpo -c -o dsgame-conquest_system.obj `if test -f 'src/map/conquest_system.cpp'; then $(CYGPATH_W) 'src/map/conquest_system.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/conquest_system.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-conquest_system.Tpo $(DEPDIR)/dsgame-conquest_system.Po
#	$(AM_V_CXX)source='src/map/conquest_system.cpp' object='dsgame-conquest_system.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-conquest_system.obj `if test -f 'src/map/conquest_system.cpp'; then $(CYGPATH_W) 'src/map/conquest_system.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/conquest_system.cpp'; fi`

dsgame-enmity_container.o: src/map/enmity_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-enmity_container.o -MD -MP -MF $(DEPDIR)/dsgame-enmity_container.Tpo -c -o dsgame-enmity_container.o `test -f 'src/map/enmity_container.cpp' || echo '$(srcdir)/'`src/map/enmity_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-enmity_container.Tpo $(DEPDIR)/dsgame-enmity_container.Po
#	$(AM_V_CXX)source='src/map/enmity_container.cpp' object='dsgame-enmity_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-enmity_container.o `test -f 'src/map/enmity_container.cpp' || echo '$(srcdir)/'`src/map/enmity_container.cpp

dsgame-enmity_container.obj: src/map/enmity_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-enmity_container.obj -MD -MP -MF $(DEPDIR)/dsgame-enmity_container.Tpo -c -o dsgame-enmity_container.obj `if test -f 'src/map/enmity_container.cpp'; then $(CYGPATH_W) 'src/map/enmity_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/enmity_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-enmity_container.Tpo $(DEPDIR)/dsgame-enmity_container.Po
#	$(AM_V_CXX)source='src/map/enmity_container.cpp' object='dsgame-enmity_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-enmity_container.obj `if test -f 'src/map/enmity_container.cpp'; then $(CYGPATH_W) 'src/map/enmity_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/enmity_container.cpp'; fi`

dsgame-automatonentity.o: src/map/entities/automatonentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-automatonentity.o -MD -MP -MF $(DEPDIR)/dsgame-automatonentity.Tpo -c -o dsgame-automatonentity.o `test -f 'src/map/entities/automatonentity.cpp' || echo '$(srcdir)/'`src/map/entities/automatonentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-automatonentity.Tpo $(DEPDIR)/dsgame-automatonentity.Po
#	$(AM_V_CXX)source='src/map/entities/automatonentity.cpp' object='dsgame-automatonentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-automatonentity.o `test -f 'src/map/entities/automatonentity.cpp' || echo '$(srcdir)/'`src/map/entities/automatonentity.cpp

dsgame-automatonentity.obj: src/map/entities/automatonentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-automatonentity.obj -MD -MP -MF $(DEPDIR)/dsgame-automatonentity.Tpo -c -o dsgame-automatonentity.obj `if test -f 'src/map/entities/automatonentity.cpp'; then $(CYGPATH_W) 'src/map/entities/automatonentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/automatonentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-automatonentity.Tpo $(DEPDIR)/dsgame-automatonentity.Po
#	$(AM_V_CXX)source='src/map/entities/automatonentity.cpp' object='dsgame-automatonentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-automatonentity.obj `if test -f 'src/map/entities/automatonentity.cpp'; then $(CYGPATH_W) 'src/map/entities/automatonentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/automatonentity.cpp'; fi`

dsgame-baseentity.o: src/map/entities/baseentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-baseentity.o -MD -MP -MF $(DEPDIR)/dsgame-baseentity.Tpo -c -o dsgame-baseentity.o `test -f 'src/map/entities/baseentity.cpp' || echo '$(srcdir)/'`src/map/entities/baseentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-baseentity.Tpo $(DEPDIR)/dsgame-baseentity.Po
#	$(AM_V_CXX)source='src/map/entities/baseentity.cpp' object='dsgame-baseentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-baseentity.o `test -f 'src/map/entities/baseentity.cpp' || echo '$(srcdir)/'`src/map/entities/baseentity.cpp

dsgame-baseentity.obj: src/map/entities/baseentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-baseentity.obj -MD -MP -MF $(DEPDIR)/dsgame-baseentity.Tpo -c -o dsgame-baseentity.obj `if test -f 'src/map/entities/baseentity.cpp'; then $(CYGPATH_W) 'src/map/entities/baseentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/baseentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-baseentity.Tpo $(DEPDIR)/dsgame-baseentity.Po
#	$(AM_V_CXX)source='src/map/entities/baseentity.cpp' object='dsgame-baseentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-baseentity.obj `if test -f 'src/map/entities/baseentity.cpp'; then $(CYGPATH_W) 'src/map/entities/baseentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/baseentity.cpp'; fi`

dsgame-battleentity.o: src/map/entities/battleentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battleentity.o -MD -MP -MF $(DEPDIR)/dsgame-battleentity.Tpo -c -o dsgame-battleentity.o `test -f 'src/map/entities/battleentity.cpp' || echo '$(srcdir)/'`src/map/entities/battleentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battleentity.Tpo $(DEPDIR)/dsgame-battleentity.Po
#	$(AM_V_CXX)source='src/map/entities/battleentity.cpp' object='dsgame-battleentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battleentity.o `test -f 'src/map/entities/battleentity.cpp' || echo '$(srcdir)/'`src/map/entities/battleentity.cpp

dsgame-battleentity.obj: src/map/entities/battleentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battleentity.obj -MD -MP -MF $(DEPDIR)/dsgame-battleentity.Tpo -c -o dsgame-battleentity.obj `if test -f 'src/map/entities/battleentity.cpp'; then $(CYGPATH_W) 'src/map/entities/battleentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/battleentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battleentity.Tpo $(DEPDIR)/dsgame-battleentity.Po
#	$(AM_V_CXX)source='src/map/entities/battleentity.cpp' object='dsgame-battleentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battleentity.obj `if test -f 'src/map/entities/battleentity.cpp'; then $(CYGPATH_W) 'src/map/entities/battleentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/battleentity.cpp'; fi`

dsgame-charentity.o: src/map/entities/charentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-charentity.o -MD -MP -MF $(DEPDIR)/dsgame-charentity.Tpo -c -o dsgame-charentity.o `test -f 'src/map/entities/charentity.cpp' || echo '$(srcdir)/'`src/map/entities/charentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-charentity.Tpo $(DEPDIR)/dsgame-charentity.Po
#	$(AM_V_CXX)source='src/map/entities/charentity.cpp' object='dsgame-charentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-charentity.o `test -f 'src/map/entities/charentity.cpp' || echo '$(srcdir)/'`src/map/entities/charentity.cpp

dsgame-charentity.obj: src/map/entities/charentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-charentity.obj -MD -MP -MF $(DEPDIR)/dsgame-charentity.Tpo -c -o dsgame-charentity.obj `if test -f 'src/map/entities/charentity.cpp'; then $(CYGPATH_W) 'src/map/entities/charentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/charentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-charentity.Tpo $(DEPDIR)/dsgame-charentity.Po
#	$(AM_V_CXX)source='src/map/entities/charentity.cpp' object='dsgame-charentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-charentity.obj `if test -f 'src/map/entities/charentity.cpp'; then $(CYGPATH_W) 'src/map/entities/charentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/charentity.cpp'; fi`

dsgame-mobentity.o: src/map/entities/mobentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobentity.o -MD -MP -MF $(DEPDIR)/dsgame-mobentity.Tpo -c -o dsgame-mobentity.o `test -f 'src/map/entities/mobentity.cpp' || echo '$(srcdir)/'`src/map/entities/mobentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobentity.Tpo $(DEPDIR)/dsgame-mobentity.Po
#	$(AM_V_CXX)source='src/map/entities/mobentity.cpp' object='dsgame-mobentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobentity.o `test -f 'src/map/entities/mobentity.cpp' || echo '$(srcdir)/'`src/map/entities/mobentity.cpp

dsgame-mobentity.obj: src/map/entities/mobentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobentity.obj -MD -MP -MF $(DEPDIR)/dsgame-mobentity.Tpo -c -o dsgame-mobentity.obj `if test -f 'src/map/entities/mobentity.cpp'; then $(CYGPATH_W) 'src/map/entities/mobentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/mobentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobentity.Tpo $(DEPDIR)/dsgame-mobentity.Po
#	$(AM_V_CXX)source='src/map/entities/mobentity.cpp' object='dsgame-mobentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobentity.obj `if test -f 'src/map/entities/mobentity.cpp'; then $(CYGPATH_W) 'src/map/entities/mobentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/mobentity.cpp'; fi`

dsgame-npcentity.o: src/map/entities/npcentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-npcentity.o -MD -MP -MF $(DEPDIR)/dsgame-npcentity.Tpo -c -o dsgame-npcentity.o `test -f 'src/map/entities/npcentity.cpp' || echo '$(srcdir)/'`src/map/entities/npcentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-npcentity.Tpo $(DEPDIR)/dsgame-npcentity.Po
#	$(AM_V_CXX)source='src/map/entities/npcentity.cpp' object='dsgame-npcentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-npcentity.o `test -f 'src/map/entities/npcentity.cpp' || echo '$(srcdir)/'`src/map/entities/npcentity.cpp

dsgame-npcentity.obj: src/map/entities/npcentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-npcentity.obj -MD -MP -MF $(DEPDIR)/dsgame-npcentity.Tpo -c -o dsgame-npcentity.obj `if test -f 'src/map/entities/npcentity.cpp'; then $(CYGPATH_W) 'src/map/entities/npcentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/npcentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-npcentity.Tpo $(DEPDIR)/dsgame-npcentity.Po
#	$(AM_V_CXX)source='src/map/entities/npcentity.cpp' object='dsgame-npcentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-npcentity.obj `if test -f 'src/map/entities/npcentity.cpp'; then $(CYGPATH_W) 'src/map/entities/npcentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/npcentity.cpp'; fi`

dsgame-petentity.o: src/map/entities/petentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-petentity.o -MD -MP -MF $(DEPDIR)/dsgame-petentity.Tpo -c -o dsgame-petentity.o `test -f 'src/map/entities/petentity.cpp' || echo '$(srcdir)/'`src/map/entities/petentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-petentity.Tpo $(DEPDIR)/dsgame-petentity.Po
#	$(AM_V_CXX)source='src/map/entities/petentity.cpp' object='dsgame-petentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-petentity.o `test -f 'src/map/entities/petentity.cpp' || echo '$(srcdir)/'`src/map/entities/petentity.cpp

dsgame-petentity.obj: src/map/entities/petentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-petentity.obj -MD -MP -MF $(DEPDIR)/dsgame-petentity.Tpo -c -o dsgame-petentity.obj `if test -f 'src/map/entities/petentity.cpp'; then $(CYGPATH_W) 'src/map/entities/petentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/petentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-petentity.Tpo $(DEPDIR)/dsgame-petentity.Po
#	$(AM_V_CXX)source='src/map/entities/petentity.cpp' object='dsgame-petentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-petentity.obj `if test -f 'src/map/entities/petentity.cpp'; then $(CYGPATH_W) 'src/map/entities/petentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/entities/petentity.cpp'; fi`

dsgame-grades.o: src/map/grades.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-grades.o -MD -MP -MF $(DEPDIR)/dsgame-grades.Tpo -c -o dsgame-grades.o `test -f 'src/map/grades.cpp' || echo '$(srcdir)/'`src/map/grades.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-grades.Tpo $(DEPDIR)/dsgame-grades.Po
#	$(AM_V_CXX)source='src/map/grades.cpp' object='dsgame-grades.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-grades.o `test -f 'src/map/grades.cpp' || echo '$(srcdir)/'`src/map/grades.cpp

dsgame-grades.obj: src/map/grades.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-grades.obj -MD -MP -MF $(DEPDIR)/dsgame-grades.Tpo -c -o dsgame-grades.obj `if test -f 'src/map/grades.cpp'; then $(CYGPATH_W) 'src/map/grades.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/grades.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-grades.Tpo $(DEPDIR)/dsgame-grades.Po
#	$(AM_V_CXX)source='src/map/grades.cpp' object='dsgame-grades.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-grades.obj `if test -f 'src/map/grades.cpp'; then $(CYGPATH_W) 'src/map/grades.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/grades.cpp'; fi`

dsgame-battlefield.o: src/map/battlefield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battlefield.o -MD -MP -MF $(DEPDIR)/dsgame-battlefield.Tpo -c -o dsgame-battlefield.o `test -f 'src/map/battlefield.cpp' || echo '$(srcdir)/'`src/map/battlefield.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battlefield.Tpo $(DEPDIR)/dsgame-battlefield.Po
#	$(AM_V_CXX)source='src/map/battlefield.cpp' object='dsgame-battlefield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battlefield.o `test -f 'src/map/battlefield.cpp' || echo '$(srcdir)/'`src/map/battlefield.cpp

dsgame-battlefield.obj: src/map/battlefield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battlefield.obj -MD -MP -MF $(DEPDIR)/dsgame-battlefield.Tpo -c -o dsgame-battlefield.obj `if test -f 'src/map/battlefield.cpp'; then $(CYGPATH_W) 'src/map/battlefield.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/battlefield.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battlefield.Tpo $(DEPDIR)/dsgame-battlefield.Po
#	$(AM_V_CXX)source='src/map/battlefield.cpp' object='dsgame-battlefield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battlefield.obj `if test -f 'src/map/battlefield.cpp'; then $(CYGPATH_W) 'src/map/battlefield.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/battlefield.cpp'; fi`

dsgame-battlefield_handler.o: src/map/battlefield_handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battlefield_handler.o -MD -MP -MF $(DEPDIR)/dsgame-battlefield_handler.Tpo -c -o dsgame-battlefield_handler.o `test -f 'src/map/battlefield_handler.cpp' || echo '$(srcdir)/'`src/map/battlefield_handler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battlefield_handler.Tpo $(DEPDIR)/dsgame-battlefield_handler.Po
#	$(AM_V_CXX)source='src/map/battlefield_handler.cpp' object='dsgame-battlefield_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battlefield_handler.o `test -f 'src/map/battlefield_handler.cpp' || echo '$(srcdir)/'`src/map/battlefield_handler.cpp

dsgame-battlefield_handler.obj: src/map/battlefield_handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battlefield_handler.obj -MD -MP -MF $(DEPDIR)/dsgame-battlefield_handler.Tpo -c -o dsgame-battlefield_handler.obj `if test -f 'src/map/battlefield_handler.cpp'; then $(CYGPATH_W) 'src/map/battlefield_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/battlefield_handler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battlefield_handler.Tpo $(DEPDIR)/dsgame-battlefield_handler.Po
#	$(AM_V_CXX)source='src/map/battlefield_handler.cpp' object='dsgame-battlefield_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battlefield_handler.obj `if test -f 'src/map/battlefield_handler.cpp'; then $(CYGPATH_W) 'src/map/battlefield_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/battlefield_handler.cpp'; fi`

dsgame-instance.o: src/map/instance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instance.o -MD -MP -MF $(DEPDIR)/dsgame-instance.Tpo -c -o dsgame-instance.o `test -f 'src/map/instance.cpp' || echo '$(srcdir)/'`src/map/instance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instance.Tpo $(DEPDIR)/dsgame-instance.Po
#	$(AM_V_CXX)source='src/map/instance.cpp' object='dsgame-instance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instance.o `test -f 'src/map/instance.cpp' || echo '$(srcdir)/'`src/map/instance.cpp

dsgame-instance.obj: src/map/instance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instance.obj -MD -MP -MF $(DEPDIR)/dsgame-instance.Tpo -c -o dsgame-instance.obj `if test -f 'src/map/instance.cpp'; then $(CYGPATH_W) 'src/map/instance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/instance.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instance.Tpo $(DEPDIR)/dsgame-instance.Po
#	$(AM_V_CXX)source='src/map/instance.cpp' object='dsgame-instance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instance.obj `if test -f 'src/map/instance.cpp'; then $(CYGPATH_W) 'src/map/instance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/instance.cpp'; fi`

dsgame-instance_loader.o: src/map/instance_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instance_loader.o -MD -MP -MF $(DEPDIR)/dsgame-instance_loader.Tpo -c -o dsgame-instance_loader.o `test -f 'src/map/instance_loader.cpp' || echo '$(srcdir)/'`src/map/instance_loader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instance_loader.Tpo $(DEPDIR)/dsgame-instance_loader.Po
#	$(AM_V_CXX)source='src/map/instance_loader.cpp' object='dsgame-instance_loader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instance_loader.o `test -f 'src/map/instance_loader.cpp' || echo '$(srcdir)/'`src/map/instance_loader.cpp

dsgame-instance_loader.obj: src/map/instance_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instance_loader.obj -MD -MP -MF $(DEPDIR)/dsgame-instance_loader.Tpo -c -o dsgame-instance_loader.obj `if test -f 'src/map/instance_loader.cpp'; then $(CYGPATH_W) 'src/map/instance_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/instance_loader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instance_loader.Tpo $(DEPDIR)/dsgame-instance_loader.Po
#	$(AM_V_CXX)source='src/map/instance_loader.cpp' object='dsgame-instance_loader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instance_loader.obj `if test -f 'src/map/instance_loader.cpp'; then $(CYGPATH_W) 'src/map/instance_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/instance_loader.cpp'; fi`

dsgame-item.o: src/map/items/item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item.o -MD -MP -MF $(DEPDIR)/dsgame-item.Tpo -c -o dsgame-item.o `test -f 'src/map/items/item.cpp' || echo '$(srcdir)/'`src/map/items/item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item.Tpo $(DEPDIR)/dsgame-item.Po
#	$(AM_V_CXX)source='src/map/items/item.cpp' object='dsgame-item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item.o `test -f 'src/map/items/item.cpp' || echo '$(srcdir)/'`src/map/items/item.cpp

dsgame-item.obj: src/map/items/item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item.obj -MD -MP -MF $(DEPDIR)/dsgame-item.Tpo -c -o dsgame-item.obj `if test -f 'src/map/items/item.cpp'; then $(CYGPATH_W) 'src/map/items/item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item.Tpo $(DEPDIR)/dsgame-item.Po
#	$(AM_V_CXX)source='src/map/items/item.cpp' object='dsgame-item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item.obj `if test -f 'src/map/items/item.cpp'; then $(CYGPATH_W) 'src/map/items/item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item.cpp'; fi`

dsgame-item_armor.o: src/map/items/item_armor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_armor.o -MD -MP -MF $(DEPDIR)/dsgame-item_armor.Tpo -c -o dsgame-item_armor.o `test -f 'src/map/items/item_armor.cpp' || echo '$(srcdir)/'`src/map/items/item_armor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_armor.Tpo $(DEPDIR)/dsgame-item_armor.Po
#	$(AM_V_CXX)source='src/map/items/item_armor.cpp' object='dsgame-item_armor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_armor.o `test -f 'src/map/items/item_armor.cpp' || echo '$(srcdir)/'`src/map/items/item_armor.cpp

dsgame-item_armor.obj: src/map/items/item_armor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_armor.obj -MD -MP -MF $(DEPDIR)/dsgame-item_armor.Tpo -c -o dsgame-item_armor.obj `if test -f 'src/map/items/item_armor.cpp'; then $(CYGPATH_W) 'src/map/items/item_armor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_armor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_armor.Tpo $(DEPDIR)/dsgame-item_armor.Po
#	$(AM_V_CXX)source='src/map/items/item_armor.cpp' object='dsgame-item_armor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_armor.obj `if test -f 'src/map/items/item_armor.cpp'; then $(CYGPATH_W) 'src/map/items/item_armor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_armor.cpp'; fi`

dsgame-item_currency.o: src/map/items/item_currency.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_currency.o -MD -MP -MF $(DEPDIR)/dsgame-item_currency.Tpo -c -o dsgame-item_currency.o `test -f 'src/map/items/item_currency.cpp' || echo '$(srcdir)/'`src/map/items/item_currency.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_currency.Tpo $(DEPDIR)/dsgame-item_currency.Po
#	$(AM_V_CXX)source='src/map/items/item_currency.cpp' object='dsgame-item_currency.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_currency.o `test -f 'src/map/items/item_currency.cpp' || echo '$(srcdir)/'`src/map/items/item_currency.cpp

dsgame-item_currency.obj: src/map/items/item_currency.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_currency.obj -MD -MP -MF $(DEPDIR)/dsgame-item_currency.Tpo -c -o dsgame-item_currency.obj `if test -f 'src/map/items/item_currency.cpp'; then $(CYGPATH_W) 'src/map/items/item_currency.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_currency.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_currency.Tpo $(DEPDIR)/dsgame-item_currency.Po
#	$(AM_V_CXX)source='src/map/items/item_currency.cpp' object='dsgame-item_currency.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_currency.obj `if test -f 'src/map/items/item_currency.cpp'; then $(CYGPATH_W) 'src/map/items/item_currency.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_currency.cpp'; fi`

dsgame-item_fish.o: src/map/items/item_fish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_fish.o -MD -MP -MF $(DEPDIR)/dsgame-item_fish.Tpo -c -o dsgame-item_fish.o `test -f 'src/map/items/item_fish.cpp' || echo '$(srcdir)/'`src/map/items/item_fish.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_fish.Tpo $(DEPDIR)/dsgame-item_fish.Po
#	$(AM_V_CXX)source='src/map/items/item_fish.cpp' object='dsgame-item_fish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_fish.o `test -f 'src/map/items/item_fish.cpp' || echo '$(srcdir)/'`src/map/items/item_fish.cpp

dsgame-item_fish.obj: src/map/items/item_fish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_fish.obj -MD -MP -MF $(DEPDIR)/dsgame-item_fish.Tpo -c -o dsgame-item_fish.obj `if test -f 'src/map/items/item_fish.cpp'; then $(CYGPATH_W) 'src/map/items/item_fish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_fish.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_fish.Tpo $(DEPDIR)/dsgame-item_fish.Po
#	$(AM_V_CXX)source='src/map/items/item_fish.cpp' object='dsgame-item_fish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_fish.obj `if test -f 'src/map/items/item_fish.cpp'; then $(CYGPATH_W) 'src/map/items/item_fish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_fish.cpp'; fi`

dsgame-item_furnishing.o: src/map/items/item_furnishing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_furnishing.o -MD -MP -MF $(DEPDIR)/dsgame-item_furnishing.Tpo -c -o dsgame-item_furnishing.o `test -f 'src/map/items/item_furnishing.cpp' || echo '$(srcdir)/'`src/map/items/item_furnishing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_furnishing.Tpo $(DEPDIR)/dsgame-item_furnishing.Po
#	$(AM_V_CXX)source='src/map/items/item_furnishing.cpp' object='dsgame-item_furnishing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_furnishing.o `test -f 'src/map/items/item_furnishing.cpp' || echo '$(srcdir)/'`src/map/items/item_furnishing.cpp

dsgame-item_furnishing.obj: src/map/items/item_furnishing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_furnishing.obj -MD -MP -MF $(DEPDIR)/dsgame-item_furnishing.Tpo -c -o dsgame-item_furnishing.obj `if test -f 'src/map/items/item_furnishing.cpp'; then $(CYGPATH_W) 'src/map/items/item_furnishing.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_furnishing.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_furnishing.Tpo $(DEPDIR)/dsgame-item_furnishing.Po
#	$(AM_V_CXX)source='src/map/items/item_furnishing.cpp' object='dsgame-item_furnishing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_furnishing.obj `if test -f 'src/map/items/item_furnishing.cpp'; then $(CYGPATH_W) 'src/map/items/item_furnishing.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_furnishing.cpp'; fi`

dsgame-item_general.o: src/map/items/item_general.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_general.o -MD -MP -MF $(DEPDIR)/dsgame-item_general.Tpo -c -o dsgame-item_general.o `test -f 'src/map/items/item_general.cpp' || echo '$(srcdir)/'`src/map/items/item_general.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_general.Tpo $(DEPDIR)/dsgame-item_general.Po
#	$(AM_V_CXX)source='src/map/items/item_general.cpp' object='dsgame-item_general.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_general.o `test -f 'src/map/items/item_general.cpp' || echo '$(srcdir)/'`src/map/items/item_general.cpp

dsgame-item_general.obj: src/map/items/item_general.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_general.obj -MD -MP -MF $(DEPDIR)/dsgame-item_general.Tpo -c -o dsgame-item_general.obj `if test -f 'src/map/items/item_general.cpp'; then $(CYGPATH_W) 'src/map/items/item_general.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_general.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_general.Tpo $(DEPDIR)/dsgame-item_general.Po
#	$(AM_V_CXX)source='src/map/items/item_general.cpp' object='dsgame-item_general.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_general.obj `if test -f 'src/map/items/item_general.cpp'; then $(CYGPATH_W) 'src/map/items/item_general.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_general.cpp'; fi`

dsgame-item_linkshell.o: src/map/items/item_linkshell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_linkshell.o -MD -MP -MF $(DEPDIR)/dsgame-item_linkshell.Tpo -c -o dsgame-item_linkshell.o `test -f 'src/map/items/item_linkshell.cpp' || echo '$(srcdir)/'`src/map/items/item_linkshell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_linkshell.Tpo $(DEPDIR)/dsgame-item_linkshell.Po
#	$(AM_V_CXX)source='src/map/items/item_linkshell.cpp' object='dsgame-item_linkshell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_linkshell.o `test -f 'src/map/items/item_linkshell.cpp' || echo '$(srcdir)/'`src/map/items/item_linkshell.cpp

dsgame-item_linkshell.obj: src/map/items/item_linkshell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_linkshell.obj -MD -MP -MF $(DEPDIR)/dsgame-item_linkshell.Tpo -c -o dsgame-item_linkshell.obj `if test -f 'src/map/items/item_linkshell.cpp'; then $(CYGPATH_W) 'src/map/items/item_linkshell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_linkshell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_linkshell.Tpo $(DEPDIR)/dsgame-item_linkshell.Po
#	$(AM_V_CXX)source='src/map/items/item_linkshell.cpp' object='dsgame-item_linkshell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_linkshell.obj `if test -f 'src/map/items/item_linkshell.cpp'; then $(CYGPATH_W) 'src/map/items/item_linkshell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_linkshell.cpp'; fi`

dsgame-item_puppet.o: src/map/items/item_puppet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_puppet.o -MD -MP -MF $(DEPDIR)/dsgame-item_puppet.Tpo -c -o dsgame-item_puppet.o `test -f 'src/map/items/item_puppet.cpp' || echo '$(srcdir)/'`src/map/items/item_puppet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_puppet.Tpo $(DEPDIR)/dsgame-item_puppet.Po
#	$(AM_V_CXX)source='src/map/items/item_puppet.cpp' object='dsgame-item_puppet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_puppet.o `test -f 'src/map/items/item_puppet.cpp' || echo '$(srcdir)/'`src/map/items/item_puppet.cpp

dsgame-item_puppet.obj: src/map/items/item_puppet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_puppet.obj -MD -MP -MF $(DEPDIR)/dsgame-item_puppet.Tpo -c -o dsgame-item_puppet.obj `if test -f 'src/map/items/item_puppet.cpp'; then $(CYGPATH_W) 'src/map/items/item_puppet.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_puppet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_puppet.Tpo $(DEPDIR)/dsgame-item_puppet.Po
#	$(AM_V_CXX)source='src/map/items/item_puppet.cpp' object='dsgame-item_puppet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_puppet.obj `if test -f 'src/map/items/item_puppet.cpp'; then $(CYGPATH_W) 'src/map/items/item_puppet.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_puppet.cpp'; fi`

dsgame-item_shop.o: src/map/items/item_shop.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_shop.o -MD -MP -MF $(DEPDIR)/dsgame-item_shop.Tpo -c -o dsgame-item_shop.o `test -f 'src/map/items/item_shop.cpp' || echo '$(srcdir)/'`src/map/items/item_shop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_shop.Tpo $(DEPDIR)/dsgame-item_shop.Po
#	$(AM_V_CXX)source='src/map/items/item_shop.cpp' object='dsgame-item_shop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_shop.o `test -f 'src/map/items/item_shop.cpp' || echo '$(srcdir)/'`src/map/items/item_shop.cpp

dsgame-item_shop.obj: src/map/items/item_shop.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_shop.obj -MD -MP -MF $(DEPDIR)/dsgame-item_shop.Tpo -c -o dsgame-item_shop.obj `if test -f 'src/map/items/item_shop.cpp'; then $(CYGPATH_W) 'src/map/items/item_shop.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_shop.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_shop.Tpo $(DEPDIR)/dsgame-item_shop.Po
#	$(AM_V_CXX)source='src/map/items/item_shop.cpp' object='dsgame-item_shop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_shop.obj `if test -f 'src/map/items/item_shop.cpp'; then $(CYGPATH_W) 'src/map/items/item_shop.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_shop.cpp'; fi`

dsgame-item_usable.o: src/map/items/item_usable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_usable.o -MD -MP -MF $(DEPDIR)/dsgame-item_usable.Tpo -c -o dsgame-item_usable.o `test -f 'src/map/items/item_usable.cpp' || echo '$(srcdir)/'`src/map/items/item_usable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_usable.Tpo $(DEPDIR)/dsgame-item_usable.Po
#	$(AM_V_CXX)source='src/map/items/item_usable.cpp' object='dsgame-item_usable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_usable.o `test -f 'src/map/items/item_usable.cpp' || echo '$(srcdir)/'`src/map/items/item_usable.cpp

dsgame-item_usable.obj: src/map/items/item_usable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_usable.obj -MD -MP -MF $(DEPDIR)/dsgame-item_usable.Tpo -c -o dsgame-item_usable.obj `if test -f 'src/map/items/item_usable.cpp'; then $(CYGPATH_W) 'src/map/items/item_usable.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_usable.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_usable.Tpo $(DEPDIR)/dsgame-item_usable.Po
#	$(AM_V_CXX)source='src/map/items/item_usable.cpp' object='dsgame-item_usable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_usable.obj `if test -f 'src/map/items/item_usable.cpp'; then $(CYGPATH_W) 'src/map/items/item_usable.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_usable.cpp'; fi`

dsgame-item_weapon.o: src/map/items/item_weapon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_weapon.o -MD -MP -MF $(DEPDIR)/dsgame-item_weapon.Tpo -c -o dsgame-item_weapon.o `test -f 'src/map/items/item_weapon.cpp' || echo '$(srcdir)/'`src/map/items/item_weapon.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_weapon.Tpo $(DEPDIR)/dsgame-item_weapon.Po
#	$(AM_V_CXX)source='src/map/items/item_weapon.cpp' object='dsgame-item_weapon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_weapon.o `test -f 'src/map/items/item_weapon.cpp' || echo '$(srcdir)/'`src/map/items/item_weapon.cpp

dsgame-item_weapon.obj: src/map/items/item_weapon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_weapon.obj -MD -MP -MF $(DEPDIR)/dsgame-item_weapon.Tpo -c -o dsgame-item_weapon.obj `if test -f 'src/map/items/item_weapon.cpp'; then $(CYGPATH_W) 'src/map/items/item_weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_weapon.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_weapon.Tpo $(DEPDIR)/dsgame-item_weapon.Po
#	$(AM_V_CXX)source='src/map/items/item_weapon.cpp' object='dsgame-item_weapon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_weapon.obj `if test -f 'src/map/items/item_weapon.cpp'; then $(CYGPATH_W) 'src/map/items/item_weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/items/item_weapon.cpp'; fi`

dsgame-item_container.o: src/map/item_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_container.o -MD -MP -MF $(DEPDIR)/dsgame-item_container.Tpo -c -o dsgame-item_container.o `test -f 'src/map/item_container.cpp' || echo '$(srcdir)/'`src/map/item_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_container.Tpo $(DEPDIR)/dsgame-item_container.Po
#	$(AM_V_CXX)source='src/map/item_container.cpp' object='dsgame-item_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_container.o `test -f 'src/map/item_container.cpp' || echo '$(srcdir)/'`src/map/item_container.cpp

dsgame-item_container.obj: src/map/item_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-item_container.obj -MD -MP -MF $(DEPDIR)/dsgame-item_container.Tpo -c -o dsgame-item_container.obj `if test -f 'src/map/item_container.cpp'; then $(CYGPATH_W) 'src/map/item_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/item_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-item_container.Tpo $(DEPDIR)/dsgame-item_container.Po
#	$(AM_V_CXX)source='src/map/item_container.cpp' object='dsgame-item_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-item_container.obj `if test -f 'src/map/item_container.cpp'; then $(CYGPATH_W) 'src/map/item_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/item_container.cpp'; fi`

dsgame-latent_effect.o: src/map/latent_effect.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-latent_effect.o -MD -MP -MF $(DEPDIR)/dsgame-latent_effect.Tpo -c -o dsgame-latent_effect.o `test -f 'src/map/latent_effect.cpp' || echo '$(srcdir)/'`src/map/latent_effect.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-latent_effect.Tpo $(DEPDIR)/dsgame-latent_effect.Po
#	$(AM_V_CXX)source='src/map/latent_effect.cpp' object='dsgame-latent_effect.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-latent_effect.o `test -f 'src/map/latent_effect.cpp' || echo '$(srcdir)/'`src/map/latent_effect.cpp

dsgame-latent_effect.obj: src/map/latent_effect.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-latent_effect.obj -MD -MP -MF $(DEPDIR)/dsgame-latent_effect.Tpo -c -o dsgame-latent_effect.obj `if test -f 'src/map/latent_effect.cpp'; then $(CYGPATH_W) 'src/map/latent_effect.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/latent_effect.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-latent_effect.Tpo $(DEPDIR)/dsgame-latent_effect.Po
#	$(AM_V_CXX)source='src/map/latent_effect.cpp' object='dsgame-latent_effect.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-latent_effect.obj `if test -f 'src/map/latent_effect.cpp'; then $(CYGPATH_W) 'src/map/latent_effect.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/latent_effect.cpp'; fi`

dsgame-latent_effect_container.o: src/map/latent_effect_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-latent_effect_container.o -MD -MP -MF $(DEPDIR)/dsgame-latent_effect_container.Tpo -c -o dsgame-latent_effect_container.o `test -f 'src/map/latent_effect_container.cpp' || echo '$(srcdir)/'`src/map/latent_effect_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-latent_effect_container.Tpo $(DEPDIR)/dsgame-latent_effect_container.Po
#	$(AM_V_CXX)source='src/map/latent_effect_container.cpp' object='dsgame-latent_effect_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-latent_effect_container.o `test -f 'src/map/latent_effect_container.cpp' || echo '$(srcdir)/'`src/map/latent_effect_container.cpp

dsgame-latent_effect_container.obj: src/map/latent_effect_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-latent_effect_container.obj -MD -MP -MF $(DEPDIR)/dsgame-latent_effect_container.Tpo -c -o dsgame-latent_effect_container.obj `if test -f 'src/map/latent_effect_container.cpp'; then $(CYGPATH_W) 'src/map/latent_effect_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/latent_effect_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-latent_effect_container.Tpo $(DEPDIR)/dsgame-latent_effect_container.Po
#	$(AM_V_CXX)source='src/map/latent_effect_container.cpp' object='dsgame-latent_effect_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-latent_effect_container.obj `if test -f 'src/map/latent_effect_container.cpp'; then $(CYGPATH_W) 'src/map/latent_effect_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/latent_effect_container.cpp'; fi`

dsgame-linkshell.o: src/map/linkshell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-linkshell.o -MD -MP -MF $(DEPDIR)/dsgame-linkshell.Tpo -c -o dsgame-linkshell.o `test -f 'src/map/linkshell.cpp' || echo '$(srcdir)/'`src/map/linkshell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-linkshell.Tpo $(DEPDIR)/dsgame-linkshell.Po
#	$(AM_V_CXX)source='src/map/linkshell.cpp' object='dsgame-linkshell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-linkshell.o `test -f 'src/map/linkshell.cpp' || echo '$(srcdir)/'`src/map/linkshell.cpp

dsgame-linkshell.obj: src/map/linkshell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-linkshell.obj -MD -MP -MF $(DEPDIR)/dsgame-linkshell.Tpo -c -o dsgame-linkshell.obj `if test -f 'src/map/linkshell.cpp'; then $(CYGPATH_W) 'src/map/linkshell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/linkshell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-linkshell.Tpo $(DEPDIR)/dsgame-linkshell.Po
#	$(AM_V_CXX)source='src/map/linkshell.cpp' object='dsgame-linkshell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-linkshell.obj `if test -f 'src/map/linkshell.cpp'; then $(CYGPATH_W) 'src/map/linkshell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/linkshell.cpp'; fi`

dsgame-luautils.o: src/map/lua/luautils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-luautils.o -MD -MP -MF $(DEPDIR)/dsgame-luautils.Tpo -c -o dsgame-luautils.o `test -f 'src/map/lua/luautils.cpp' || echo '$(srcdir)/'`src/map/lua/luautils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-luautils.Tpo $(DEPDIR)/dsgame-luautils.Po
#	$(AM_V_CXX)source='src/map/lua/luautils.cpp' object='dsgame-luautils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-luautils.o `test -f 'src/map/lua/luautils.cpp' || echo '$(srcdir)/'`src/map/lua/luautils.cpp

dsgame-luautils.obj: src/map/lua/luautils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-luautils.obj -MD -MP -MF $(DEPDIR)/dsgame-luautils.Tpo -c -o dsgame-luautils.obj `if test -f 'src/map/lua/luautils.cpp'; then $(CYGPATH_W) 'src/map/lua/luautils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/luautils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-luautils.Tpo $(DEPDIR)/dsgame-luautils.Po
#	$(AM_V_CXX)source='src/map/lua/luautils.cpp' object='dsgame-luautils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-luautils.obj `if test -f 'src/map/lua/luautils.cpp'; then $(CYGPATH_W) 'src/map/lua/luautils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/luautils.cpp'; fi`

dsgame-lua_ability.o: src/map/lua/lua_ability.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_ability.o -MD -MP -MF $(DEPDIR)/dsgame-lua_ability.Tpo -c -o dsgame-lua_ability.o `test -f 'src/map/lua/lua_ability.cpp' || echo '$(srcdir)/'`src/map/lua/lua_ability.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_ability.Tpo $(DEPDIR)/dsgame-lua_ability.Po
#	$(AM_V_CXX)source='src/map/lua/lua_ability.cpp' object='dsgame-lua_ability.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_ability.o `test -f 'src/map/lua/lua_ability.cpp' || echo '$(srcdir)/'`src/map/lua/lua_ability.cpp

dsgame-lua_ability.obj: src/map/lua/lua_ability.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_ability.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_ability.Tpo -c -o dsgame-lua_ability.obj `if test -f 'src/map/lua/lua_ability.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_ability.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_ability.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_ability.Tpo $(DEPDIR)/dsgame-lua_ability.Po
#	$(AM_V_CXX)source='src/map/lua/lua_ability.cpp' object='dsgame-lua_ability.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_ability.obj `if test -f 'src/map/lua/lua_ability.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_ability.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_ability.cpp'; fi`

dsgame-lua_action.o: src/map/lua/lua_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_action.o -MD -MP -MF $(DEPDIR)/dsgame-lua_action.Tpo -c -o dsgame-lua_action.o `test -f 'src/map/lua/lua_action.cpp' || echo '$(srcdir)/'`src/map/lua/lua_action.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_action.Tpo $(DEPDIR)/dsgame-lua_action.Po
#	$(AM_V_CXX)source='src/map/lua/lua_action.cpp' object='dsgame-lua_action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_action.o `test -f 'src/map/lua/lua_action.cpp' || echo '$(srcdir)/'`src/map/lua/lua_action.cpp

dsgame-lua_action.obj: src/map/lua/lua_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_action.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_action.Tpo -c -o dsgame-lua_action.obj `if test -f 'src/map/lua/lua_action.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_action.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_action.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_action.Tpo $(DEPDIR)/dsgame-lua_action.Po
#	$(AM_V_CXX)source='src/map/lua/lua_action.cpp' object='dsgame-lua_action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_action.obj `if test -f 'src/map/lua/lua_action.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_action.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_action.cpp'; fi`

dsgame-lua_baseentity.o: src/map/lua/lua_baseentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_baseentity.o -MD -MP -MF $(DEPDIR)/dsgame-lua_baseentity.Tpo -c -o dsgame-lua_baseentity.o `test -f 'src/map/lua/lua_baseentity.cpp' || echo '$(srcdir)/'`src/map/lua/lua_baseentity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_baseentity.Tpo $(DEPDIR)/dsgame-lua_baseentity.Po
#	$(AM_V_CXX)source='src/map/lua/lua_baseentity.cpp' object='dsgame-lua_baseentity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_baseentity.o `test -f 'src/map/lua/lua_baseentity.cpp' || echo '$(srcdir)/'`src/map/lua/lua_baseentity.cpp

dsgame-lua_baseentity.obj: src/map/lua/lua_baseentity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_baseentity.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_baseentity.Tpo -c -o dsgame-lua_baseentity.obj `if test -f 'src/map/lua/lua_baseentity.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_baseentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_baseentity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_baseentity.Tpo $(DEPDIR)/dsgame-lua_baseentity.Po
#	$(AM_V_CXX)source='src/map/lua/lua_baseentity.cpp' object='dsgame-lua_baseentity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_baseentity.obj `if test -f 'src/map/lua/lua_baseentity.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_baseentity.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_baseentity.cpp'; fi`

dsgame-lua_battlefield.o: src/map/lua/lua_battlefield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_battlefield.o -MD -MP -MF $(DEPDIR)/dsgame-lua_battlefield.Tpo -c -o dsgame-lua_battlefield.o `test -f 'src/map/lua/lua_battlefield.cpp' || echo '$(srcdir)/'`src/map/lua/lua_battlefield.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_battlefield.Tpo $(DEPDIR)/dsgame-lua_battlefield.Po
#	$(AM_V_CXX)source='src/map/lua/lua_battlefield.cpp' object='dsgame-lua_battlefield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_battlefield.o `test -f 'src/map/lua/lua_battlefield.cpp' || echo '$(srcdir)/'`src/map/lua/lua_battlefield.cpp

dsgame-lua_battlefield.obj: src/map/lua/lua_battlefield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_battlefield.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_battlefield.Tpo -c -o dsgame-lua_battlefield.obj `if test -f 'src/map/lua/lua_battlefield.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_battlefield.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_battlefield.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_battlefield.Tpo $(DEPDIR)/dsgame-lua_battlefield.Po
#	$(AM_V_CXX)source='src/map/lua/lua_battlefield.cpp' object='dsgame-lua_battlefield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_battlefield.obj `if test -f 'src/map/lua/lua_battlefield.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_battlefield.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_battlefield.cpp'; fi`

dsgame-lua_instance.o: src/map/lua/lua_instance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_instance.o -MD -MP -MF $(DEPDIR)/dsgame-lua_instance.Tpo -c -o dsgame-lua_instance.o `test -f 'src/map/lua/lua_instance.cpp' || echo '$(srcdir)/'`src/map/lua/lua_instance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_instance.Tpo $(DEPDIR)/dsgame-lua_instance.Po
#	$(AM_V_CXX)source='src/map/lua/lua_instance.cpp' object='dsgame-lua_instance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_instance.o `test -f 'src/map/lua/lua_instance.cpp' || echo '$(srcdir)/'`src/map/lua/lua_instance.cpp

dsgame-lua_instance.obj: src/map/lua/lua_instance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_instance.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_instance.Tpo -c -o dsgame-lua_instance.obj `if test -f 'src/map/lua/lua_instance.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_instance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_instance.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_instance.Tpo $(DEPDIR)/dsgame-lua_instance.Po
#	$(AM_V_CXX)source='src/map/lua/lua_instance.cpp' object='dsgame-lua_instance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_instance.obj `if test -f 'src/map/lua/lua_instance.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_instance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_instance.cpp'; fi`

dsgame-lua_item.o: src/map/lua/lua_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_item.o -MD -MP -MF $(DEPDIR)/dsgame-lua_item.Tpo -c -o dsgame-lua_item.o `test -f 'src/map/lua/lua_item.cpp' || echo '$(srcdir)/'`src/map/lua/lua_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_item.Tpo $(DEPDIR)/dsgame-lua_item.Po
#	$(AM_V_CXX)source='src/map/lua/lua_item.cpp' object='dsgame-lua_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_item.o `test -f 'src/map/lua/lua_item.cpp' || echo '$(srcdir)/'`src/map/lua/lua_item.cpp

dsgame-lua_item.obj: src/map/lua/lua_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_item.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_item.Tpo -c -o dsgame-lua_item.obj `if test -f 'src/map/lua/lua_item.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_item.Tpo $(DEPDIR)/dsgame-lua_item.Po
#	$(AM_V_CXX)source='src/map/lua/lua_item.cpp' object='dsgame-lua_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_item.obj `if test -f 'src/map/lua/lua_item.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_item.cpp'; fi`

dsgame-lua_mobskill.o: src/map/lua/lua_mobskill.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_mobskill.o -MD -MP -MF $(DEPDIR)/dsgame-lua_mobskill.Tpo -c -o dsgame-lua_mobskill.o `test -f 'src/map/lua/lua_mobskill.cpp' || echo '$(srcdir)/'`src/map/lua/lua_mobskill.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_mobskill.Tpo $(DEPDIR)/dsgame-lua_mobskill.Po
#	$(AM_V_CXX)source='src/map/lua/lua_mobskill.cpp' object='dsgame-lua_mobskill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_mobskill.o `test -f 'src/map/lua/lua_mobskill.cpp' || echo '$(srcdir)/'`src/map/lua/lua_mobskill.cpp

dsgame-lua_mobskill.obj: src/map/lua/lua_mobskill.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_mobskill.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_mobskill.Tpo -c -o dsgame-lua_mobskill.obj `if test -f 'src/map/lua/lua_mobskill.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_mobskill.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_mobskill.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_mobskill.Tpo $(DEPDIR)/dsgame-lua_mobskill.Po
#	$(AM_V_CXX)source='src/map/lua/lua_mobskill.cpp' object='dsgame-lua_mobskill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_mobskill.obj `if test -f 'src/map/lua/lua_mobskill.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_mobskill.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_mobskill.cpp'; fi`

dsgame-lua_region.o: src/map/lua/lua_region.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_region.o -MD -MP -MF $(DEPDIR)/dsgame-lua_region.Tpo -c -o dsgame-lua_region.o `test -f 'src/map/lua/lua_region.cpp' || echo '$(srcdir)/'`src/map/lua/lua_region.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_region.Tpo $(DEPDIR)/dsgame-lua_region.Po
#	$(AM_V_CXX)source='src/map/lua/lua_region.cpp' object='dsgame-lua_region.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_region.o `test -f 'src/map/lua/lua_region.cpp' || echo '$(srcdir)/'`src/map/lua/lua_region.cpp

dsgame-lua_region.obj: src/map/lua/lua_region.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_region.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_region.Tpo -c -o dsgame-lua_region.obj `if test -f 'src/map/lua/lua_region.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_region.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_region.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_region.Tpo $(DEPDIR)/dsgame-lua_region.Po
#	$(AM_V_CXX)source='src/map/lua/lua_region.cpp' object='dsgame-lua_region.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_region.obj `if test -f 'src/map/lua/lua_region.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_region.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_region.cpp'; fi`

dsgame-lua_spell.o: src/map/lua/lua_spell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_spell.o -MD -MP -MF $(DEPDIR)/dsgame-lua_spell.Tpo -c -o dsgame-lua_spell.o `test -f 'src/map/lua/lua_spell.cpp' || echo '$(srcdir)/'`src/map/lua/lua_spell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_spell.Tpo $(DEPDIR)/dsgame-lua_spell.Po
#	$(AM_V_CXX)source='src/map/lua/lua_spell.cpp' object='dsgame-lua_spell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_spell.o `test -f 'src/map/lua/lua_spell.cpp' || echo '$(srcdir)/'`src/map/lua/lua_spell.cpp

dsgame-lua_spell.obj: src/map/lua/lua_spell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_spell.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_spell.Tpo -c -o dsgame-lua_spell.obj `if test -f 'src/map/lua/lua_spell.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_spell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_spell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_spell.Tpo $(DEPDIR)/dsgame-lua_spell.Po
#	$(AM_V_CXX)source='src/map/lua/lua_spell.cpp' object='dsgame-lua_spell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_spell.obj `if test -f 'src/map/lua/lua_spell.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_spell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_spell.cpp'; fi`

dsgame-lua_statuseffect.o: src/map/lua/lua_statuseffect.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_statuseffect.o -MD -MP -MF $(DEPDIR)/dsgame-lua_statuseffect.Tpo -c -o dsgame-lua_statuseffect.o `test -f 'src/map/lua/lua_statuseffect.cpp' || echo '$(srcdir)/'`src/map/lua/lua_statuseffect.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_statuseffect.Tpo $(DEPDIR)/dsgame-lua_statuseffect.Po
#	$(AM_V_CXX)source='src/map/lua/lua_statuseffect.cpp' object='dsgame-lua_statuseffect.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_statuseffect.o `test -f 'src/map/lua/lua_statuseffect.cpp' || echo '$(srcdir)/'`src/map/lua/lua_statuseffect.cpp

dsgame-lua_statuseffect.obj: src/map/lua/lua_statuseffect.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_statuseffect.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_statuseffect.Tpo -c -o dsgame-lua_statuseffect.obj `if test -f 'src/map/lua/lua_statuseffect.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_statuseffect.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_statuseffect.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_statuseffect.Tpo $(DEPDIR)/dsgame-lua_statuseffect.Po
#	$(AM_V_CXX)source='src/map/lua/lua_statuseffect.cpp' object='dsgame-lua_statuseffect.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_statuseffect.obj `if test -f 'src/map/lua/lua_statuseffect.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_statuseffect.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_statuseffect.cpp'; fi`

dsgame-lua_trade_container.o: src/map/lua/lua_trade_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_trade_container.o -MD -MP -MF $(DEPDIR)/dsgame-lua_trade_container.Tpo -c -o dsgame-lua_trade_container.o `test -f 'src/map/lua/lua_trade_container.cpp' || echo '$(srcdir)/'`src/map/lua/lua_trade_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_trade_container.Tpo $(DEPDIR)/dsgame-lua_trade_container.Po
#	$(AM_V_CXX)source='src/map/lua/lua_trade_container.cpp' object='dsgame-lua_trade_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_trade_container.o `test -f 'src/map/lua/lua_trade_container.cpp' || echo '$(srcdir)/'`src/map/lua/lua_trade_container.cpp

dsgame-lua_trade_container.obj: src/map/lua/lua_trade_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_trade_container.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_trade_container.Tpo -c -o dsgame-lua_trade_container.obj `if test -f 'src/map/lua/lua_trade_container.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_trade_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_trade_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_trade_container.Tpo $(DEPDIR)/dsgame-lua_trade_container.Po
#	$(AM_V_CXX)source='src/map/lua/lua_trade_container.cpp' object='dsgame-lua_trade_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_trade_container.obj `if test -f 'src/map/lua/lua_trade_container.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_trade_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_trade_container.cpp'; fi`

dsgame-lua_zone.o: src/map/lua/lua_zone.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_zone.o -MD -MP -MF $(DEPDIR)/dsgame-lua_zone.Tpo -c -o dsgame-lua_zone.o `test -f 'src/map/lua/lua_zone.cpp' || echo '$(srcdir)/'`src/map/lua/lua_zone.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_zone.Tpo $(DEPDIR)/dsgame-lua_zone.Po
#	$(AM_V_CXX)source='src/map/lua/lua_zone.cpp' object='dsgame-lua_zone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_zone.o `test -f 'src/map/lua/lua_zone.cpp' || echo '$(srcdir)/'`src/map/lua/lua_zone.cpp

dsgame-lua_zone.obj: src/map/lua/lua_zone.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lua_zone.obj -MD -MP -MF $(DEPDIR)/dsgame-lua_zone.Tpo -c -o dsgame-lua_zone.obj `if test -f 'src/map/lua/lua_zone.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_zone.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_zone.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lua_zone.Tpo $(DEPDIR)/dsgame-lua_zone.Po
#	$(AM_V_CXX)source='src/map/lua/lua_zone.cpp' object='dsgame-lua_zone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lua_zone.obj `if test -f 'src/map/lua/lua_zone.cpp'; then $(CYGPATH_W) 'src/map/lua/lua_zone.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/lua/lua_zone.cpp'; fi`

dsgame-map.o: src/map/map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-map.o -MD -MP -MF $(DEPDIR)/dsgame-map.Tpo -c -o dsgame-map.o `test -f 'src/map/map.cpp' || echo '$(srcdir)/'`src/map/map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-map.Tpo $(DEPDIR)/dsgame-map.Po
#	$(AM_V_CXX)source='src/map/map.cpp' object='dsgame-map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-map.o `test -f 'src/map/map.cpp' || echo '$(srcdir)/'`src/map/map.cpp

dsgame-map.obj: src/map/map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-map.obj -MD -MP -MF $(DEPDIR)/dsgame-map.Tpo -c -o dsgame-map.obj `if test -f 'src/map/map.cpp'; then $(CYGPATH_W) 'src/map/map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-map.Tpo $(DEPDIR)/dsgame-map.Po
#	$(AM_V_CXX)source='src/map/map.cpp' object='dsgame-map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-map.obj `if test -f 'src/map/map.cpp'; then $(CYGPATH_W) 'src/map/map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/map.cpp'; fi`

dsgame-merit.o: src/map/merit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-merit.o -MD -MP -MF $(DEPDIR)/dsgame-merit.Tpo -c -o dsgame-merit.o `test -f 'src/map/merit.cpp' || echo '$(srcdir)/'`src/map/merit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-merit.Tpo $(DEPDIR)/dsgame-merit.Po
#	$(AM_V_CXX)source='src/map/merit.cpp' object='dsgame-merit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-merit.o `test -f 'src/map/merit.cpp' || echo '$(srcdir)/'`src/map/merit.cpp

dsgame-merit.obj: src/map/merit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-merit.obj -MD -MP -MF $(DEPDIR)/dsgame-merit.Tpo -c -o dsgame-merit.obj `if test -f 'src/map/merit.cpp'; then $(CYGPATH_W) 'src/map/merit.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/merit.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-merit.Tpo $(DEPDIR)/dsgame-merit.Po
#	$(AM_V_CXX)source='src/map/merit.cpp' object='dsgame-merit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-merit.obj `if test -f 'src/map/merit.cpp'; then $(CYGPATH_W) 'src/map/merit.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/merit.cpp'; fi`

dsgame-mobskill.o: src/map/mobskill.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobskill.o -MD -MP -MF $(DEPDIR)/dsgame-mobskill.Tpo -c -o dsgame-mobskill.o `test -f 'src/map/mobskill.cpp' || echo '$(srcdir)/'`src/map/mobskill.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobskill.Tpo $(DEPDIR)/dsgame-mobskill.Po
#	$(AM_V_CXX)source='src/map/mobskill.cpp' object='dsgame-mobskill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobskill.o `test -f 'src/map/mobskill.cpp' || echo '$(srcdir)/'`src/map/mobskill.cpp

dsgame-mobskill.obj: src/map/mobskill.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobskill.obj -MD -MP -MF $(DEPDIR)/dsgame-mobskill.Tpo -c -o dsgame-mobskill.obj `if test -f 'src/map/mobskill.cpp'; then $(CYGPATH_W) 'src/map/mobskill.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/mobskill.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobskill.Tpo $(DEPDIR)/dsgame-mobskill.Po
#	$(AM_V_CXX)source='src/map/mobskill.cpp' object='dsgame-mobskill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobskill.obj `if test -f 'src/map/mobskill.cpp'; then $(CYGPATH_W) 'src/map/mobskill.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/mobskill.cpp'; fi`

dsgame-mob_spell_container.o: src/map/mob_spell_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mob_spell_container.o -MD -MP -MF $(DEPDIR)/dsgame-mob_spell_container.Tpo -c -o dsgame-mob_spell_container.o `test -f 'src/map/mob_spell_container.cpp' || echo '$(srcdir)/'`src/map/mob_spell_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mob_spell_container.Tpo $(DEPDIR)/dsgame-mob_spell_container.Po
#	$(AM_V_CXX)source='src/map/mob_spell_container.cpp' object='dsgame-mob_spell_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mob_spell_container.o `test -f 'src/map/mob_spell_container.cpp' || echo '$(srcdir)/'`src/map/mob_spell_container.cpp

dsgame-mob_spell_container.obj: src/map/mob_spell_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mob_spell_container.obj -MD -MP -MF $(DEPDIR)/dsgame-mob_spell_container.Tpo -c -o dsgame-mob_spell_container.obj `if test -f 'src/map/mob_spell_container.cpp'; then $(CYGPATH_W) 'src/map/mob_spell_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/mob_spell_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mob_spell_container.Tpo $(DEPDIR)/dsgame-mob_spell_container.Po
#	$(AM_V_CXX)source='src/map/mob_spell_container.cpp' object='dsgame-mob_spell_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mob_spell_container.obj `if test -f 'src/map/mob_spell_container.cpp'; then $(CYGPATH_W) 'src/map/mob_spell_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/mob_spell_container.cpp'; fi`

dsgame-mob_spell_list.o: src/map/mob_spell_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mob_spell_list.o -MD -MP -MF $(DEPDIR)/dsgame-mob_spell_list.Tpo -c -o dsgame-mob_spell_list.o `test -f 'src/map/mob_spell_list.cpp' || echo '$(srcdir)/'`src/map/mob_spell_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mob_spell_list.Tpo $(DEPDIR)/dsgame-mob_spell_list.Po
#	$(AM_V_CXX)source='src/map/mob_spell_list.cpp' object='dsgame-mob_spell_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mob_spell_list.o `test -f 'src/map/mob_spell_list.cpp' || echo '$(srcdir)/'`src/map/mob_spell_list.cpp

dsgame-mob_spell_list.obj: src/map/mob_spell_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mob_spell_list.obj -MD -MP -MF $(DEPDIR)/dsgame-mob_spell_list.Tpo -c -o dsgame-mob_spell_list.obj `if test -f 'src/map/mob_spell_list.cpp'; then $(CYGPATH_W) 'src/map/mob_spell_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/mob_spell_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mob_spell_list.Tpo $(DEPDIR)/dsgame-mob_spell_list.Po
#	$(AM_V_CXX)source='src/map/mob_spell_list.cpp' object='dsgame-mob_spell_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mob_spell_list.obj `if test -f 'src/map/mob_spell_list.cpp'; then $(CYGPATH_W) 'src/map/mob_spell_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/mob_spell_list.cpp'; fi`

dsgame-modifier.o: src/map/modifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-modifier.o -MD -MP -MF $(DEPDIR)/dsgame-modifier.Tpo -c -o dsgame-modifier.o `test -f 'src/map/modifier.cpp' || echo '$(srcdir)/'`src/map/modifier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-modifier.Tpo $(DEPDIR)/dsgame-modifier.Po
#	$(AM_V_CXX)source='src/map/modifier.cpp' object='dsgame-modifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-modifier.o `test -f 'src/map/modifier.cpp' || echo '$(srcdir)/'`src/map/modifier.cpp

dsgame-modifier.obj: src/map/modifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-modifier.obj -MD -MP -MF $(DEPDIR)/dsgame-modifier.Tpo -c -o dsgame-modifier.obj `if test -f 'src/map/modifier.cpp'; then $(CYGPATH_W) 'src/map/modifier.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/modifier.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-modifier.Tpo $(DEPDIR)/dsgame-modifier.Po
#	$(AM_V_CXX)source='src/map/modifier.cpp' object='dsgame-modifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-modifier.obj `if test -f 'src/map/modifier.cpp'; then $(CYGPATH_W) 'src/map/modifier.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/modifier.cpp'; fi`

dsgame-navmesh.o: src/map/navmesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-navmesh.o -MD -MP -MF $(DEPDIR)/dsgame-navmesh.Tpo -c -o dsgame-navmesh.o `test -f 'src/map/navmesh.cpp' || echo '$(srcdir)/'`src/map/navmesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-navmesh.Tpo $(DEPDIR)/dsgame-navmesh.Po
#	$(AM_V_CXX)source='src/map/navmesh.cpp' object='dsgame-navmesh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-navmesh.o `test -f 'src/map/navmesh.cpp' || echo '$(srcdir)/'`src/map/navmesh.cpp

dsgame-navmesh.obj: src/map/navmesh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-navmesh.obj -MD -MP -MF $(DEPDIR)/dsgame-navmesh.Tpo -c -o dsgame-navmesh.obj `if test -f 'src/map/navmesh.cpp'; then $(CYGPATH_W) 'src/map/navmesh.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/navmesh.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-navmesh.Tpo $(DEPDIR)/dsgame-navmesh.Po
#	$(AM_V_CXX)source='src/map/navmesh.cpp' object='dsgame-navmesh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-navmesh.obj `if test -f 'src/map/navmesh.cpp'; then $(CYGPATH_W) 'src/map/navmesh.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/navmesh.cpp'; fi`

dsgame-action.o: src/map/packets/action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-action.o -MD -MP -MF $(DEPDIR)/dsgame-action.Tpo -c -o dsgame-action.o `test -f 'src/map/packets/action.cpp' || echo '$(srcdir)/'`src/map/packets/action.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-action.Tpo $(DEPDIR)/dsgame-action.Po
#	$(AM_V_CXX)source='src/map/packets/action.cpp' object='dsgame-action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-action.o `test -f 'src/map/packets/action.cpp' || echo '$(srcdir)/'`src/map/packets/action.cpp

dsgame-action.obj: src/map/packets/action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-action.obj -MD -MP -MF $(DEPDIR)/dsgame-action.Tpo -c -o dsgame-action.obj `if test -f 'src/map/packets/action.cpp'; then $(CYGPATH_W) 'src/map/packets/action.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/action.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-action.Tpo $(DEPDIR)/dsgame-action.Po
#	$(AM_V_CXX)source='src/map/packets/action.cpp' object='dsgame-action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-action.obj `if test -f 'src/map/packets/action.cpp'; then $(CYGPATH_W) 'src/map/packets/action.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/action.cpp'; fi`

dsgame-auction_house.o: src/map/packets/auction_house.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-auction_house.o -MD -MP -MF $(DEPDIR)/dsgame-auction_house.Tpo -c -o dsgame-auction_house.o `test -f 'src/map/packets/auction_house.cpp' || echo '$(srcdir)/'`src/map/packets/auction_house.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-auction_house.Tpo $(DEPDIR)/dsgame-auction_house.Po
#	$(AM_V_CXX)source='src/map/packets/auction_house.cpp' object='dsgame-auction_house.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-auction_house.o `test -f 'src/map/packets/auction_house.cpp' || echo '$(srcdir)/'`src/map/packets/auction_house.cpp

dsgame-auction_house.obj: src/map/packets/auction_house.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-auction_house.obj -MD -MP -MF $(DEPDIR)/dsgame-auction_house.Tpo -c -o dsgame-auction_house.obj `if test -f 'src/map/packets/auction_house.cpp'; then $(CYGPATH_W) 'src/map/packets/auction_house.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/auction_house.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-auction_house.Tpo $(DEPDIR)/dsgame-auction_house.Po
#	$(AM_V_CXX)source='src/map/packets/auction_house.cpp' object='dsgame-auction_house.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-auction_house.obj `if test -f 'src/map/packets/auction_house.cpp'; then $(CYGPATH_W) 'src/map/packets/auction_house.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/auction_house.cpp'; fi`

dsgame-bazaar_confirmation.o: src/map/packets/bazaar_confirmation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_confirmation.o -MD -MP -MF $(DEPDIR)/dsgame-bazaar_confirmation.Tpo -c -o dsgame-bazaar_confirmation.o `test -f 'src/map/packets/bazaar_confirmation.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_confirmation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_confirmation.Tpo $(DEPDIR)/dsgame-bazaar_confirmation.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_confirmation.cpp' object='dsgame-bazaar_confirmation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_confirmation.o `test -f 'src/map/packets/bazaar_confirmation.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_confirmation.cpp

dsgame-bazaar_confirmation.obj: src/map/packets/bazaar_confirmation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_confirmation.obj -MD -MP -MF $(DEPDIR)/dsgame-bazaar_confirmation.Tpo -c -o dsgame-bazaar_confirmation.obj `if test -f 'src/map/packets/bazaar_confirmation.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_confirmation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_confirmation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_confirmation.Tpo $(DEPDIR)/dsgame-bazaar_confirmation.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_confirmation.cpp' object='dsgame-bazaar_confirmation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_confirmation.obj `if test -f 'src/map/packets/bazaar_confirmation.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_confirmation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_confirmation.cpp'; fi`

dsgame-bazaar_purchase.o: src/map/packets/bazaar_purchase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_purchase.o -MD -MP -MF $(DEPDIR)/dsgame-bazaar_purchase.Tpo -c -o dsgame-bazaar_purchase.o `test -f 'src/map/packets/bazaar_purchase.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_purchase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_purchase.Tpo $(DEPDIR)/dsgame-bazaar_purchase.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_purchase.cpp' object='dsgame-bazaar_purchase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_purchase.o `test -f 'src/map/packets/bazaar_purchase.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_purchase.cpp

dsgame-bazaar_purchase.obj: src/map/packets/bazaar_purchase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_purchase.obj -MD -MP -MF $(DEPDIR)/dsgame-bazaar_purchase.Tpo -c -o dsgame-bazaar_purchase.obj `if test -f 'src/map/packets/bazaar_purchase.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_purchase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_purchase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_purchase.Tpo $(DEPDIR)/dsgame-bazaar_purchase.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_purchase.cpp' object='dsgame-bazaar_purchase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_purchase.obj `if test -f 'src/map/packets/bazaar_purchase.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_purchase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_purchase.cpp'; fi`

dsgame-bazaar_check.o: src/map/packets/bazaar_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_check.o -MD -MP -MF $(DEPDIR)/dsgame-bazaar_check.Tpo -c -o dsgame-bazaar_check.o `test -f 'src/map/packets/bazaar_check.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_check.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_check.Tpo $(DEPDIR)/dsgame-bazaar_check.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_check.cpp' object='dsgame-bazaar_check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_check.o `test -f 'src/map/packets/bazaar_check.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_check.cpp

dsgame-bazaar_check.obj: src/map/packets/bazaar_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_check.obj -MD -MP -MF $(DEPDIR)/dsgame-bazaar_check.Tpo -c -o dsgame-bazaar_check.obj `if test -f 'src/map/packets/bazaar_check.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_check.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_check.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_check.Tpo $(DEPDIR)/dsgame-bazaar_check.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_check.cpp' object='dsgame-bazaar_check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_check.obj `if test -f 'src/map/packets/bazaar_check.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_check.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_check.cpp'; fi`

dsgame-bazaar_close.o: src/map/packets/bazaar_close.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_close.o -MD -MP -MF $(DEPDIR)/dsgame-bazaar_close.Tpo -c -o dsgame-bazaar_close.o `test -f 'src/map/packets/bazaar_close.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_close.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_close.Tpo $(DEPDIR)/dsgame-bazaar_close.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_close.cpp' object='dsgame-bazaar_close.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_close.o `test -f 'src/map/packets/bazaar_close.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_close.cpp

dsgame-bazaar_close.obj: src/map/packets/bazaar_close.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_close.obj -MD -MP -MF $(DEPDIR)/dsgame-bazaar_close.Tpo -c -o dsgame-bazaar_close.obj `if test -f 'src/map/packets/bazaar_close.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_close.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_close.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_close.Tpo $(DEPDIR)/dsgame-bazaar_close.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_close.cpp' object='dsgame-bazaar_close.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_close.obj `if test -f 'src/map/packets/bazaar_close.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_close.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_close.cpp'; fi`

dsgame-bazaar_item.o: src/map/packets/bazaar_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_item.o -MD -MP -MF $(DEPDIR)/dsgame-bazaar_item.Tpo -c -o dsgame-bazaar_item.o `test -f 'src/map/packets/bazaar_item.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_item.Tpo $(DEPDIR)/dsgame-bazaar_item.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_item.cpp' object='dsgame-bazaar_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_item.o `test -f 'src/map/packets/bazaar_item.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_item.cpp

dsgame-bazaar_item.obj: src/map/packets/bazaar_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_item.obj -MD -MP -MF $(DEPDIR)/dsgame-bazaar_item.Tpo -c -o dsgame-bazaar_item.obj `if test -f 'src/map/packets/bazaar_item.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_item.Tpo $(DEPDIR)/dsgame-bazaar_item.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_item.cpp' object='dsgame-bazaar_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_item.obj `if test -f 'src/map/packets/bazaar_item.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_item.cpp'; fi`

dsgame-bazaar_message.o: src/map/packets/bazaar_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_message.o -MD -MP -MF $(DEPDIR)/dsgame-bazaar_message.Tpo -c -o dsgame-bazaar_message.o `test -f 'src/map/packets/bazaar_message.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_message.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_message.Tpo $(DEPDIR)/dsgame-bazaar_message.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_message.cpp' object='dsgame-bazaar_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_message.o `test -f 'src/map/packets/bazaar_message.cpp' || echo '$(srcdir)/'`src/map/packets/bazaar_message.cpp

dsgame-bazaar_message.obj: src/map/packets/bazaar_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-bazaar_message.obj -MD -MP -MF $(DEPDIR)/dsgame-bazaar_message.Tpo -c -o dsgame-bazaar_message.obj `if test -f 'src/map/packets/bazaar_message.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_message.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-bazaar_message.Tpo $(DEPDIR)/dsgame-bazaar_message.Po
#	$(AM_V_CXX)source='src/map/packets/bazaar_message.cpp' object='dsgame-bazaar_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-bazaar_message.obj `if test -f 'src/map/packets/bazaar_message.cpp'; then $(CYGPATH_W) 'src/map/packets/bazaar_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/bazaar_message.cpp'; fi`

dsgame-blacklist.o: src/map/packets/blacklist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blacklist.o -MD -MP -MF $(DEPDIR)/dsgame-blacklist.Tpo -c -o dsgame-blacklist.o `test -f 'src/map/packets/blacklist.cpp' || echo '$(srcdir)/'`src/map/packets/blacklist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blacklist.Tpo $(DEPDIR)/dsgame-blacklist.Po
#	$(AM_V_CXX)source='src/map/packets/blacklist.cpp' object='dsgame-blacklist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blacklist.o `test -f 'src/map/packets/blacklist.cpp' || echo '$(srcdir)/'`src/map/packets/blacklist.cpp

dsgame-blacklist.obj: src/map/packets/blacklist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blacklist.obj -MD -MP -MF $(DEPDIR)/dsgame-blacklist.Tpo -c -o dsgame-blacklist.obj `if test -f 'src/map/packets/blacklist.cpp'; then $(CYGPATH_W) 'src/map/packets/blacklist.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/blacklist.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blacklist.Tpo $(DEPDIR)/dsgame-blacklist.Po
#	$(AM_V_CXX)source='src/map/packets/blacklist.cpp' object='dsgame-blacklist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blacklist.obj `if test -f 'src/map/packets/blacklist.cpp'; then $(CYGPATH_W) 'src/map/packets/blacklist.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/blacklist.cpp'; fi`

dsgame-campaing_map.o: src/map/packets/campaing_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-campaing_map.o -MD -MP -MF $(DEPDIR)/dsgame-campaing_map.Tpo -c -o dsgame-campaing_map.o `test -f 'src/map/packets/campaing_map.cpp' || echo '$(srcdir)/'`src/map/packets/campaing_map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-campaing_map.Tpo $(DEPDIR)/dsgame-campaing_map.Po
#	$(AM_V_CXX)source='src/map/packets/campaing_map.cpp' object='dsgame-campaing_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-campaing_map.o `test -f 'src/map/packets/campaing_map.cpp' || echo '$(srcdir)/'`src/map/packets/campaing_map.cpp

dsgame-campaing_map.obj: src/map/packets/campaing_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-campaing_map.obj -MD -MP -MF $(DEPDIR)/dsgame-campaing_map.Tpo -c -o dsgame-campaing_map.obj `if test -f 'src/map/packets/campaing_map.cpp'; then $(CYGPATH_W) 'src/map/packets/campaing_map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/campaing_map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-campaing_map.Tpo $(DEPDIR)/dsgame-campaing_map.Po
#	$(AM_V_CXX)source='src/map/packets/campaing_map.cpp' object='dsgame-campaing_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-campaing_map.obj `if test -f 'src/map/packets/campaing_map.cpp'; then $(CYGPATH_W) 'src/map/packets/campaing_map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/campaing_map.cpp'; fi`

dsgame-caught_fish.o: src/map/packets/caught_fish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-caught_fish.o -MD -MP -MF $(DEPDIR)/dsgame-caught_fish.Tpo -c -o dsgame-caught_fish.o `test -f 'src/map/packets/caught_fish.cpp' || echo '$(srcdir)/'`src/map/packets/caught_fish.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-caught_fish.Tpo $(DEPDIR)/dsgame-caught_fish.Po
#	$(AM_V_CXX)source='src/map/packets/caught_fish.cpp' object='dsgame-caught_fish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-caught_fish.o `test -f 'src/map/packets/caught_fish.cpp' || echo '$(srcdir)/'`src/map/packets/caught_fish.cpp

dsgame-caught_fish.obj: src/map/packets/caught_fish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-caught_fish.obj -MD -MP -MF $(DEPDIR)/dsgame-caught_fish.Tpo -c -o dsgame-caught_fish.obj `if test -f 'src/map/packets/caught_fish.cpp'; then $(CYGPATH_W) 'src/map/packets/caught_fish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/caught_fish.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-caught_fish.Tpo $(DEPDIR)/dsgame-caught_fish.Po
#	$(AM_V_CXX)source='src/map/packets/caught_fish.cpp' object='dsgame-caught_fish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-caught_fish.obj `if test -f 'src/map/packets/caught_fish.cpp'; then $(CYGPATH_W) 'src/map/packets/caught_fish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/caught_fish.cpp'; fi`

dsgame-char.o: src/map/packets/char.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char.o -MD -MP -MF $(DEPDIR)/dsgame-char.Tpo -c -o dsgame-char.o `test -f 'src/map/packets/char.cpp' || echo '$(srcdir)/'`src/map/packets/char.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char.Tpo $(DEPDIR)/dsgame-char.Po
#	$(AM_V_CXX)source='src/map/packets/char.cpp' object='dsgame-char.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char.o `test -f 'src/map/packets/char.cpp' || echo '$(srcdir)/'`src/map/packets/char.cpp

dsgame-char.obj: src/map/packets/char.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char.obj -MD -MP -MF $(DEPDIR)/dsgame-char.Tpo -c -o dsgame-char.obj `if test -f 'src/map/packets/char.cpp'; then $(CYGPATH_W) 'src/map/packets/char.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char.Tpo $(DEPDIR)/dsgame-char.Po
#	$(AM_V_CXX)source='src/map/packets/char.cpp' object='dsgame-char.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char.obj `if test -f 'src/map/packets/char.cpp'; then $(CYGPATH_W) 'src/map/packets/char.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char.cpp'; fi`

dsgame-char_abilities.o: src/map/packets/char_abilities.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_abilities.o -MD -MP -MF $(DEPDIR)/dsgame-char_abilities.Tpo -c -o dsgame-char_abilities.o `test -f 'src/map/packets/char_abilities.cpp' || echo '$(srcdir)/'`src/map/packets/char_abilities.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_abilities.Tpo $(DEPDIR)/dsgame-char_abilities.Po
#	$(AM_V_CXX)source='src/map/packets/char_abilities.cpp' object='dsgame-char_abilities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_abilities.o `test -f 'src/map/packets/char_abilities.cpp' || echo '$(srcdir)/'`src/map/packets/char_abilities.cpp

dsgame-char_abilities.obj: src/map/packets/char_abilities.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_abilities.obj -MD -MP -MF $(DEPDIR)/dsgame-char_abilities.Tpo -c -o dsgame-char_abilities.obj `if test -f 'src/map/packets/char_abilities.cpp'; then $(CYGPATH_W) 'src/map/packets/char_abilities.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_abilities.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_abilities.Tpo $(DEPDIR)/dsgame-char_abilities.Po
#	$(AM_V_CXX)source='src/map/packets/char_abilities.cpp' object='dsgame-char_abilities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_abilities.obj `if test -f 'src/map/packets/char_abilities.cpp'; then $(CYGPATH_W) 'src/map/packets/char_abilities.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_abilities.cpp'; fi`

dsgame-char_appearance.o: src/map/packets/char_appearance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_appearance.o -MD -MP -MF $(DEPDIR)/dsgame-char_appearance.Tpo -c -o dsgame-char_appearance.o `test -f 'src/map/packets/char_appearance.cpp' || echo '$(srcdir)/'`src/map/packets/char_appearance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_appearance.Tpo $(DEPDIR)/dsgame-char_appearance.Po
#	$(AM_V_CXX)source='src/map/packets/char_appearance.cpp' object='dsgame-char_appearance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_appearance.o `test -f 'src/map/packets/char_appearance.cpp' || echo '$(srcdir)/'`src/map/packets/char_appearance.cpp

dsgame-char_appearance.obj: src/map/packets/char_appearance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_appearance.obj -MD -MP -MF $(DEPDIR)/dsgame-char_appearance.Tpo -c -o dsgame-char_appearance.obj `if test -f 'src/map/packets/char_appearance.cpp'; then $(CYGPATH_W) 'src/map/packets/char_appearance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_appearance.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_appearance.Tpo $(DEPDIR)/dsgame-char_appearance.Po
#	$(AM_V_CXX)source='src/map/packets/char_appearance.cpp' object='dsgame-char_appearance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_appearance.obj `if test -f 'src/map/packets/char_appearance.cpp'; then $(CYGPATH_W) 'src/map/packets/char_appearance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_appearance.cpp'; fi`

dsgame-char_check.o: src/map/packets/char_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_check.o -MD -MP -MF $(DEPDIR)/dsgame-char_check.Tpo -c -o dsgame-char_check.o `test -f 'src/map/packets/char_check.cpp' || echo '$(srcdir)/'`src/map/packets/char_check.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_check.Tpo $(DEPDIR)/dsgame-char_check.Po
#	$(AM_V_CXX)source='src/map/packets/char_check.cpp' object='dsgame-char_check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_check.o `test -f 'src/map/packets/char_check.cpp' || echo '$(srcdir)/'`src/map/packets/char_check.cpp

dsgame-char_check.obj: src/map/packets/char_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_check.obj -MD -MP -MF $(DEPDIR)/dsgame-char_check.Tpo -c -o dsgame-char_check.obj `if test -f 'src/map/packets/char_check.cpp'; then $(CYGPATH_W) 'src/map/packets/char_check.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_check.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_check.Tpo $(DEPDIR)/dsgame-char_check.Po
#	$(AM_V_CXX)source='src/map/packets/char_check.cpp' object='dsgame-char_check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_check.obj `if test -f 'src/map/packets/char_check.cpp'; then $(CYGPATH_W) 'src/map/packets/char_check.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_check.cpp'; fi`

dsgame-char_emotion.o: src/map/packets/char_emotion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_emotion.o -MD -MP -MF $(DEPDIR)/dsgame-char_emotion.Tpo -c -o dsgame-char_emotion.o `test -f 'src/map/packets/char_emotion.cpp' || echo '$(srcdir)/'`src/map/packets/char_emotion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_emotion.Tpo $(DEPDIR)/dsgame-char_emotion.Po
#	$(AM_V_CXX)source='src/map/packets/char_emotion.cpp' object='dsgame-char_emotion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_emotion.o `test -f 'src/map/packets/char_emotion.cpp' || echo '$(srcdir)/'`src/map/packets/char_emotion.cpp

dsgame-char_emotion.obj: src/map/packets/char_emotion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_emotion.obj -MD -MP -MF $(DEPDIR)/dsgame-char_emotion.Tpo -c -o dsgame-char_emotion.obj `if test -f 'src/map/packets/char_emotion.cpp'; then $(CYGPATH_W) 'src/map/packets/char_emotion.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_emotion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_emotion.Tpo $(DEPDIR)/dsgame-char_emotion.Po
#	$(AM_V_CXX)source='src/map/packets/char_emotion.cpp' object='dsgame-char_emotion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_emotion.obj `if test -f 'src/map/packets/char_emotion.cpp'; then $(CYGPATH_W) 'src/map/packets/char_emotion.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_emotion.cpp'; fi`

dsgame-char_equip.o: src/map/packets/char_equip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_equip.o -MD -MP -MF $(DEPDIR)/dsgame-char_equip.Tpo -c -o dsgame-char_equip.o `test -f 'src/map/packets/char_equip.cpp' || echo '$(srcdir)/'`src/map/packets/char_equip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_equip.Tpo $(DEPDIR)/dsgame-char_equip.Po
#	$(AM_V_CXX)source='src/map/packets/char_equip.cpp' object='dsgame-char_equip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_equip.o `test -f 'src/map/packets/char_equip.cpp' || echo '$(srcdir)/'`src/map/packets/char_equip.cpp

dsgame-char_equip.obj: src/map/packets/char_equip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_equip.obj -MD -MP -MF $(DEPDIR)/dsgame-char_equip.Tpo -c -o dsgame-char_equip.obj `if test -f 'src/map/packets/char_equip.cpp'; then $(CYGPATH_W) 'src/map/packets/char_equip.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_equip.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_equip.Tpo $(DEPDIR)/dsgame-char_equip.Po
#	$(AM_V_CXX)source='src/map/packets/char_equip.cpp' object='dsgame-char_equip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_equip.obj `if test -f 'src/map/packets/char_equip.cpp'; then $(CYGPATH_W) 'src/map/packets/char_equip.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_equip.cpp'; fi`

dsgame-char_health.o: src/map/packets/char_health.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_health.o -MD -MP -MF $(DEPDIR)/dsgame-char_health.Tpo -c -o dsgame-char_health.o `test -f 'src/map/packets/char_health.cpp' || echo '$(srcdir)/'`src/map/packets/char_health.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_health.Tpo $(DEPDIR)/dsgame-char_health.Po
#	$(AM_V_CXX)source='src/map/packets/char_health.cpp' object='dsgame-char_health.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_health.o `test -f 'src/map/packets/char_health.cpp' || echo '$(srcdir)/'`src/map/packets/char_health.cpp

dsgame-char_health.obj: src/map/packets/char_health.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_health.obj -MD -MP -MF $(DEPDIR)/dsgame-char_health.Tpo -c -o dsgame-char_health.obj `if test -f 'src/map/packets/char_health.cpp'; then $(CYGPATH_W) 'src/map/packets/char_health.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_health.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_health.Tpo $(DEPDIR)/dsgame-char_health.Po
#	$(AM_V_CXX)source='src/map/packets/char_health.cpp' object='dsgame-char_health.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_health.obj `if test -f 'src/map/packets/char_health.cpp'; then $(CYGPATH_W) 'src/map/packets/char_health.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_health.cpp'; fi`

dsgame-char_job_extra.o: src/map/packets/char_job_extra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_job_extra.o -MD -MP -MF $(DEPDIR)/dsgame-char_job_extra.Tpo -c -o dsgame-char_job_extra.o `test -f 'src/map/packets/char_job_extra.cpp' || echo '$(srcdir)/'`src/map/packets/char_job_extra.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_job_extra.Tpo $(DEPDIR)/dsgame-char_job_extra.Po
#	$(AM_V_CXX)source='src/map/packets/char_job_extra.cpp' object='dsgame-char_job_extra.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_job_extra.o `test -f 'src/map/packets/char_job_extra.cpp' || echo '$(srcdir)/'`src/map/packets/char_job_extra.cpp

dsgame-char_job_extra.obj: src/map/packets/char_job_extra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_job_extra.obj -MD -MP -MF $(DEPDIR)/dsgame-char_job_extra.Tpo -c -o dsgame-char_job_extra.obj `if test -f 'src/map/packets/char_job_extra.cpp'; then $(CYGPATH_W) 'src/map/packets/char_job_extra.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_job_extra.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_job_extra.Tpo $(DEPDIR)/dsgame-char_job_extra.Po
#	$(AM_V_CXX)source='src/map/packets/char_job_extra.cpp' object='dsgame-char_job_extra.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_job_extra.obj `if test -f 'src/map/packets/char_job_extra.cpp'; then $(CYGPATH_W) 'src/map/packets/char_job_extra.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_job_extra.cpp'; fi`

dsgame-char_jobs.o: src/map/packets/char_jobs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_jobs.o -MD -MP -MF $(DEPDIR)/dsgame-char_jobs.Tpo -c -o dsgame-char_jobs.o `test -f 'src/map/packets/char_jobs.cpp' || echo '$(srcdir)/'`src/map/packets/char_jobs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_jobs.Tpo $(DEPDIR)/dsgame-char_jobs.Po
#	$(AM_V_CXX)source='src/map/packets/char_jobs.cpp' object='dsgame-char_jobs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_jobs.o `test -f 'src/map/packets/char_jobs.cpp' || echo '$(srcdir)/'`src/map/packets/char_jobs.cpp

dsgame-char_jobs.obj: src/map/packets/char_jobs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_jobs.obj -MD -MP -MF $(DEPDIR)/dsgame-char_jobs.Tpo -c -o dsgame-char_jobs.obj `if test -f 'src/map/packets/char_jobs.cpp'; then $(CYGPATH_W) 'src/map/packets/char_jobs.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_jobs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_jobs.Tpo $(DEPDIR)/dsgame-char_jobs.Po
#	$(AM_V_CXX)source='src/map/packets/char_jobs.cpp' object='dsgame-char_jobs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_jobs.obj `if test -f 'src/map/packets/char_jobs.cpp'; then $(CYGPATH_W) 'src/map/packets/char_jobs.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_jobs.cpp'; fi`

dsgame-char_recast.o: src/map/packets/char_recast.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_recast.o -MD -MP -MF $(DEPDIR)/dsgame-char_recast.Tpo -c -o dsgame-char_recast.o `test -f 'src/map/packets/char_recast.cpp' || echo '$(srcdir)/'`src/map/packets/char_recast.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_recast.Tpo $(DEPDIR)/dsgame-char_recast.Po
#	$(AM_V_CXX)source='src/map/packets/char_recast.cpp' object='dsgame-char_recast.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_recast.o `test -f 'src/map/packets/char_recast.cpp' || echo '$(srcdir)/'`src/map/packets/char_recast.cpp

dsgame-char_recast.obj: src/map/packets/char_recast.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_recast.obj -MD -MP -MF $(DEPDIR)/dsgame-char_recast.Tpo -c -o dsgame-char_recast.obj `if test -f 'src/map/packets/char_recast.cpp'; then $(CYGPATH_W) 'src/map/packets/char_recast.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_recast.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_recast.Tpo $(DEPDIR)/dsgame-char_recast.Po
#	$(AM_V_CXX)source='src/map/packets/char_recast.cpp' object='dsgame-char_recast.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_recast.obj `if test -f 'src/map/packets/char_recast.cpp'; then $(CYGPATH_W) 'src/map/packets/char_recast.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_recast.cpp'; fi`

dsgame-char_skills.o: src/map/packets/char_skills.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_skills.o -MD -MP -MF $(DEPDIR)/dsgame-char_skills.Tpo -c -o dsgame-char_skills.o `test -f 'src/map/packets/char_skills.cpp' || echo '$(srcdir)/'`src/map/packets/char_skills.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_skills.Tpo $(DEPDIR)/dsgame-char_skills.Po
#	$(AM_V_CXX)source='src/map/packets/char_skills.cpp' object='dsgame-char_skills.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_skills.o `test -f 'src/map/packets/char_skills.cpp' || echo '$(srcdir)/'`src/map/packets/char_skills.cpp

dsgame-char_skills.obj: src/map/packets/char_skills.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_skills.obj -MD -MP -MF $(DEPDIR)/dsgame-char_skills.Tpo -c -o dsgame-char_skills.obj `if test -f 'src/map/packets/char_skills.cpp'; then $(CYGPATH_W) 'src/map/packets/char_skills.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_skills.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_skills.Tpo $(DEPDIR)/dsgame-char_skills.Po
#	$(AM_V_CXX)source='src/map/packets/char_skills.cpp' object='dsgame-char_skills.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_skills.obj `if test -f 'src/map/packets/char_skills.cpp'; then $(CYGPATH_W) 'src/map/packets/char_skills.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_skills.cpp'; fi`

dsgame-char_spells.o: src/map/packets/char_spells.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_spells.o -MD -MP -MF $(DEPDIR)/dsgame-char_spells.Tpo -c -o dsgame-char_spells.o `test -f 'src/map/packets/char_spells.cpp' || echo '$(srcdir)/'`src/map/packets/char_spells.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_spells.Tpo $(DEPDIR)/dsgame-char_spells.Po
#	$(AM_V_CXX)source='src/map/packets/char_spells.cpp' object='dsgame-char_spells.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_spells.o `test -f 'src/map/packets/char_spells.cpp' || echo '$(srcdir)/'`src/map/packets/char_spells.cpp

dsgame-char_spells.obj: src/map/packets/char_spells.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_spells.obj -MD -MP -MF $(DEPDIR)/dsgame-char_spells.Tpo -c -o dsgame-char_spells.obj `if test -f 'src/map/packets/char_spells.cpp'; then $(CYGPATH_W) 'src/map/packets/char_spells.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_spells.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_spells.Tpo $(DEPDIR)/dsgame-char_spells.Po
#	$(AM_V_CXX)source='src/map/packets/char_spells.cpp' object='dsgame-char_spells.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_spells.obj `if test -f 'src/map/packets/char_spells.cpp'; then $(CYGPATH_W) 'src/map/packets/char_spells.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_spells.cpp'; fi`

dsgame-char_stats.o: src/map/packets/char_stats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_stats.o -MD -MP -MF $(DEPDIR)/dsgame-char_stats.Tpo -c -o dsgame-char_stats.o `test -f 'src/map/packets/char_stats.cpp' || echo '$(srcdir)/'`src/map/packets/char_stats.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_stats.Tpo $(DEPDIR)/dsgame-char_stats.Po
#	$(AM_V_CXX)source='src/map/packets/char_stats.cpp' object='dsgame-char_stats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_stats.o `test -f 'src/map/packets/char_stats.cpp' || echo '$(srcdir)/'`src/map/packets/char_stats.cpp

dsgame-char_stats.obj: src/map/packets/char_stats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_stats.obj -MD -MP -MF $(DEPDIR)/dsgame-char_stats.Tpo -c -o dsgame-char_stats.obj `if test -f 'src/map/packets/char_stats.cpp'; then $(CYGPATH_W) 'src/map/packets/char_stats.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_stats.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_stats.Tpo $(DEPDIR)/dsgame-char_stats.Po
#	$(AM_V_CXX)source='src/map/packets/char_stats.cpp' object='dsgame-char_stats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_stats.obj `if test -f 'src/map/packets/char_stats.cpp'; then $(CYGPATH_W) 'src/map/packets/char_stats.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_stats.cpp'; fi`

dsgame-char_sync.o: src/map/packets/char_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_sync.o -MD -MP -MF $(DEPDIR)/dsgame-char_sync.Tpo -c -o dsgame-char_sync.o `test -f 'src/map/packets/char_sync.cpp' || echo '$(srcdir)/'`src/map/packets/char_sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_sync.Tpo $(DEPDIR)/dsgame-char_sync.Po
#	$(AM_V_CXX)source='src/map/packets/char_sync.cpp' object='dsgame-char_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_sync.o `test -f 'src/map/packets/char_sync.cpp' || echo '$(srcdir)/'`src/map/packets/char_sync.cpp

dsgame-char_sync.obj: src/map/packets/char_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_sync.obj -MD -MP -MF $(DEPDIR)/dsgame-char_sync.Tpo -c -o dsgame-char_sync.obj `if test -f 'src/map/packets/char_sync.cpp'; then $(CYGPATH_W) 'src/map/packets/char_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_sync.Tpo $(DEPDIR)/dsgame-char_sync.Po
#	$(AM_V_CXX)source='src/map/packets/char_sync.cpp' object='dsgame-char_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_sync.obj `if test -f 'src/map/packets/char_sync.cpp'; then $(CYGPATH_W) 'src/map/packets/char_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_sync.cpp'; fi`

dsgame-char_update.o: src/map/packets/char_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_update.o -MD -MP -MF $(DEPDIR)/dsgame-char_update.Tpo -c -o dsgame-char_update.o `test -f 'src/map/packets/char_update.cpp' || echo '$(srcdir)/'`src/map/packets/char_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_update.Tpo $(DEPDIR)/dsgame-char_update.Po
#	$(AM_V_CXX)source='src/map/packets/char_update.cpp' object='dsgame-char_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_update.o `test -f 'src/map/packets/char_update.cpp' || echo '$(srcdir)/'`src/map/packets/char_update.cpp

dsgame-char_update.obj: src/map/packets/char_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-char_update.obj -MD -MP -MF $(DEPDIR)/dsgame-char_update.Tpo -c -o dsgame-char_update.obj `if test -f 'src/map/packets/char_update.cpp'; then $(CYGPATH_W) 'src/map/packets/char_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-char_update.Tpo $(DEPDIR)/dsgame-char_update.Po
#	$(AM_V_CXX)source='src/map/packets/char_update.cpp' object='dsgame-char_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-char_update.obj `if test -f 'src/map/packets/char_update.cpp'; then $(CYGPATH_W) 'src/map/packets/char_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/char_update.cpp'; fi`

dsgame-chat_message.o: src/map/packets/chat_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-chat_message.o -MD -MP -MF $(DEPDIR)/dsgame-chat_message.Tpo -c -o dsgame-chat_message.o `test -f 'src/map/packets/chat_message.cpp' || echo '$(srcdir)/'`src/map/packets/chat_message.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-chat_message.Tpo $(DEPDIR)/dsgame-chat_message.Po
#	$(AM_V_CXX)source='src/map/packets/chat_message.cpp' object='dsgame-chat_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-chat_message.o `test -f 'src/map/packets/chat_message.cpp' || echo '$(srcdir)/'`src/map/packets/chat_message.cpp

dsgame-chat_message.obj: src/map/packets/chat_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-chat_message.obj -MD -MP -MF $(DEPDIR)/dsgame-chat_message.Tpo -c -o dsgame-chat_message.obj `if test -f 'src/map/packets/chat_message.cpp'; then $(CYGPATH_W) 'src/map/packets/chat_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/chat_message.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-chat_message.Tpo $(DEPDIR)/dsgame-chat_message.Po
#	$(AM_V_CXX)source='src/map/packets/chat_message.cpp' object='dsgame-chat_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-chat_message.obj `if test -f 'src/map/packets/chat_message.cpp'; then $(CYGPATH_W) 'src/map/packets/chat_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/chat_message.cpp'; fi`

dsgame-chocobo_digging.o: src/map/packets/chocobo_digging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-chocobo_digging.o -MD -MP -MF $(DEPDIR)/dsgame-chocobo_digging.Tpo -c -o dsgame-chocobo_digging.o `test -f 'src/map/packets/chocobo_digging.cpp' || echo '$(srcdir)/'`src/map/packets/chocobo_digging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-chocobo_digging.Tpo $(DEPDIR)/dsgame-chocobo_digging.Po
#	$(AM_V_CXX)source='src/map/packets/chocobo_digging.cpp' object='dsgame-chocobo_digging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-chocobo_digging.o `test -f 'src/map/packets/chocobo_digging.cpp' || echo '$(srcdir)/'`src/map/packets/chocobo_digging.cpp

dsgame-chocobo_digging.obj: src/map/packets/chocobo_digging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-chocobo_digging.obj -MD -MP -MF $(DEPDIR)/dsgame-chocobo_digging.Tpo -c -o dsgame-chocobo_digging.obj `if test -f 'src/map/packets/chocobo_digging.cpp'; then $(CYGPATH_W) 'src/map/packets/chocobo_digging.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/chocobo_digging.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-chocobo_digging.Tpo $(DEPDIR)/dsgame-chocobo_digging.Po
#	$(AM_V_CXX)source='src/map/packets/chocobo_digging.cpp' object='dsgame-chocobo_digging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-chocobo_digging.obj `if test -f 'src/map/packets/chocobo_digging.cpp'; then $(CYGPATH_W) 'src/map/packets/chocobo_digging.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/chocobo_digging.cpp'; fi`

dsgame-change_music.o: src/map/packets/change_music.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-change_music.o -MD -MP -MF $(DEPDIR)/dsgame-change_music.Tpo -c -o dsgame-change_music.o `test -f 'src/map/packets/change_music.cpp' || echo '$(srcdir)/'`src/map/packets/change_music.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-change_music.Tpo $(DEPDIR)/dsgame-change_music.Po
#	$(AM_V_CXX)source='src/map/packets/change_music.cpp' object='dsgame-change_music.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-change_music.o `test -f 'src/map/packets/change_music.cpp' || echo '$(srcdir)/'`src/map/packets/change_music.cpp

dsgame-change_music.obj: src/map/packets/change_music.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-change_music.obj -MD -MP -MF $(DEPDIR)/dsgame-change_music.Tpo -c -o dsgame-change_music.obj `if test -f 'src/map/packets/change_music.cpp'; then $(CYGPATH_W) 'src/map/packets/change_music.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/change_music.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-change_music.Tpo $(DEPDIR)/dsgame-change_music.Po
#	$(AM_V_CXX)source='src/map/packets/change_music.cpp' object='dsgame-change_music.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-change_music.obj `if test -f 'src/map/packets/change_music.cpp'; then $(CYGPATH_W) 'src/map/packets/change_music.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/change_music.cpp'; fi`

dsgame-conquest_map.o: src/map/packets/conquest_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-conquest_map.o -MD -MP -MF $(DEPDIR)/dsgame-conquest_map.Tpo -c -o dsgame-conquest_map.o `test -f 'src/map/packets/conquest_map.cpp' || echo '$(srcdir)/'`src/map/packets/conquest_map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-conquest_map.Tpo $(DEPDIR)/dsgame-conquest_map.Po
#	$(AM_V_CXX)source='src/map/packets/conquest_map.cpp' object='dsgame-conquest_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-conquest_map.o `test -f 'src/map/packets/conquest_map.cpp' || echo '$(srcdir)/'`src/map/packets/conquest_map.cpp

dsgame-conquest_map.obj: src/map/packets/conquest_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-conquest_map.obj -MD -MP -MF $(DEPDIR)/dsgame-conquest_map.Tpo -c -o dsgame-conquest_map.obj `if test -f 'src/map/packets/conquest_map.cpp'; then $(CYGPATH_W) 'src/map/packets/conquest_map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/conquest_map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-conquest_map.Tpo $(DEPDIR)/dsgame-conquest_map.Po
#	$(AM_V_CXX)source='src/map/packets/conquest_map.cpp' object='dsgame-conquest_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-conquest_map.obj `if test -f 'src/map/packets/conquest_map.cpp'; then $(CYGPATH_W) 'src/map/packets/conquest_map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/conquest_map.cpp'; fi`

dsgame-cs_position.o: src/map/packets/cs_position.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-cs_position.o -MD -MP -MF $(DEPDIR)/dsgame-cs_position.Tpo -c -o dsgame-cs_position.o `test -f 'src/map/packets/cs_position.cpp' || echo '$(srcdir)/'`src/map/packets/cs_position.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-cs_position.Tpo $(DEPDIR)/dsgame-cs_position.Po
#	$(AM_V_CXX)source='src/map/packets/cs_position.cpp' object='dsgame-cs_position.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-cs_position.o `test -f 'src/map/packets/cs_position.cpp' || echo '$(srcdir)/'`src/map/packets/cs_position.cpp

dsgame-cs_position.obj: src/map/packets/cs_position.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-cs_position.obj -MD -MP -MF $(DEPDIR)/dsgame-cs_position.Tpo -c -o dsgame-cs_position.obj `if test -f 'src/map/packets/cs_position.cpp'; then $(CYGPATH_W) 'src/map/packets/cs_position.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/cs_position.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-cs_position.Tpo $(DEPDIR)/dsgame-cs_position.Po
#	$(AM_V_CXX)source='src/map/packets/cs_position.cpp' object='dsgame-cs_position.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-cs_position.obj `if test -f 'src/map/packets/cs_position.cpp'; then $(CYGPATH_W) 'src/map/packets/cs_position.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/cs_position.cpp'; fi`

dsgame-currency1.o: src/map/packets/currency1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-currency1.o -MD -MP -MF $(DEPDIR)/dsgame-currency1.Tpo -c -o dsgame-currency1.o `test -f 'src/map/packets/currency1.cpp' || echo '$(srcdir)/'`src/map/packets/currency1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-currency1.Tpo $(DEPDIR)/dsgame-currency1.Po
#	$(AM_V_CXX)source='src/map/packets/currency1.cpp' object='dsgame-currency1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-currency1.o `test -f 'src/map/packets/currency1.cpp' || echo '$(srcdir)/'`src/map/packets/currency1.cpp

dsgame-currency1.obj: src/map/packets/currency1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-currency1.obj -MD -MP -MF $(DEPDIR)/dsgame-currency1.Tpo -c -o dsgame-currency1.obj `if test -f 'src/map/packets/currency1.cpp'; then $(CYGPATH_W) 'src/map/packets/currency1.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/currency1.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-currency1.Tpo $(DEPDIR)/dsgame-currency1.Po
#	$(AM_V_CXX)source='src/map/packets/currency1.cpp' object='dsgame-currency1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-currency1.obj `if test -f 'src/map/packets/currency1.cpp'; then $(CYGPATH_W) 'src/map/packets/currency1.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/currency1.cpp'; fi`

dsgame-currency2.o: src/map/packets/currency2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-currency2.o -MD -MP -MF $(DEPDIR)/dsgame-currency2.Tpo -c -o dsgame-currency2.o `test -f 'src/map/packets/currency2.cpp' || echo '$(srcdir)/'`src/map/packets/currency2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-currency2.Tpo $(DEPDIR)/dsgame-currency2.Po
#	$(AM_V_CXX)source='src/map/packets/currency2.cpp' object='dsgame-currency2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-currency2.o `test -f 'src/map/packets/currency2.cpp' || echo '$(srcdir)/'`src/map/packets/currency2.cpp

dsgame-currency2.obj: src/map/packets/currency2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-currency2.obj -MD -MP -MF $(DEPDIR)/dsgame-currency2.Tpo -c -o dsgame-currency2.obj `if test -f 'src/map/packets/currency2.cpp'; then $(CYGPATH_W) 'src/map/packets/currency2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/currency2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-currency2.Tpo $(DEPDIR)/dsgame-currency2.Po
#	$(AM_V_CXX)source='src/map/packets/currency2.cpp' object='dsgame-currency2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-currency2.obj `if test -f 'src/map/packets/currency2.cpp'; then $(CYGPATH_W) 'src/map/packets/currency2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/currency2.cpp'; fi`

dsgame-delivery_box.o: src/map/packets/delivery_box.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-delivery_box.o -MD -MP -MF $(DEPDIR)/dsgame-delivery_box.Tpo -c -o dsgame-delivery_box.o `test -f 'src/map/packets/delivery_box.cpp' || echo '$(srcdir)/'`src/map/packets/delivery_box.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-delivery_box.Tpo $(DEPDIR)/dsgame-delivery_box.Po
#	$(AM_V_CXX)source='src/map/packets/delivery_box.cpp' object='dsgame-delivery_box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-delivery_box.o `test -f 'src/map/packets/delivery_box.cpp' || echo '$(srcdir)/'`src/map/packets/delivery_box.cpp

dsgame-delivery_box.obj: src/map/packets/delivery_box.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-delivery_box.obj -MD -MP -MF $(DEPDIR)/dsgame-delivery_box.Tpo -c -o dsgame-delivery_box.obj `if test -f 'src/map/packets/delivery_box.cpp'; then $(CYGPATH_W) 'src/map/packets/delivery_box.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/delivery_box.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-delivery_box.Tpo $(DEPDIR)/dsgame-delivery_box.Po
#	$(AM_V_CXX)source='src/map/packets/delivery_box.cpp' object='dsgame-delivery_box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-delivery_box.obj `if test -f 'src/map/packets/delivery_box.cpp'; then $(CYGPATH_W) 'src/map/packets/delivery_box.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/delivery_box.cpp'; fi`

dsgame-downloading_data.o: src/map/packets/downloading_data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-downloading_data.o -MD -MP -MF $(DEPDIR)/dsgame-downloading_data.Tpo -c -o dsgame-downloading_data.o `test -f 'src/map/packets/downloading_data.cpp' || echo '$(srcdir)/'`src/map/packets/downloading_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-downloading_data.Tpo $(DEPDIR)/dsgame-downloading_data.Po
#	$(AM_V_CXX)source='src/map/packets/downloading_data.cpp' object='dsgame-downloading_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-downloading_data.o `test -f 'src/map/packets/downloading_data.cpp' || echo '$(srcdir)/'`src/map/packets/downloading_data.cpp

dsgame-downloading_data.obj: src/map/packets/downloading_data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-downloading_data.obj -MD -MP -MF $(DEPDIR)/dsgame-downloading_data.Tpo -c -o dsgame-downloading_data.obj `if test -f 'src/map/packets/downloading_data.cpp'; then $(CYGPATH_W) 'src/map/packets/downloading_data.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/downloading_data.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-downloading_data.Tpo $(DEPDIR)/dsgame-downloading_data.Po
#	$(AM_V_CXX)source='src/map/packets/downloading_data.cpp' object='dsgame-downloading_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-downloading_data.obj `if test -f 'src/map/packets/downloading_data.cpp'; then $(CYGPATH_W) 'src/map/packets/downloading_data.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/downloading_data.cpp'; fi`

dsgame-entity_update.o: src/map/packets/entity_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-entity_update.o -MD -MP -MF $(DEPDIR)/dsgame-entity_update.Tpo -c -o dsgame-entity_update.o `test -f 'src/map/packets/entity_update.cpp' || echo '$(srcdir)/'`src/map/packets/entity_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-entity_update.Tpo $(DEPDIR)/dsgame-entity_update.Po
#	$(AM_V_CXX)source='src/map/packets/entity_update.cpp' object='dsgame-entity_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-entity_update.o `test -f 'src/map/packets/entity_update.cpp' || echo '$(srcdir)/'`src/map/packets/entity_update.cpp

dsgame-entity_update.obj: src/map/packets/entity_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-entity_update.obj -MD -MP -MF $(DEPDIR)/dsgame-entity_update.Tpo -c -o dsgame-entity_update.obj `if test -f 'src/map/packets/entity_update.cpp'; then $(CYGPATH_W) 'src/map/packets/entity_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/entity_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-entity_update.Tpo $(DEPDIR)/dsgame-entity_update.Po
#	$(AM_V_CXX)source='src/map/packets/entity_update.cpp' object='dsgame-entity_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-entity_update.obj `if test -f 'src/map/packets/entity_update.cpp'; then $(CYGPATH_W) 'src/map/packets/entity_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/entity_update.cpp'; fi`

dsgame-event.o: src/map/packets/event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-event.o -MD -MP -MF $(DEPDIR)/dsgame-event.Tpo -c -o dsgame-event.o `test -f 'src/map/packets/event.cpp' || echo '$(srcdir)/'`src/map/packets/event.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-event.Tpo $(DEPDIR)/dsgame-event.Po
#	$(AM_V_CXX)source='src/map/packets/event.cpp' object='dsgame-event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-event.o `test -f 'src/map/packets/event.cpp' || echo '$(srcdir)/'`src/map/packets/event.cpp

dsgame-event.obj: src/map/packets/event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-event.obj -MD -MP -MF $(DEPDIR)/dsgame-event.Tpo -c -o dsgame-event.obj `if test -f 'src/map/packets/event.cpp'; then $(CYGPATH_W) 'src/map/packets/event.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/event.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-event.Tpo $(DEPDIR)/dsgame-event.Po
#	$(AM_V_CXX)source='src/map/packets/event.cpp' object='dsgame-event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-event.obj `if test -f 'src/map/packets/event.cpp'; then $(CYGPATH_W) 'src/map/packets/event.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/event.cpp'; fi`

dsgame-event_string.o: src/map/packets/event_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-event_string.o -MD -MP -MF $(DEPDIR)/dsgame-event_string.Tpo -c -o dsgame-event_string.o `test -f 'src/map/packets/event_string.cpp' || echo '$(srcdir)/'`src/map/packets/event_string.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-event_string.Tpo $(DEPDIR)/dsgame-event_string.Po
#	$(AM_V_CXX)source='src/map/packets/event_string.cpp' object='dsgame-event_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-event_string.o `test -f 'src/map/packets/event_string.cpp' || echo '$(srcdir)/'`src/map/packets/event_string.cpp

dsgame-event_string.obj: src/map/packets/event_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-event_string.obj -MD -MP -MF $(DEPDIR)/dsgame-event_string.Tpo -c -o dsgame-event_string.obj `if test -f 'src/map/packets/event_string.cpp'; then $(CYGPATH_W) 'src/map/packets/event_string.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/event_string.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-event_string.Tpo $(DEPDIR)/dsgame-event_string.Po
#	$(AM_V_CXX)source='src/map/packets/event_string.cpp' object='dsgame-event_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-event_string.obj `if test -f 'src/map/packets/event_string.cpp'; then $(CYGPATH_W) 'src/map/packets/event_string.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/event_string.cpp'; fi`

dsgame-event_update.o: src/map/packets/event_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-event_update.o -MD -MP -MF $(DEPDIR)/dsgame-event_update.Tpo -c -o dsgame-event_update.o `test -f 'src/map/packets/event_update.cpp' || echo '$(srcdir)/'`src/map/packets/event_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-event_update.Tpo $(DEPDIR)/dsgame-event_update.Po
#	$(AM_V_CXX)source='src/map/packets/event_update.cpp' object='dsgame-event_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-event_update.o `test -f 'src/map/packets/event_update.cpp' || echo '$(srcdir)/'`src/map/packets/event_update.cpp

dsgame-event_update.obj: src/map/packets/event_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-event_update.obj -MD -MP -MF $(DEPDIR)/dsgame-event_update.Tpo -c -o dsgame-event_update.obj `if test -f 'src/map/packets/event_update.cpp'; then $(CYGPATH_W) 'src/map/packets/event_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/event_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-event_update.Tpo $(DEPDIR)/dsgame-event_update.Po
#	$(AM_V_CXX)source='src/map/packets/event_update.cpp' object='dsgame-event_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-event_update.obj `if test -f 'src/map/packets/event_update.cpp'; then $(CYGPATH_W) 'src/map/packets/event_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/event_update.cpp'; fi`

dsgame-entity_animation.o: src/map/packets/entity_animation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-entity_animation.o -MD -MP -MF $(DEPDIR)/dsgame-entity_animation.Tpo -c -o dsgame-entity_animation.o `test -f 'src/map/packets/entity_animation.cpp' || echo '$(srcdir)/'`src/map/packets/entity_animation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-entity_animation.Tpo $(DEPDIR)/dsgame-entity_animation.Po
#	$(AM_V_CXX)source='src/map/packets/entity_animation.cpp' object='dsgame-entity_animation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-entity_animation.o `test -f 'src/map/packets/entity_animation.cpp' || echo '$(srcdir)/'`src/map/packets/entity_animation.cpp

dsgame-entity_animation.obj: src/map/packets/entity_animation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-entity_animation.obj -MD -MP -MF $(DEPDIR)/dsgame-entity_animation.Tpo -c -o dsgame-entity_animation.obj `if test -f 'src/map/packets/entity_animation.cpp'; then $(CYGPATH_W) 'src/map/packets/entity_animation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/entity_animation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-entity_animation.Tpo $(DEPDIR)/dsgame-entity_animation.Po
#	$(AM_V_CXX)source='src/map/packets/entity_animation.cpp' object='dsgame-entity_animation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-entity_animation.obj `if test -f 'src/map/packets/entity_animation.cpp'; then $(CYGPATH_W) 'src/map/packets/entity_animation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/entity_animation.cpp'; fi`

dsgame-fishing.o: src/map/packets/fishing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-fishing.o -MD -MP -MF $(DEPDIR)/dsgame-fishing.Tpo -c -o dsgame-fishing.o `test -f 'src/map/packets/fishing.cpp' || echo '$(srcdir)/'`src/map/packets/fishing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-fishing.Tpo $(DEPDIR)/dsgame-fishing.Po
#	$(AM_V_CXX)source='src/map/packets/fishing.cpp' object='dsgame-fishing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-fishing.o `test -f 'src/map/packets/fishing.cpp' || echo '$(srcdir)/'`src/map/packets/fishing.cpp

dsgame-fishing.obj: src/map/packets/fishing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-fishing.obj -MD -MP -MF $(DEPDIR)/dsgame-fishing.Tpo -c -o dsgame-fishing.obj `if test -f 'src/map/packets/fishing.cpp'; then $(CYGPATH_W) 'src/map/packets/fishing.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/fishing.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-fishing.Tpo $(DEPDIR)/dsgame-fishing.Po
#	$(AM_V_CXX)source='src/map/packets/fishing.cpp' object='dsgame-fishing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-fishing.obj `if test -f 'src/map/packets/fishing.cpp'; then $(CYGPATH_W) 'src/map/packets/fishing.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/fishing.cpp'; fi`

dsgame-guild_menu.o: src/map/packets/guild_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu.o -MD -MP -MF $(DEPDIR)/dsgame-guild_menu.Tpo -c -o dsgame-guild_menu.o `test -f 'src/map/packets/guild_menu.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu.Tpo $(DEPDIR)/dsgame-guild_menu.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu.cpp' object='dsgame-guild_menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu.o `test -f 'src/map/packets/guild_menu.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu.cpp

dsgame-guild_menu.obj: src/map/packets/guild_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu.obj -MD -MP -MF $(DEPDIR)/dsgame-guild_menu.Tpo -c -o dsgame-guild_menu.obj `if test -f 'src/map/packets/guild_menu.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu.Tpo $(DEPDIR)/dsgame-guild_menu.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu.cpp' object='dsgame-guild_menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu.obj `if test -f 'src/map/packets/guild_menu.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu.cpp'; fi`

dsgame-guild_menu_buy.o: src/map/packets/guild_menu_buy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_buy.o -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_buy.Tpo -c -o dsgame-guild_menu_buy.o `test -f 'src/map/packets/guild_menu_buy.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_buy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_buy.Tpo $(DEPDIR)/dsgame-guild_menu_buy.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_buy.cpp' object='dsgame-guild_menu_buy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_buy.o `test -f 'src/map/packets/guild_menu_buy.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_buy.cpp

dsgame-guild_menu_buy.obj: src/map/packets/guild_menu_buy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_buy.obj -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_buy.Tpo -c -o dsgame-guild_menu_buy.obj `if test -f 'src/map/packets/guild_menu_buy.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_buy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_buy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_buy.Tpo $(DEPDIR)/dsgame-guild_menu_buy.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_buy.cpp' object='dsgame-guild_menu_buy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_buy.obj `if test -f 'src/map/packets/guild_menu_buy.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_buy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_buy.cpp'; fi`

dsgame-guild_menu_sell.o: src/map/packets/guild_menu_sell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_sell.o -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_sell.Tpo -c -o dsgame-guild_menu_sell.o `test -f 'src/map/packets/guild_menu_sell.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_sell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_sell.Tpo $(DEPDIR)/dsgame-guild_menu_sell.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_sell.cpp' object='dsgame-guild_menu_sell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_sell.o `test -f 'src/map/packets/guild_menu_sell.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_sell.cpp

dsgame-guild_menu_sell.obj: src/map/packets/guild_menu_sell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_sell.obj -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_sell.Tpo -c -o dsgame-guild_menu_sell.obj `if test -f 'src/map/packets/guild_menu_sell.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_sell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_sell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_sell.Tpo $(DEPDIR)/dsgame-guild_menu_sell.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_sell.cpp' object='dsgame-guild_menu_sell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_sell.obj `if test -f 'src/map/packets/guild_menu_sell.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_sell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_sell.cpp'; fi`

dsgame-guild_menu_buy_update.o: src/map/packets/guild_menu_buy_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_buy_update.o -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_buy_update.Tpo -c -o dsgame-guild_menu_buy_update.o `test -f 'src/map/packets/guild_menu_buy_update.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_buy_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_buy_update.Tpo $(DEPDIR)/dsgame-guild_menu_buy_update.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_buy_update.cpp' object='dsgame-guild_menu_buy_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_buy_update.o `test -f 'src/map/packets/guild_menu_buy_update.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_buy_update.cpp

dsgame-guild_menu_buy_update.obj: src/map/packets/guild_menu_buy_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_buy_update.obj -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_buy_update.Tpo -c -o dsgame-guild_menu_buy_update.obj `if test -f 'src/map/packets/guild_menu_buy_update.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_buy_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_buy_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_buy_update.Tpo $(DEPDIR)/dsgame-guild_menu_buy_update.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_buy_update.cpp' object='dsgame-guild_menu_buy_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_buy_update.obj `if test -f 'src/map/packets/guild_menu_buy_update.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_buy_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_buy_update.cpp'; fi`

dsgame-guild_menu_sell_update.o: src/map/packets/guild_menu_sell_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_sell_update.o -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_sell_update.Tpo -c -o dsgame-guild_menu_sell_update.o `test -f 'src/map/packets/guild_menu_sell_update.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_sell_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_sell_update.Tpo $(DEPDIR)/dsgame-guild_menu_sell_update.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_sell_update.cpp' object='dsgame-guild_menu_sell_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_sell_update.o `test -f 'src/map/packets/guild_menu_sell_update.cpp' || echo '$(srcdir)/'`src/map/packets/guild_menu_sell_update.cpp

dsgame-guild_menu_sell_update.obj: src/map/packets/guild_menu_sell_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guild_menu_sell_update.obj -MD -MP -MF $(DEPDIR)/dsgame-guild_menu_sell_update.Tpo -c -o dsgame-guild_menu_sell_update.obj `if test -f 'src/map/packets/guild_menu_sell_update.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_sell_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_sell_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guild_menu_sell_update.Tpo $(DEPDIR)/dsgame-guild_menu_sell_update.Po
#	$(AM_V_CXX)source='src/map/packets/guild_menu_sell_update.cpp' object='dsgame-guild_menu_sell_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guild_menu_sell_update.obj `if test -f 'src/map/packets/guild_menu_sell_update.cpp'; then $(CYGPATH_W) 'src/map/packets/guild_menu_sell_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/guild_menu_sell_update.cpp'; fi`

dsgame-instance_entry.o: src/map/packets/instance_entry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instance_entry.o -MD -MP -MF $(DEPDIR)/dsgame-instance_entry.Tpo -c -o dsgame-instance_entry.o `test -f 'src/map/packets/instance_entry.cpp' || echo '$(srcdir)/'`src/map/packets/instance_entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instance_entry.Tpo $(DEPDIR)/dsgame-instance_entry.Po
#	$(AM_V_CXX)source='src/map/packets/instance_entry.cpp' object='dsgame-instance_entry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instance_entry.o `test -f 'src/map/packets/instance_entry.cpp' || echo '$(srcdir)/'`src/map/packets/instance_entry.cpp

dsgame-instance_entry.obj: src/map/packets/instance_entry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instance_entry.obj -MD -MP -MF $(DEPDIR)/dsgame-instance_entry.Tpo -c -o dsgame-instance_entry.obj `if test -f 'src/map/packets/instance_entry.cpp'; then $(CYGPATH_W) 'src/map/packets/instance_entry.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/instance_entry.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instance_entry.Tpo $(DEPDIR)/dsgame-instance_entry.Po
#	$(AM_V_CXX)source='src/map/packets/instance_entry.cpp' object='dsgame-instance_entry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instance_entry.obj `if test -f 'src/map/packets/instance_entry.cpp'; then $(CYGPATH_W) 'src/map/packets/instance_entry.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/instance_entry.cpp'; fi`

dsgame-inventory_assign.o: src/map/packets/inventory_assign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_assign.o -MD -MP -MF $(DEPDIR)/dsgame-inventory_assign.Tpo -c -o dsgame-inventory_assign.o `test -f 'src/map/packets/inventory_assign.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_assign.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_assign.Tpo $(DEPDIR)/dsgame-inventory_assign.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_assign.cpp' object='dsgame-inventory_assign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_assign.o `test -f 'src/map/packets/inventory_assign.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_assign.cpp

dsgame-inventory_assign.obj: src/map/packets/inventory_assign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_assign.obj -MD -MP -MF $(DEPDIR)/dsgame-inventory_assign.Tpo -c -o dsgame-inventory_assign.obj `if test -f 'src/map/packets/inventory_assign.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_assign.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_assign.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_assign.Tpo $(DEPDIR)/dsgame-inventory_assign.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_assign.cpp' object='dsgame-inventory_assign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_assign.obj `if test -f 'src/map/packets/inventory_assign.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_assign.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_assign.cpp'; fi`

dsgame-inventory_finish.o: src/map/packets/inventory_finish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_finish.o -MD -MP -MF $(DEPDIR)/dsgame-inventory_finish.Tpo -c -o dsgame-inventory_finish.o `test -f 'src/map/packets/inventory_finish.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_finish.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_finish.Tpo $(DEPDIR)/dsgame-inventory_finish.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_finish.cpp' object='dsgame-inventory_finish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_finish.o `test -f 'src/map/packets/inventory_finish.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_finish.cpp

dsgame-inventory_finish.obj: src/map/packets/inventory_finish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_finish.obj -MD -MP -MF $(DEPDIR)/dsgame-inventory_finish.Tpo -c -o dsgame-inventory_finish.obj `if test -f 'src/map/packets/inventory_finish.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_finish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_finish.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_finish.Tpo $(DEPDIR)/dsgame-inventory_finish.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_finish.cpp' object='dsgame-inventory_finish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_finish.obj `if test -f 'src/map/packets/inventory_finish.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_finish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_finish.cpp'; fi`

dsgame-inventory_item.o: src/map/packets/inventory_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_item.o -MD -MP -MF $(DEPDIR)/dsgame-inventory_item.Tpo -c -o dsgame-inventory_item.o `test -f 'src/map/packets/inventory_item.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_item.Tpo $(DEPDIR)/dsgame-inventory_item.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_item.cpp' object='dsgame-inventory_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_item.o `test -f 'src/map/packets/inventory_item.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_item.cpp

dsgame-inventory_item.obj: src/map/packets/inventory_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_item.obj -MD -MP -MF $(DEPDIR)/dsgame-inventory_item.Tpo -c -o dsgame-inventory_item.obj `if test -f 'src/map/packets/inventory_item.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_item.Tpo $(DEPDIR)/dsgame-inventory_item.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_item.cpp' object='dsgame-inventory_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_item.obj `if test -f 'src/map/packets/inventory_item.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_item.cpp'; fi`

dsgame-inventory_modify.o: src/map/packets/inventory_modify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_modify.o -MD -MP -MF $(DEPDIR)/dsgame-inventory_modify.Tpo -c -o dsgame-inventory_modify.o `test -f 'src/map/packets/inventory_modify.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_modify.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_modify.Tpo $(DEPDIR)/dsgame-inventory_modify.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_modify.cpp' object='dsgame-inventory_modify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_modify.o `test -f 'src/map/packets/inventory_modify.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_modify.cpp

dsgame-inventory_modify.obj: src/map/packets/inventory_modify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_modify.obj -MD -MP -MF $(DEPDIR)/dsgame-inventory_modify.Tpo -c -o dsgame-inventory_modify.obj `if test -f 'src/map/packets/inventory_modify.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_modify.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_modify.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_modify.Tpo $(DEPDIR)/dsgame-inventory_modify.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_modify.cpp' object='dsgame-inventory_modify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_modify.obj `if test -f 'src/map/packets/inventory_modify.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_modify.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_modify.cpp'; fi`

dsgame-inventory_size.o: src/map/packets/inventory_size.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_size.o -MD -MP -MF $(DEPDIR)/dsgame-inventory_size.Tpo -c -o dsgame-inventory_size.o `test -f 'src/map/packets/inventory_size.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_size.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_size.Tpo $(DEPDIR)/dsgame-inventory_size.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_size.cpp' object='dsgame-inventory_size.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_size.o `test -f 'src/map/packets/inventory_size.cpp' || echo '$(srcdir)/'`src/map/packets/inventory_size.cpp

dsgame-inventory_size.obj: src/map/packets/inventory_size.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-inventory_size.obj -MD -MP -MF $(DEPDIR)/dsgame-inventory_size.Tpo -c -o dsgame-inventory_size.obj `if test -f 'src/map/packets/inventory_size.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_size.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_size.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-inventory_size.Tpo $(DEPDIR)/dsgame-inventory_size.Po
#	$(AM_V_CXX)source='src/map/packets/inventory_size.cpp' object='dsgame-inventory_size.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-inventory_size.obj `if test -f 'src/map/packets/inventory_size.cpp'; then $(CYGPATH_W) 'src/map/packets/inventory_size.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/inventory_size.cpp'; fi`

dsgame-key_items.o: src/map/packets/key_items.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-key_items.o -MD -MP -MF $(DEPDIR)/dsgame-key_items.Tpo -c -o dsgame-key_items.o `test -f 'src/map/packets/key_items.cpp' || echo '$(srcdir)/'`src/map/packets/key_items.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-key_items.Tpo $(DEPDIR)/dsgame-key_items.Po
#	$(AM_V_CXX)source='src/map/packets/key_items.cpp' object='dsgame-key_items.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-key_items.o `test -f 'src/map/packets/key_items.cpp' || echo '$(srcdir)/'`src/map/packets/key_items.cpp

dsgame-key_items.obj: src/map/packets/key_items.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-key_items.obj -MD -MP -MF $(DEPDIR)/dsgame-key_items.Tpo -c -o dsgame-key_items.obj `if test -f 'src/map/packets/key_items.cpp'; then $(CYGPATH_W) 'src/map/packets/key_items.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/key_items.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-key_items.Tpo $(DEPDIR)/dsgame-key_items.Po
#	$(AM_V_CXX)source='src/map/packets/key_items.cpp' object='dsgame-key_items.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-key_items.obj `if test -f 'src/map/packets/key_items.cpp'; then $(CYGPATH_W) 'src/map/packets/key_items.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/key_items.cpp'; fi`

dsgame-linkshell_message.o: src/map/packets/linkshell_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-linkshell_message.o -MD -MP -MF $(DEPDIR)/dsgame-linkshell_message.Tpo -c -o dsgame-linkshell_message.o `test -f 'src/map/packets/linkshell_message.cpp' || echo '$(srcdir)/'`src/map/packets/linkshell_message.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-linkshell_message.Tpo $(DEPDIR)/dsgame-linkshell_message.Po
#	$(AM_V_CXX)source='src/map/packets/linkshell_message.cpp' object='dsgame-linkshell_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-linkshell_message.o `test -f 'src/map/packets/linkshell_message.cpp' || echo '$(srcdir)/'`src/map/packets/linkshell_message.cpp

dsgame-linkshell_message.obj: src/map/packets/linkshell_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-linkshell_message.obj -MD -MP -MF $(DEPDIR)/dsgame-linkshell_message.Tpo -c -o dsgame-linkshell_message.obj `if test -f 'src/map/packets/linkshell_message.cpp'; then $(CYGPATH_W) 'src/map/packets/linkshell_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/linkshell_message.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-linkshell_message.Tpo $(DEPDIR)/dsgame-linkshell_message.Po
#	$(AM_V_CXX)source='src/map/packets/linkshell_message.cpp' object='dsgame-linkshell_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-linkshell_message.obj `if test -f 'src/map/packets/linkshell_message.cpp'; then $(CYGPATH_W) 'src/map/packets/linkshell_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/linkshell_message.cpp'; fi`

dsgame-linkshell_equip.o: src/map/packets/linkshell_equip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-linkshell_equip.o -MD -MP -MF $(DEPDIR)/dsgame-linkshell_equip.Tpo -c -o dsgame-linkshell_equip.o `test -f 'src/map/packets/linkshell_equip.cpp' || echo '$(srcdir)/'`src/map/packets/linkshell_equip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-linkshell_equip.Tpo $(DEPDIR)/dsgame-linkshell_equip.Po
#	$(AM_V_CXX)source='src/map/packets/linkshell_equip.cpp' object='dsgame-linkshell_equip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-linkshell_equip.o `test -f 'src/map/packets/linkshell_equip.cpp' || echo '$(srcdir)/'`src/map/packets/linkshell_equip.cpp

dsgame-linkshell_equip.obj: src/map/packets/linkshell_equip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-linkshell_equip.obj -MD -MP -MF $(DEPDIR)/dsgame-linkshell_equip.Tpo -c -o dsgame-linkshell_equip.obj `if test -f 'src/map/packets/linkshell_equip.cpp'; then $(CYGPATH_W) 'src/map/packets/linkshell_equip.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/linkshell_equip.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-linkshell_equip.Tpo $(DEPDIR)/dsgame-linkshell_equip.Po
#	$(AM_V_CXX)source='src/map/packets/linkshell_equip.cpp' object='dsgame-linkshell_equip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-linkshell_equip.obj `if test -f 'src/map/packets/linkshell_equip.cpp'; then $(CYGPATH_W) 'src/map/packets/linkshell_equip.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/linkshell_equip.cpp'; fi`

dsgame-lock_on.o: src/map/packets/lock_on.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lock_on.o -MD -MP -MF $(DEPDIR)/dsgame-lock_on.Tpo -c -o dsgame-lock_on.o `test -f 'src/map/packets/lock_on.cpp' || echo '$(srcdir)/'`src/map/packets/lock_on.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lock_on.Tpo $(DEPDIR)/dsgame-lock_on.Po
#	$(AM_V_CXX)source='src/map/packets/lock_on.cpp' object='dsgame-lock_on.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lock_on.o `test -f 'src/map/packets/lock_on.cpp' || echo '$(srcdir)/'`src/map/packets/lock_on.cpp

dsgame-lock_on.obj: src/map/packets/lock_on.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-lock_on.obj -MD -MP -MF $(DEPDIR)/dsgame-lock_on.Tpo -c -o dsgame-lock_on.obj `if test -f 'src/map/packets/lock_on.cpp'; then $(CYGPATH_W) 'src/map/packets/lock_on.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/lock_on.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-lock_on.Tpo $(DEPDIR)/dsgame-lock_on.Po
#	$(AM_V_CXX)source='src/map/packets/lock_on.cpp' object='dsgame-lock_on.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-lock_on.obj `if test -f 'src/map/packets/lock_on.cpp'; then $(CYGPATH_W) 'src/map/packets/lock_on.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/lock_on.cpp'; fi`

dsgame-macroequipset.o: src/map/packets/macroequipset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-macroequipset.o -MD -MP -MF $(DEPDIR)/dsgame-macroequipset.Tpo -c -o dsgame-macroequipset.o `test -f 'src/map/packets/macroequipset.cpp' || echo '$(srcdir)/'`src/map/packets/macroequipset.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-macroequipset.Tpo $(DEPDIR)/dsgame-macroequipset.Po
#	$(AM_V_CXX)source='src/map/packets/macroequipset.cpp' object='dsgame-macroequipset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-macroequipset.o `test -f 'src/map/packets/macroequipset.cpp' || echo '$(srcdir)/'`src/map/packets/macroequipset.cpp

dsgame-macroequipset.obj: src/map/packets/macroequipset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-macroequipset.obj -MD -MP -MF $(DEPDIR)/dsgame-macroequipset.Tpo -c -o dsgame-macroequipset.obj `if test -f 'src/map/packets/macroequipset.cpp'; then $(CYGPATH_W) 'src/map/packets/macroequipset.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/macroequipset.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-macroequipset.Tpo $(DEPDIR)/dsgame-macroequipset.Po
#	$(AM_V_CXX)source='src/map/packets/macroequipset.cpp' object='dsgame-macroequipset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-macroequipset.obj `if test -f 'src/map/packets/macroequipset.cpp'; then $(CYGPATH_W) 'src/map/packets/macroequipset.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/macroequipset.cpp'; fi`

dsgame-menu_config.o: src/map/packets/menu_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_config.o -MD -MP -MF $(DEPDIR)/dsgame-menu_config.Tpo -c -o dsgame-menu_config.o `test -f 'src/map/packets/menu_config.cpp' || echo '$(srcdir)/'`src/map/packets/menu_config.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_config.Tpo $(DEPDIR)/dsgame-menu_config.Po
#	$(AM_V_CXX)source='src/map/packets/menu_config.cpp' object='dsgame-menu_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_config.o `test -f 'src/map/packets/menu_config.cpp' || echo '$(srcdir)/'`src/map/packets/menu_config.cpp

dsgame-menu_config.obj: src/map/packets/menu_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_config.obj -MD -MP -MF $(DEPDIR)/dsgame-menu_config.Tpo -c -o dsgame-menu_config.obj `if test -f 'src/map/packets/menu_config.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_config.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_config.Tpo $(DEPDIR)/dsgame-menu_config.Po
#	$(AM_V_CXX)source='src/map/packets/menu_config.cpp' object='dsgame-menu_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_config.obj `if test -f 'src/map/packets/menu_config.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_config.cpp'; fi`

dsgame-menu_merit.o: src/map/packets/menu_merit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_merit.o -MD -MP -MF $(DEPDIR)/dsgame-menu_merit.Tpo -c -o dsgame-menu_merit.o `test -f 'src/map/packets/menu_merit.cpp' || echo '$(srcdir)/'`src/map/packets/menu_merit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_merit.Tpo $(DEPDIR)/dsgame-menu_merit.Po
#	$(AM_V_CXX)source='src/map/packets/menu_merit.cpp' object='dsgame-menu_merit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_merit.o `test -f 'src/map/packets/menu_merit.cpp' || echo '$(srcdir)/'`src/map/packets/menu_merit.cpp

dsgame-menu_merit.obj: src/map/packets/menu_merit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_merit.obj -MD -MP -MF $(DEPDIR)/dsgame-menu_merit.Tpo -c -o dsgame-menu_merit.obj `if test -f 'src/map/packets/menu_merit.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_merit.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_merit.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_merit.Tpo $(DEPDIR)/dsgame-menu_merit.Po
#	$(AM_V_CXX)source='src/map/packets/menu_merit.cpp' object='dsgame-menu_merit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_merit.obj `if test -f 'src/map/packets/menu_merit.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_merit.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_merit.cpp'; fi`

dsgame-menu_mog.o: src/map/packets/menu_mog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_mog.o -MD -MP -MF $(DEPDIR)/dsgame-menu_mog.Tpo -c -o dsgame-menu_mog.o `test -f 'src/map/packets/menu_mog.cpp' || echo '$(srcdir)/'`src/map/packets/menu_mog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_mog.Tpo $(DEPDIR)/dsgame-menu_mog.Po
#	$(AM_V_CXX)source='src/map/packets/menu_mog.cpp' object='dsgame-menu_mog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_mog.o `test -f 'src/map/packets/menu_mog.cpp' || echo '$(srcdir)/'`src/map/packets/menu_mog.cpp

dsgame-menu_mog.obj: src/map/packets/menu_mog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_mog.obj -MD -MP -MF $(DEPDIR)/dsgame-menu_mog.Tpo -c -o dsgame-menu_mog.obj `if test -f 'src/map/packets/menu_mog.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_mog.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_mog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_mog.Tpo $(DEPDIR)/dsgame-menu_mog.Po
#	$(AM_V_CXX)source='src/map/packets/menu_mog.cpp' object='dsgame-menu_mog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_mog.obj `if test -f 'src/map/packets/menu_mog.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_mog.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_mog.cpp'; fi`

dsgame-menu_raisetractor.o: src/map/packets/menu_raisetractor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_raisetractor.o -MD -MP -MF $(DEPDIR)/dsgame-menu_raisetractor.Tpo -c -o dsgame-menu_raisetractor.o `test -f 'src/map/packets/menu_raisetractor.cpp' || echo '$(srcdir)/'`src/map/packets/menu_raisetractor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_raisetractor.Tpo $(DEPDIR)/dsgame-menu_raisetractor.Po
#	$(AM_V_CXX)source='src/map/packets/menu_raisetractor.cpp' object='dsgame-menu_raisetractor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_raisetractor.o `test -f 'src/map/packets/menu_raisetractor.cpp' || echo '$(srcdir)/'`src/map/packets/menu_raisetractor.cpp

dsgame-menu_raisetractor.obj: src/map/packets/menu_raisetractor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-menu_raisetractor.obj -MD -MP -MF $(DEPDIR)/dsgame-menu_raisetractor.Tpo -c -o dsgame-menu_raisetractor.obj `if test -f 'src/map/packets/menu_raisetractor.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_raisetractor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_raisetractor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-menu_raisetractor.Tpo $(DEPDIR)/dsgame-menu_raisetractor.Po
#	$(AM_V_CXX)source='src/map/packets/menu_raisetractor.cpp' object='dsgame-menu_raisetractor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-menu_raisetractor.obj `if test -f 'src/map/packets/menu_raisetractor.cpp'; then $(CYGPATH_W) 'src/map/packets/menu_raisetractor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/menu_raisetractor.cpp'; fi`

dsgame-merit_points_categories.o: src/map/packets/merit_points_categories.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-merit_points_categories.o -MD -MP -MF $(DEPDIR)/dsgame-merit_points_categories.Tpo -c -o dsgame-merit_points_categories.o `test -f 'src/map/packets/merit_points_categories.cpp' || echo '$(srcdir)/'`src/map/packets/merit_points_categories.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-merit_points_categories.Tpo $(DEPDIR)/dsgame-merit_points_categories.Po
#	$(AM_V_CXX)source='src/map/packets/merit_points_categories.cpp' object='dsgame-merit_points_categories.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-merit_points_categories.o `test -f 'src/map/packets/merit_points_categories.cpp' || echo '$(srcdir)/'`src/map/packets/merit_points_categories.cpp

dsgame-merit_points_categories.obj: src/map/packets/merit_points_categories.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-merit_points_categories.obj -MD -MP -MF $(DEPDIR)/dsgame-merit_points_categories.Tpo -c -o dsgame-merit_points_categories.obj `if test -f 'src/map/packets/merit_points_categories.cpp'; then $(CYGPATH_W) 'src/map/packets/merit_points_categories.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/merit_points_categories.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-merit_points_categories.Tpo $(DEPDIR)/dsgame-merit_points_categories.Po
#	$(AM_V_CXX)source='src/map/packets/merit_points_categories.cpp' object='dsgame-merit_points_categories.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-merit_points_categories.obj `if test -f 'src/map/packets/merit_points_categories.cpp'; then $(CYGPATH_W) 'src/map/packets/merit_points_categories.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/merit_points_categories.cpp'; fi`

dsgame-message_basic.o: src/map/packets/message_basic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_basic.o -MD -MP -MF $(DEPDIR)/dsgame-message_basic.Tpo -c -o dsgame-message_basic.o `test -f 'src/map/packets/message_basic.cpp' || echo '$(srcdir)/'`src/map/packets/message_basic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_basic.Tpo $(DEPDIR)/dsgame-message_basic.Po
#	$(AM_V_CXX)source='src/map/packets/message_basic.cpp' object='dsgame-message_basic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_basic.o `test -f 'src/map/packets/message_basic.cpp' || echo '$(srcdir)/'`src/map/packets/message_basic.cpp

dsgame-message_basic.obj: src/map/packets/message_basic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_basic.obj -MD -MP -MF $(DEPDIR)/dsgame-message_basic.Tpo -c -o dsgame-message_basic.obj `if test -f 'src/map/packets/message_basic.cpp'; then $(CYGPATH_W) 'src/map/packets/message_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_basic.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_basic.Tpo $(DEPDIR)/dsgame-message_basic.Po
#	$(AM_V_CXX)source='src/map/packets/message_basic.cpp' object='dsgame-message_basic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_basic.obj `if test -f 'src/map/packets/message_basic.cpp'; then $(CYGPATH_W) 'src/map/packets/message_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_basic.cpp'; fi`

dsgame-message_debug.o: src/map/packets/message_debug.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_debug.o -MD -MP -MF $(DEPDIR)/dsgame-message_debug.Tpo -c -o dsgame-message_debug.o `test -f 'src/map/packets/message_debug.cpp' || echo '$(srcdir)/'`src/map/packets/message_debug.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_debug.Tpo $(DEPDIR)/dsgame-message_debug.Po
#	$(AM_V_CXX)source='src/map/packets/message_debug.cpp' object='dsgame-message_debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_debug.o `test -f 'src/map/packets/message_debug.cpp' || echo '$(srcdir)/'`src/map/packets/message_debug.cpp

dsgame-message_debug.obj: src/map/packets/message_debug.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_debug.obj -MD -MP -MF $(DEPDIR)/dsgame-message_debug.Tpo -c -o dsgame-message_debug.obj `if test -f 'src/map/packets/message_debug.cpp'; then $(CYGPATH_W) 'src/map/packets/message_debug.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_debug.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_debug.Tpo $(DEPDIR)/dsgame-message_debug.Po
#	$(AM_V_CXX)source='src/map/packets/message_debug.cpp' object='dsgame-message_debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_debug.obj `if test -f 'src/map/packets/message_debug.cpp'; then $(CYGPATH_W) 'src/map/packets/message_debug.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_debug.cpp'; fi`

dsgame-message_special.o: src/map/packets/message_special.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_special.o -MD -MP -MF $(DEPDIR)/dsgame-message_special.Tpo -c -o dsgame-message_special.o `test -f 'src/map/packets/message_special.cpp' || echo '$(srcdir)/'`src/map/packets/message_special.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_special.Tpo $(DEPDIR)/dsgame-message_special.Po
#	$(AM_V_CXX)source='src/map/packets/message_special.cpp' object='dsgame-message_special.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_special.o `test -f 'src/map/packets/message_special.cpp' || echo '$(srcdir)/'`src/map/packets/message_special.cpp

dsgame-message_special.obj: src/map/packets/message_special.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_special.obj -MD -MP -MF $(DEPDIR)/dsgame-message_special.Tpo -c -o dsgame-message_special.obj `if test -f 'src/map/packets/message_special.cpp'; then $(CYGPATH_W) 'src/map/packets/message_special.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_special.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_special.Tpo $(DEPDIR)/dsgame-message_special.Po
#	$(AM_V_CXX)source='src/map/packets/message_special.cpp' object='dsgame-message_special.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_special.obj `if test -f 'src/map/packets/message_special.cpp'; then $(CYGPATH_W) 'src/map/packets/message_special.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_special.cpp'; fi`

dsgame-message_standard.o: src/map/packets/message_standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_standard.o -MD -MP -MF $(DEPDIR)/dsgame-message_standard.Tpo -c -o dsgame-message_standard.o `test -f 'src/map/packets/message_standard.cpp' || echo '$(srcdir)/'`src/map/packets/message_standard.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_standard.Tpo $(DEPDIR)/dsgame-message_standard.Po
#	$(AM_V_CXX)source='src/map/packets/message_standard.cpp' object='dsgame-message_standard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_standard.o `test -f 'src/map/packets/message_standard.cpp' || echo '$(srcdir)/'`src/map/packets/message_standard.cpp

dsgame-message_standard.obj: src/map/packets/message_standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_standard.obj -MD -MP -MF $(DEPDIR)/dsgame-message_standard.Tpo -c -o dsgame-message_standard.obj `if test -f 'src/map/packets/message_standard.cpp'; then $(CYGPATH_W) 'src/map/packets/message_standard.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_standard.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_standard.Tpo $(DEPDIR)/dsgame-message_standard.Po
#	$(AM_V_CXX)source='src/map/packets/message_standard.cpp' object='dsgame-message_standard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_standard.obj `if test -f 'src/map/packets/message_standard.cpp'; then $(CYGPATH_W) 'src/map/packets/message_standard.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_standard.cpp'; fi`

dsgame-message_system.o: src/map/packets/message_system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_system.o -MD -MP -MF $(DEPDIR)/dsgame-message_system.Tpo -c -o dsgame-message_system.o `test -f 'src/map/packets/message_system.cpp' || echo '$(srcdir)/'`src/map/packets/message_system.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_system.Tpo $(DEPDIR)/dsgame-message_system.Po
#	$(AM_V_CXX)source='src/map/packets/message_system.cpp' object='dsgame-message_system.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_system.o `test -f 'src/map/packets/message_system.cpp' || echo '$(srcdir)/'`src/map/packets/message_system.cpp

dsgame-message_system.obj: src/map/packets/message_system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_system.obj -MD -MP -MF $(DEPDIR)/dsgame-message_system.Tpo -c -o dsgame-message_system.obj `if test -f 'src/map/packets/message_system.cpp'; then $(CYGPATH_W) 'src/map/packets/message_system.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_system.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_system.Tpo $(DEPDIR)/dsgame-message_system.Po
#	$(AM_V_CXX)source='src/map/packets/message_system.cpp' object='dsgame-message_system.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_system.obj `if test -f 'src/map/packets/message_system.cpp'; then $(CYGPATH_W) 'src/map/packets/message_system.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_system.cpp'; fi`

dsgame-message_text.o: src/map/packets/message_text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_text.o -MD -MP -MF $(DEPDIR)/dsgame-message_text.Tpo -c -o dsgame-message_text.o `test -f 'src/map/packets/message_text.cpp' || echo '$(srcdir)/'`src/map/packets/message_text.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_text.Tpo $(DEPDIR)/dsgame-message_text.Po
#	$(AM_V_CXX)source='src/map/packets/message_text.cpp' object='dsgame-message_text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_text.o `test -f 'src/map/packets/message_text.cpp' || echo '$(srcdir)/'`src/map/packets/message_text.cpp

dsgame-message_text.obj: src/map/packets/message_text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-message_text.obj -MD -MP -MF $(DEPDIR)/dsgame-message_text.Tpo -c -o dsgame-message_text.obj `if test -f 'src/map/packets/message_text.cpp'; then $(CYGPATH_W) 'src/map/packets/message_text.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_text.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-message_text.Tpo $(DEPDIR)/dsgame-message_text.Po
#	$(AM_V_CXX)source='src/map/packets/message_text.cpp' object='dsgame-message_text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-message_text.obj `if test -f 'src/map/packets/message_text.cpp'; then $(CYGPATH_W) 'src/map/packets/message_text.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/message_text.cpp'; fi`

dsgame-party_effects.o: src/map/packets/party_effects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_effects.o -MD -MP -MF $(DEPDIR)/dsgame-party_effects.Tpo -c -o dsgame-party_effects.o `test -f 'src/map/packets/party_effects.cpp' || echo '$(srcdir)/'`src/map/packets/party_effects.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_effects.Tpo $(DEPDIR)/dsgame-party_effects.Po
#	$(AM_V_CXX)source='src/map/packets/party_effects.cpp' object='dsgame-party_effects.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_effects.o `test -f 'src/map/packets/party_effects.cpp' || echo '$(srcdir)/'`src/map/packets/party_effects.cpp

dsgame-party_effects.obj: src/map/packets/party_effects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_effects.obj -MD -MP -MF $(DEPDIR)/dsgame-party_effects.Tpo -c -o dsgame-party_effects.obj `if test -f 'src/map/packets/party_effects.cpp'; then $(CYGPATH_W) 'src/map/packets/party_effects.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_effects.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_effects.Tpo $(DEPDIR)/dsgame-party_effects.Po
#	$(AM_V_CXX)source='src/map/packets/party_effects.cpp' object='dsgame-party_effects.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_effects.obj `if test -f 'src/map/packets/party_effects.cpp'; then $(CYGPATH_W) 'src/map/packets/party_effects.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_effects.cpp'; fi`

dsgame-status_effects.o: src/map/packets/status_effects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-status_effects.o -MD -MP -MF $(DEPDIR)/dsgame-status_effects.Tpo -c -o dsgame-status_effects.o `test -f 'src/map/packets/status_effects.cpp' || echo '$(srcdir)/'`src/map/packets/status_effects.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-status_effects.Tpo $(DEPDIR)/dsgame-status_effects.Po
#	$(AM_V_CXX)source='src/map/packets/status_effects.cpp' object='dsgame-status_effects.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-status_effects.o `test -f 'src/map/packets/status_effects.cpp' || echo '$(srcdir)/'`src/map/packets/status_effects.cpp

dsgame-status_effects.obj: src/map/packets/status_effects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-status_effects.obj -MD -MP -MF $(DEPDIR)/dsgame-status_effects.Tpo -c -o dsgame-status_effects.obj `if test -f 'src/map/packets/status_effects.cpp'; then $(CYGPATH_W) 'src/map/packets/status_effects.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/status_effects.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-status_effects.Tpo $(DEPDIR)/dsgame-status_effects.Po
#	$(AM_V_CXX)source='src/map/packets/status_effects.cpp' object='dsgame-status_effects.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-status_effects.obj `if test -f 'src/map/packets/status_effects.cpp'; then $(CYGPATH_W) 'src/map/packets/status_effects.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/status_effects.cpp'; fi`

dsgame-synth_result.o: src/map/packets/synth_result.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_result.o -MD -MP -MF $(DEPDIR)/dsgame-synth_result.Tpo -c -o dsgame-synth_result.o `test -f 'src/map/packets/synth_result.cpp' || echo '$(srcdir)/'`src/map/packets/synth_result.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_result.Tpo $(DEPDIR)/dsgame-synth_result.Po
#	$(AM_V_CXX)source='src/map/packets/synth_result.cpp' object='dsgame-synth_result.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_result.o `test -f 'src/map/packets/synth_result.cpp' || echo '$(srcdir)/'`src/map/packets/synth_result.cpp

dsgame-synth_result.obj: src/map/packets/synth_result.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_result.obj -MD -MP -MF $(DEPDIR)/dsgame-synth_result.Tpo -c -o dsgame-synth_result.obj `if test -f 'src/map/packets/synth_result.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_result.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_result.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_result.Tpo $(DEPDIR)/dsgame-synth_result.Po
#	$(AM_V_CXX)source='src/map/packets/synth_result.cpp' object='dsgame-synth_result.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_result.obj `if test -f 'src/map/packets/synth_result.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_result.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_result.cpp'; fi`

dsgame-synth_suggestion.o: src/map/packets/synth_suggestion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_suggestion.o -MD -MP -MF $(DEPDIR)/dsgame-synth_suggestion.Tpo -c -o dsgame-synth_suggestion.o `test -f 'src/map/packets/synth_suggestion.cpp' || echo '$(srcdir)/'`src/map/packets/synth_suggestion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_suggestion.Tpo $(DEPDIR)/dsgame-synth_suggestion.Po
#	$(AM_V_CXX)source='src/map/packets/synth_suggestion.cpp' object='dsgame-synth_suggestion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_suggestion.o `test -f 'src/map/packets/synth_suggestion.cpp' || echo '$(srcdir)/'`src/map/packets/synth_suggestion.cpp

dsgame-synth_suggestion.obj: src/map/packets/synth_suggestion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_suggestion.obj -MD -MP -MF $(DEPDIR)/dsgame-synth_suggestion.Tpo -c -o dsgame-synth_suggestion.obj `if test -f 'src/map/packets/synth_suggestion.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_suggestion.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_suggestion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_suggestion.Tpo $(DEPDIR)/dsgame-synth_suggestion.Po
#	$(AM_V_CXX)source='src/map/packets/synth_suggestion.cpp' object='dsgame-synth_suggestion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_suggestion.obj `if test -f 'src/map/packets/synth_suggestion.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_suggestion.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_suggestion.cpp'; fi`

dsgame-trade_action.o: src/map/packets/trade_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_action.o -MD -MP -MF $(DEPDIR)/dsgame-trade_action.Tpo -c -o dsgame-trade_action.o `test -f 'src/map/packets/trade_action.cpp' || echo '$(srcdir)/'`src/map/packets/trade_action.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_action.Tpo $(DEPDIR)/dsgame-trade_action.Po
#	$(AM_V_CXX)source='src/map/packets/trade_action.cpp' object='dsgame-trade_action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_action.o `test -f 'src/map/packets/trade_action.cpp' || echo '$(srcdir)/'`src/map/packets/trade_action.cpp

dsgame-trade_action.obj: src/map/packets/trade_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_action.obj -MD -MP -MF $(DEPDIR)/dsgame-trade_action.Tpo -c -o dsgame-trade_action.obj `if test -f 'src/map/packets/trade_action.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_action.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_action.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_action.Tpo $(DEPDIR)/dsgame-trade_action.Po
#	$(AM_V_CXX)source='src/map/packets/trade_action.cpp' object='dsgame-trade_action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_action.obj `if test -f 'src/map/packets/trade_action.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_action.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_action.cpp'; fi`

dsgame-trade_item.o: src/map/packets/trade_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_item.o -MD -MP -MF $(DEPDIR)/dsgame-trade_item.Tpo -c -o dsgame-trade_item.o `test -f 'src/map/packets/trade_item.cpp' || echo '$(srcdir)/'`src/map/packets/trade_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_item.Tpo $(DEPDIR)/dsgame-trade_item.Po
#	$(AM_V_CXX)source='src/map/packets/trade_item.cpp' object='dsgame-trade_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_item.o `test -f 'src/map/packets/trade_item.cpp' || echo '$(srcdir)/'`src/map/packets/trade_item.cpp

dsgame-trade_item.obj: src/map/packets/trade_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_item.obj -MD -MP -MF $(DEPDIR)/dsgame-trade_item.Tpo -c -o dsgame-trade_item.obj `if test -f 'src/map/packets/trade_item.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_item.Tpo $(DEPDIR)/dsgame-trade_item.Po
#	$(AM_V_CXX)source='src/map/packets/trade_item.cpp' object='dsgame-trade_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_item.obj `if test -f 'src/map/packets/trade_item.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_item.cpp'; fi`

dsgame-trade_request.o: src/map/packets/trade_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_request.o -MD -MP -MF $(DEPDIR)/dsgame-trade_request.Tpo -c -o dsgame-trade_request.o `test -f 'src/map/packets/trade_request.cpp' || echo '$(srcdir)/'`src/map/packets/trade_request.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_request.Tpo $(DEPDIR)/dsgame-trade_request.Po
#	$(AM_V_CXX)source='src/map/packets/trade_request.cpp' object='dsgame-trade_request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_request.o `test -f 'src/map/packets/trade_request.cpp' || echo '$(srcdir)/'`src/map/packets/trade_request.cpp

dsgame-trade_request.obj: src/map/packets/trade_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_request.obj -MD -MP -MF $(DEPDIR)/dsgame-trade_request.Tpo -c -o dsgame-trade_request.obj `if test -f 'src/map/packets/trade_request.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_request.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_request.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_request.Tpo $(DEPDIR)/dsgame-trade_request.Po
#	$(AM_V_CXX)source='src/map/packets/trade_request.cpp' object='dsgame-trade_request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_request.obj `if test -f 'src/map/packets/trade_request.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_request.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_request.cpp'; fi`

dsgame-trade_update.o: src/map/packets/trade_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_update.o -MD -MP -MF $(DEPDIR)/dsgame-trade_update.Tpo -c -o dsgame-trade_update.o `test -f 'src/map/packets/trade_update.cpp' || echo '$(srcdir)/'`src/map/packets/trade_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_update.Tpo $(DEPDIR)/dsgame-trade_update.Po
#	$(AM_V_CXX)source='src/map/packets/trade_update.cpp' object='dsgame-trade_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_update.o `test -f 'src/map/packets/trade_update.cpp' || echo '$(srcdir)/'`src/map/packets/trade_update.cpp

dsgame-trade_update.obj: src/map/packets/trade_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_update.obj -MD -MP -MF $(DEPDIR)/dsgame-trade_update.Tpo -c -o dsgame-trade_update.obj `if test -f 'src/map/packets/trade_update.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_update.Tpo $(DEPDIR)/dsgame-trade_update.Po
#	$(AM_V_CXX)source='src/map/packets/trade_update.cpp' object='dsgame-trade_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_update.obj `if test -f 'src/map/packets/trade_update.cpp'; then $(CYGPATH_W) 'src/map/packets/trade_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/trade_update.cpp'; fi`

dsgame-world_pass.o: src/map/packets/world_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-world_pass.o -MD -MP -MF $(DEPDIR)/dsgame-world_pass.Tpo -c -o dsgame-world_pass.o `test -f 'src/map/packets/world_pass.cpp' || echo '$(srcdir)/'`src/map/packets/world_pass.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-world_pass.Tpo $(DEPDIR)/dsgame-world_pass.Po
#	$(AM_V_CXX)source='src/map/packets/world_pass.cpp' object='dsgame-world_pass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-world_pass.o `test -f 'src/map/packets/world_pass.cpp' || echo '$(srcdir)/'`src/map/packets/world_pass.cpp

dsgame-world_pass.obj: src/map/packets/world_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-world_pass.obj -MD -MP -MF $(DEPDIR)/dsgame-world_pass.Tpo -c -o dsgame-world_pass.obj `if test -f 'src/map/packets/world_pass.cpp'; then $(CYGPATH_W) 'src/map/packets/world_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/world_pass.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-world_pass.Tpo $(DEPDIR)/dsgame-world_pass.Po
#	$(AM_V_CXX)source='src/map/packets/world_pass.cpp' object='dsgame-world_pass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-world_pass.obj `if test -f 'src/map/packets/world_pass.cpp'; then $(CYGPATH_W) 'src/map/packets/world_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/world_pass.cpp'; fi`

dsgame-party_define.o: src/map/packets/party_define.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_define.o -MD -MP -MF $(DEPDIR)/dsgame-party_define.Tpo -c -o dsgame-party_define.o `test -f 'src/map/packets/party_define.cpp' || echo '$(srcdir)/'`src/map/packets/party_define.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_define.Tpo $(DEPDIR)/dsgame-party_define.Po
#	$(AM_V_CXX)source='src/map/packets/party_define.cpp' object='dsgame-party_define.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_define.o `test -f 'src/map/packets/party_define.cpp' || echo '$(srcdir)/'`src/map/packets/party_define.cpp

dsgame-party_define.obj: src/map/packets/party_define.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_define.obj -MD -MP -MF $(DEPDIR)/dsgame-party_define.Tpo -c -o dsgame-party_define.obj `if test -f 'src/map/packets/party_define.cpp'; then $(CYGPATH_W) 'src/map/packets/party_define.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_define.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_define.Tpo $(DEPDIR)/dsgame-party_define.Po
#	$(AM_V_CXX)source='src/map/packets/party_define.cpp' object='dsgame-party_define.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_define.obj `if test -f 'src/map/packets/party_define.cpp'; then $(CYGPATH_W) 'src/map/packets/party_define.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_define.cpp'; fi`

dsgame-party_invite.o: src/map/packets/party_invite.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_invite.o -MD -MP -MF $(DEPDIR)/dsgame-party_invite.Tpo -c -o dsgame-party_invite.o `test -f 'src/map/packets/party_invite.cpp' || echo '$(srcdir)/'`src/map/packets/party_invite.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_invite.Tpo $(DEPDIR)/dsgame-party_invite.Po
#	$(AM_V_CXX)source='src/map/packets/party_invite.cpp' object='dsgame-party_invite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_invite.o `test -f 'src/map/packets/party_invite.cpp' || echo '$(srcdir)/'`src/map/packets/party_invite.cpp

dsgame-party_invite.obj: src/map/packets/party_invite.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_invite.obj -MD -MP -MF $(DEPDIR)/dsgame-party_invite.Tpo -c -o dsgame-party_invite.obj `if test -f 'src/map/packets/party_invite.cpp'; then $(CYGPATH_W) 'src/map/packets/party_invite.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_invite.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_invite.Tpo $(DEPDIR)/dsgame-party_invite.Po
#	$(AM_V_CXX)source='src/map/packets/party_invite.cpp' object='dsgame-party_invite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_invite.obj `if test -f 'src/map/packets/party_invite.cpp'; then $(CYGPATH_W) 'src/map/packets/party_invite.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_invite.cpp'; fi`

dsgame-party_map.o: src/map/packets/party_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_map.o -MD -MP -MF $(DEPDIR)/dsgame-party_map.Tpo -c -o dsgame-party_map.o `test -f 'src/map/packets/party_map.cpp' || echo '$(srcdir)/'`src/map/packets/party_map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_map.Tpo $(DEPDIR)/dsgame-party_map.Po
#	$(AM_V_CXX)source='src/map/packets/party_map.cpp' object='dsgame-party_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_map.o `test -f 'src/map/packets/party_map.cpp' || echo '$(srcdir)/'`src/map/packets/party_map.cpp

dsgame-party_map.obj: src/map/packets/party_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_map.obj -MD -MP -MF $(DEPDIR)/dsgame-party_map.Tpo -c -o dsgame-party_map.obj `if test -f 'src/map/packets/party_map.cpp'; then $(CYGPATH_W) 'src/map/packets/party_map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_map.Tpo $(DEPDIR)/dsgame-party_map.Po
#	$(AM_V_CXX)source='src/map/packets/party_map.cpp' object='dsgame-party_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_map.obj `if test -f 'src/map/packets/party_map.cpp'; then $(CYGPATH_W) 'src/map/packets/party_map.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_map.cpp'; fi`

dsgame-party_member_update.o: src/map/packets/party_member_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_member_update.o -MD -MP -MF $(DEPDIR)/dsgame-party_member_update.Tpo -c -o dsgame-party_member_update.o `test -f 'src/map/packets/party_member_update.cpp' || echo '$(srcdir)/'`src/map/packets/party_member_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_member_update.Tpo $(DEPDIR)/dsgame-party_member_update.Po
#	$(AM_V_CXX)source='src/map/packets/party_member_update.cpp' object='dsgame-party_member_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_member_update.o `test -f 'src/map/packets/party_member_update.cpp' || echo '$(srcdir)/'`src/map/packets/party_member_update.cpp

dsgame-party_member_update.obj: src/map/packets/party_member_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_member_update.obj -MD -MP -MF $(DEPDIR)/dsgame-party_member_update.Tpo -c -o dsgame-party_member_update.obj `if test -f 'src/map/packets/party_member_update.cpp'; then $(CYGPATH_W) 'src/map/packets/party_member_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_member_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_member_update.Tpo $(DEPDIR)/dsgame-party_member_update.Po
#	$(AM_V_CXX)source='src/map/packets/party_member_update.cpp' object='dsgame-party_member_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_member_update.obj `if test -f 'src/map/packets/party_member_update.cpp'; then $(CYGPATH_W) 'src/map/packets/party_member_update.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_member_update.cpp'; fi`

dsgame-party_search.o: src/map/packets/party_search.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_search.o -MD -MP -MF $(DEPDIR)/dsgame-party_search.Tpo -c -o dsgame-party_search.o `test -f 'src/map/packets/party_search.cpp' || echo '$(srcdir)/'`src/map/packets/party_search.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_search.Tpo $(DEPDIR)/dsgame-party_search.Po
#	$(AM_V_CXX)source='src/map/packets/party_search.cpp' object='dsgame-party_search.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_search.o `test -f 'src/map/packets/party_search.cpp' || echo '$(srcdir)/'`src/map/packets/party_search.cpp

dsgame-party_search.obj: src/map/packets/party_search.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party_search.obj -MD -MP -MF $(DEPDIR)/dsgame-party_search.Tpo -c -o dsgame-party_search.obj `if test -f 'src/map/packets/party_search.cpp'; then $(CYGPATH_W) 'src/map/packets/party_search.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_search.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party_search.Tpo $(DEPDIR)/dsgame-party_search.Po
#	$(AM_V_CXX)source='src/map/packets/party_search.cpp' object='dsgame-party_search.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party_search.obj `if test -f 'src/map/packets/party_search.cpp'; then $(CYGPATH_W) 'src/map/packets/party_search.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/party_search.cpp'; fi`

dsgame-pet_sync.o: src/map/packets/pet_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-pet_sync.o -MD -MP -MF $(DEPDIR)/dsgame-pet_sync.Tpo -c -o dsgame-pet_sync.o `test -f 'src/map/packets/pet_sync.cpp' || echo '$(srcdir)/'`src/map/packets/pet_sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-pet_sync.Tpo $(DEPDIR)/dsgame-pet_sync.Po
#	$(AM_V_CXX)source='src/map/packets/pet_sync.cpp' object='dsgame-pet_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-pet_sync.o `test -f 'src/map/packets/pet_sync.cpp' || echo '$(srcdir)/'`src/map/packets/pet_sync.cpp

dsgame-pet_sync.obj: src/map/packets/pet_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-pet_sync.obj -MD -MP -MF $(DEPDIR)/dsgame-pet_sync.Tpo -c -o dsgame-pet_sync.obj `if test -f 'src/map/packets/pet_sync.cpp'; then $(CYGPATH_W) 'src/map/packets/pet_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/pet_sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-pet_sync.Tpo $(DEPDIR)/dsgame-pet_sync.Po
#	$(AM_V_CXX)source='src/map/packets/pet_sync.cpp' object='dsgame-pet_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-pet_sync.obj `if test -f 'src/map/packets/pet_sync.cpp'; then $(CYGPATH_W) 'src/map/packets/pet_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/pet_sync.cpp'; fi`

dsgame-position.o: src/map/packets/position.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-position.o -MD -MP -MF $(DEPDIR)/dsgame-position.Tpo -c -o dsgame-position.o `test -f 'src/map/packets/position.cpp' || echo '$(srcdir)/'`src/map/packets/position.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-position.Tpo $(DEPDIR)/dsgame-position.Po
#	$(AM_V_CXX)source='src/map/packets/position.cpp' object='dsgame-position.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-position.o `test -f 'src/map/packets/position.cpp' || echo '$(srcdir)/'`src/map/packets/position.cpp

dsgame-position.obj: src/map/packets/position.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-position.obj -MD -MP -MF $(DEPDIR)/dsgame-position.Tpo -c -o dsgame-position.obj `if test -f 'src/map/packets/position.cpp'; then $(CYGPATH_W) 'src/map/packets/position.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/position.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-position.Tpo $(DEPDIR)/dsgame-position.Po
#	$(AM_V_CXX)source='src/map/packets/position.cpp' object='dsgame-position.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-position.obj `if test -f 'src/map/packets/position.cpp'; then $(CYGPATH_W) 'src/map/packets/position.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/position.cpp'; fi`

dsgame-quest_mission_log.o: src/map/packets/quest_mission_log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-quest_mission_log.o -MD -MP -MF $(DEPDIR)/dsgame-quest_mission_log.Tpo -c -o dsgame-quest_mission_log.o `test -f 'src/map/packets/quest_mission_log.cpp' || echo '$(srcdir)/'`src/map/packets/quest_mission_log.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-quest_mission_log.Tpo $(DEPDIR)/dsgame-quest_mission_log.Po
#	$(AM_V_CXX)source='src/map/packets/quest_mission_log.cpp' object='dsgame-quest_mission_log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-quest_mission_log.o `test -f 'src/map/packets/quest_mission_log.cpp' || echo '$(srcdir)/'`src/map/packets/quest_mission_log.cpp

dsgame-quest_mission_log.obj: src/map/packets/quest_mission_log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-quest_mission_log.obj -MD -MP -MF $(DEPDIR)/dsgame-quest_mission_log.Tpo -c -o dsgame-quest_mission_log.obj `if test -f 'src/map/packets/quest_mission_log.cpp'; then $(CYGPATH_W) 'src/map/packets/quest_mission_log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/quest_mission_log.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-quest_mission_log.Tpo $(DEPDIR)/dsgame-quest_mission_log.Po
#	$(AM_V_CXX)source='src/map/packets/quest_mission_log.cpp' object='dsgame-quest_mission_log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-quest_mission_log.obj `if test -f 'src/map/packets/quest_mission_log.cpp'; then $(CYGPATH_W) 'src/map/packets/quest_mission_log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/quest_mission_log.cpp'; fi`

dsgame-release.o: src/map/packets/release.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-release.o -MD -MP -MF $(DEPDIR)/dsgame-release.Tpo -c -o dsgame-release.o `test -f 'src/map/packets/release.cpp' || echo '$(srcdir)/'`src/map/packets/release.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-release.Tpo $(DEPDIR)/dsgame-release.Po
#	$(AM_V_CXX)source='src/map/packets/release.cpp' object='dsgame-release.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-release.o `test -f 'src/map/packets/release.cpp' || echo '$(srcdir)/'`src/map/packets/release.cpp

dsgame-release.obj: src/map/packets/release.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-release.obj -MD -MP -MF $(DEPDIR)/dsgame-release.Tpo -c -o dsgame-release.obj `if test -f 'src/map/packets/release.cpp'; then $(CYGPATH_W) 'src/map/packets/release.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/release.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-release.Tpo $(DEPDIR)/dsgame-release.Po
#	$(AM_V_CXX)source='src/map/packets/release.cpp' object='dsgame-release.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-release.obj `if test -f 'src/map/packets/release.cpp'; then $(CYGPATH_W) 'src/map/packets/release.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/release.cpp'; fi`

dsgame-server_ip.o: src/map/packets/server_ip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-server_ip.o -MD -MP -MF $(DEPDIR)/dsgame-server_ip.Tpo -c -o dsgame-server_ip.o `test -f 'src/map/packets/server_ip.cpp' || echo '$(srcdir)/'`src/map/packets/server_ip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-server_ip.Tpo $(DEPDIR)/dsgame-server_ip.Po
#	$(AM_V_CXX)source='src/map/packets/server_ip.cpp' object='dsgame-server_ip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-server_ip.o `test -f 'src/map/packets/server_ip.cpp' || echo '$(srcdir)/'`src/map/packets/server_ip.cpp

dsgame-server_ip.obj: src/map/packets/server_ip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-server_ip.obj -MD -MP -MF $(DEPDIR)/dsgame-server_ip.Tpo -c -o dsgame-server_ip.obj `if test -f 'src/map/packets/server_ip.cpp'; then $(CYGPATH_W) 'src/map/packets/server_ip.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/server_ip.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-server_ip.Tpo $(DEPDIR)/dsgame-server_ip.Po
#	$(AM_V_CXX)source='src/map/packets/server_ip.cpp' object='dsgame-server_ip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-server_ip.obj `if test -f 'src/map/packets/server_ip.cpp'; then $(CYGPATH_W) 'src/map/packets/server_ip.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/server_ip.cpp'; fi`

dsgame-server_message.o: src/map/packets/server_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-server_message.o -MD -MP -MF $(DEPDIR)/dsgame-server_message.Tpo -c -o dsgame-server_message.o `test -f 'src/map/packets/server_message.cpp' || echo '$(srcdir)/'`src/map/packets/server_message.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-server_message.Tpo $(DEPDIR)/dsgame-server_message.Po
#	$(AM_V_CXX)source='src/map/packets/server_message.cpp' object='dsgame-server_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-server_message.o `test -f 'src/map/packets/server_message.cpp' || echo '$(srcdir)/'`src/map/packets/server_message.cpp

dsgame-server_message.obj: src/map/packets/server_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-server_message.obj -MD -MP -MF $(DEPDIR)/dsgame-server_message.Tpo -c -o dsgame-server_message.obj `if test -f 'src/map/packets/server_message.cpp'; then $(CYGPATH_W) 'src/map/packets/server_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/server_message.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-server_message.Tpo $(DEPDIR)/dsgame-server_message.Po
#	$(AM_V_CXX)source='src/map/packets/server_message.cpp' object='dsgame-server_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-server_message.obj `if test -f 'src/map/packets/server_message.cpp'; then $(CYGPATH_W) 'src/map/packets/server_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/server_message.cpp'; fi`

dsgame-shop_appraise.o: src/map/packets/shop_appraise.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_appraise.o -MD -MP -MF $(DEPDIR)/dsgame-shop_appraise.Tpo -c -o dsgame-shop_appraise.o `test -f 'src/map/packets/shop_appraise.cpp' || echo '$(srcdir)/'`src/map/packets/shop_appraise.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_appraise.Tpo $(DEPDIR)/dsgame-shop_appraise.Po
#	$(AM_V_CXX)source='src/map/packets/shop_appraise.cpp' object='dsgame-shop_appraise.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_appraise.o `test -f 'src/map/packets/shop_appraise.cpp' || echo '$(srcdir)/'`src/map/packets/shop_appraise.cpp

dsgame-shop_appraise.obj: src/map/packets/shop_appraise.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_appraise.obj -MD -MP -MF $(DEPDIR)/dsgame-shop_appraise.Tpo -c -o dsgame-shop_appraise.obj `if test -f 'src/map/packets/shop_appraise.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_appraise.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_appraise.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_appraise.Tpo $(DEPDIR)/dsgame-shop_appraise.Po
#	$(AM_V_CXX)source='src/map/packets/shop_appraise.cpp' object='dsgame-shop_appraise.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_appraise.obj `if test -f 'src/map/packets/shop_appraise.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_appraise.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_appraise.cpp'; fi`

dsgame-shop_buy.o: src/map/packets/shop_buy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_buy.o -MD -MP -MF $(DEPDIR)/dsgame-shop_buy.Tpo -c -o dsgame-shop_buy.o `test -f 'src/map/packets/shop_buy.cpp' || echo '$(srcdir)/'`src/map/packets/shop_buy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_buy.Tpo $(DEPDIR)/dsgame-shop_buy.Po
#	$(AM_V_CXX)source='src/map/packets/shop_buy.cpp' object='dsgame-shop_buy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_buy.o `test -f 'src/map/packets/shop_buy.cpp' || echo '$(srcdir)/'`src/map/packets/shop_buy.cpp

dsgame-shop_buy.obj: src/map/packets/shop_buy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_buy.obj -MD -MP -MF $(DEPDIR)/dsgame-shop_buy.Tpo -c -o dsgame-shop_buy.obj `if test -f 'src/map/packets/shop_buy.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_buy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_buy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_buy.Tpo $(DEPDIR)/dsgame-shop_buy.Po
#	$(AM_V_CXX)source='src/map/packets/shop_buy.cpp' object='dsgame-shop_buy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_buy.obj `if test -f 'src/map/packets/shop_buy.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_buy.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_buy.cpp'; fi`

dsgame-shop_items.o: src/map/packets/shop_items.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_items.o -MD -MP -MF $(DEPDIR)/dsgame-shop_items.Tpo -c -o dsgame-shop_items.o `test -f 'src/map/packets/shop_items.cpp' || echo '$(srcdir)/'`src/map/packets/shop_items.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_items.Tpo $(DEPDIR)/dsgame-shop_items.Po
#	$(AM_V_CXX)source='src/map/packets/shop_items.cpp' object='dsgame-shop_items.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_items.o `test -f 'src/map/packets/shop_items.cpp' || echo '$(srcdir)/'`src/map/packets/shop_items.cpp

dsgame-shop_items.obj: src/map/packets/shop_items.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_items.obj -MD -MP -MF $(DEPDIR)/dsgame-shop_items.Tpo -c -o dsgame-shop_items.obj `if test -f 'src/map/packets/shop_items.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_items.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_items.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_items.Tpo $(DEPDIR)/dsgame-shop_items.Po
#	$(AM_V_CXX)source='src/map/packets/shop_items.cpp' object='dsgame-shop_items.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_items.obj `if test -f 'src/map/packets/shop_items.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_items.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_items.cpp'; fi`

dsgame-shop_menu.o: src/map/packets/shop_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_menu.o -MD -MP -MF $(DEPDIR)/dsgame-shop_menu.Tpo -c -o dsgame-shop_menu.o `test -f 'src/map/packets/shop_menu.cpp' || echo '$(srcdir)/'`src/map/packets/shop_menu.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_menu.Tpo $(DEPDIR)/dsgame-shop_menu.Po
#	$(AM_V_CXX)source='src/map/packets/shop_menu.cpp' object='dsgame-shop_menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_menu.o `test -f 'src/map/packets/shop_menu.cpp' || echo '$(srcdir)/'`src/map/packets/shop_menu.cpp

dsgame-shop_menu.obj: src/map/packets/shop_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-shop_menu.obj -MD -MP -MF $(DEPDIR)/dsgame-shop_menu.Tpo -c -o dsgame-shop_menu.obj `if test -f 'src/map/packets/shop_menu.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_menu.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-shop_menu.Tpo $(DEPDIR)/dsgame-shop_menu.Po
#	$(AM_V_CXX)source='src/map/packets/shop_menu.cpp' object='dsgame-shop_menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-shop_menu.obj `if test -f 'src/map/packets/shop_menu.cpp'; then $(CYGPATH_W) 'src/map/packets/shop_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/shop_menu.cpp'; fi`

dsgame-stop_downloading.o: src/map/packets/stop_downloading.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-stop_downloading.o -MD -MP -MF $(DEPDIR)/dsgame-stop_downloading.Tpo -c -o dsgame-stop_downloading.o `test -f 'src/map/packets/stop_downloading.cpp' || echo '$(srcdir)/'`src/map/packets/stop_downloading.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-stop_downloading.Tpo $(DEPDIR)/dsgame-stop_downloading.Po
#	$(AM_V_CXX)source='src/map/packets/stop_downloading.cpp' object='dsgame-stop_downloading.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-stop_downloading.o `test -f 'src/map/packets/stop_downloading.cpp' || echo '$(srcdir)/'`src/map/packets/stop_downloading.cpp

dsgame-stop_downloading.obj: src/map/packets/stop_downloading.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-stop_downloading.obj -MD -MP -MF $(DEPDIR)/dsgame-stop_downloading.Tpo -c -o dsgame-stop_downloading.obj `if test -f 'src/map/packets/stop_downloading.cpp'; then $(CYGPATH_W) 'src/map/packets/stop_downloading.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/stop_downloading.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-stop_downloading.Tpo $(DEPDIR)/dsgame-stop_downloading.Po
#	$(AM_V_CXX)source='src/map/packets/stop_downloading.cpp' object='dsgame-stop_downloading.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-stop_downloading.obj `if test -f 'src/map/packets/stop_downloading.cpp'; then $(CYGPATH_W) 'src/map/packets/stop_downloading.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/stop_downloading.cpp'; fi`

dsgame-synth_animation.o: src/map/packets/synth_animation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_animation.o -MD -MP -MF $(DEPDIR)/dsgame-synth_animation.Tpo -c -o dsgame-synth_animation.o `test -f 'src/map/packets/synth_animation.cpp' || echo '$(srcdir)/'`src/map/packets/synth_animation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_animation.Tpo $(DEPDIR)/dsgame-synth_animation.Po
#	$(AM_V_CXX)source='src/map/packets/synth_animation.cpp' object='dsgame-synth_animation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_animation.o `test -f 'src/map/packets/synth_animation.cpp' || echo '$(srcdir)/'`src/map/packets/synth_animation.cpp

dsgame-synth_animation.obj: src/map/packets/synth_animation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_animation.obj -MD -MP -MF $(DEPDIR)/dsgame-synth_animation.Tpo -c -o dsgame-synth_animation.obj `if test -f 'src/map/packets/synth_animation.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_animation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_animation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_animation.Tpo $(DEPDIR)/dsgame-synth_animation.Po
#	$(AM_V_CXX)source='src/map/packets/synth_animation.cpp' object='dsgame-synth_animation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_animation.obj `if test -f 'src/map/packets/synth_animation.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_animation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_animation.cpp'; fi`

dsgame-synth_message.o: src/map/packets/synth_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_message.o -MD -MP -MF $(DEPDIR)/dsgame-synth_message.Tpo -c -o dsgame-synth_message.o `test -f 'src/map/packets/synth_message.cpp' || echo '$(srcdir)/'`src/map/packets/synth_message.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_message.Tpo $(DEPDIR)/dsgame-synth_message.Po
#	$(AM_V_CXX)source='src/map/packets/synth_message.cpp' object='dsgame-synth_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_message.o `test -f 'src/map/packets/synth_message.cpp' || echo '$(srcdir)/'`src/map/packets/synth_message.cpp

dsgame-synth_message.obj: src/map/packets/synth_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synth_message.obj -MD -MP -MF $(DEPDIR)/dsgame-synth_message.Tpo -c -o dsgame-synth_message.obj `if test -f 'src/map/packets/synth_message.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_message.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synth_message.Tpo $(DEPDIR)/dsgame-synth_message.Po
#	$(AM_V_CXX)source='src/map/packets/synth_message.cpp' object='dsgame-synth_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synth_message.obj `if test -f 'src/map/packets/synth_message.cpp'; then $(CYGPATH_W) 'src/map/packets/synth_message.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/synth_message.cpp'; fi`

dsgame-treasure_find_item.o: src/map/packets/treasure_find_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-treasure_find_item.o -MD -MP -MF $(DEPDIR)/dsgame-treasure_find_item.Tpo -c -o dsgame-treasure_find_item.o `test -f 'src/map/packets/treasure_find_item.cpp' || echo '$(srcdir)/'`src/map/packets/treasure_find_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-treasure_find_item.Tpo $(DEPDIR)/dsgame-treasure_find_item.Po
#	$(AM_V_CXX)source='src/map/packets/treasure_find_item.cpp' object='dsgame-treasure_find_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-treasure_find_item.o `test -f 'src/map/packets/treasure_find_item.cpp' || echo '$(srcdir)/'`src/map/packets/treasure_find_item.cpp

dsgame-treasure_find_item.obj: src/map/packets/treasure_find_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-treasure_find_item.obj -MD -MP -MF $(DEPDIR)/dsgame-treasure_find_item.Tpo -c -o dsgame-treasure_find_item.obj `if test -f 'src/map/packets/treasure_find_item.cpp'; then $(CYGPATH_W) 'src/map/packets/treasure_find_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/treasure_find_item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-treasure_find_item.Tpo $(DEPDIR)/dsgame-treasure_find_item.Po
#	$(AM_V_CXX)source='src/map/packets/treasure_find_item.cpp' object='dsgame-treasure_find_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-treasure_find_item.obj `if test -f 'src/map/packets/treasure_find_item.cpp'; then $(CYGPATH_W) 'src/map/packets/treasure_find_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/treasure_find_item.cpp'; fi`

dsgame-treasure_lot_item.o: src/map/packets/treasure_lot_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-treasure_lot_item.o -MD -MP -MF $(DEPDIR)/dsgame-treasure_lot_item.Tpo -c -o dsgame-treasure_lot_item.o `test -f 'src/map/packets/treasure_lot_item.cpp' || echo '$(srcdir)/'`src/map/packets/treasure_lot_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-treasure_lot_item.Tpo $(DEPDIR)/dsgame-treasure_lot_item.Po
#	$(AM_V_CXX)source='src/map/packets/treasure_lot_item.cpp' object='dsgame-treasure_lot_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-treasure_lot_item.o `test -f 'src/map/packets/treasure_lot_item.cpp' || echo '$(srcdir)/'`src/map/packets/treasure_lot_item.cpp

dsgame-treasure_lot_item.obj: src/map/packets/treasure_lot_item.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-treasure_lot_item.obj -MD -MP -MF $(DEPDIR)/dsgame-treasure_lot_item.Tpo -c -o dsgame-treasure_lot_item.obj `if test -f 'src/map/packets/treasure_lot_item.cpp'; then $(CYGPATH_W) 'src/map/packets/treasure_lot_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/treasure_lot_item.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-treasure_lot_item.Tpo $(DEPDIR)/dsgame-treasure_lot_item.Po
#	$(AM_V_CXX)source='src/map/packets/treasure_lot_item.cpp' object='dsgame-treasure_lot_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-treasure_lot_item.obj `if test -f 'src/map/packets/treasure_lot_item.cpp'; then $(CYGPATH_W) 'src/map/packets/treasure_lot_item.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/treasure_lot_item.cpp'; fi`

dsgame-entity_visual.o: src/map/packets/entity_visual.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-entity_visual.o -MD -MP -MF $(DEPDIR)/dsgame-entity_visual.Tpo -c -o dsgame-entity_visual.o `test -f 'src/map/packets/entity_visual.cpp' || echo '$(srcdir)/'`src/map/packets/entity_visual.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-entity_visual.Tpo $(DEPDIR)/dsgame-entity_visual.Po
#	$(AM_V_CXX)source='src/map/packets/entity_visual.cpp' object='dsgame-entity_visual.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-entity_visual.o `test -f 'src/map/packets/entity_visual.cpp' || echo '$(srcdir)/'`src/map/packets/entity_visual.cpp

dsgame-entity_visual.obj: src/map/packets/entity_visual.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-entity_visual.obj -MD -MP -MF $(DEPDIR)/dsgame-entity_visual.Tpo -c -o dsgame-entity_visual.obj `if test -f 'src/map/packets/entity_visual.cpp'; then $(CYGPATH_W) 'src/map/packets/entity_visual.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/entity_visual.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-entity_visual.Tpo $(DEPDIR)/dsgame-entity_visual.Po
#	$(AM_V_CXX)source='src/map/packets/entity_visual.cpp' object='dsgame-entity_visual.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-entity_visual.obj `if test -f 'src/map/packets/entity_visual.cpp'; then $(CYGPATH_W) 'src/map/packets/entity_visual.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/entity_visual.cpp'; fi`

dsgame-weather.o: src/map/packets/weather.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-weather.o -MD -MP -MF $(DEPDIR)/dsgame-weather.Tpo -c -o dsgame-weather.o `test -f 'src/map/packets/weather.cpp' || echo '$(srcdir)/'`src/map/packets/weather.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-weather.Tpo $(DEPDIR)/dsgame-weather.Po
#	$(AM_V_CXX)source='src/map/packets/weather.cpp' object='dsgame-weather.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-weather.o `test -f 'src/map/packets/weather.cpp' || echo '$(srcdir)/'`src/map/packets/weather.cpp

dsgame-weather.obj: src/map/packets/weather.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-weather.obj -MD -MP -MF $(DEPDIR)/dsgame-weather.Tpo -c -o dsgame-weather.obj `if test -f 'src/map/packets/weather.cpp'; then $(CYGPATH_W) 'src/map/packets/weather.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/weather.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-weather.Tpo $(DEPDIR)/dsgame-weather.Po
#	$(AM_V_CXX)source='src/map/packets/weather.cpp' object='dsgame-weather.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-weather.obj `if test -f 'src/map/packets/weather.cpp'; then $(CYGPATH_W) 'src/map/packets/weather.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/weather.cpp'; fi`

dsgame-wide_scan.o: src/map/packets/wide_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-wide_scan.o -MD -MP -MF $(DEPDIR)/dsgame-wide_scan.Tpo -c -o dsgame-wide_scan.o `test -f 'src/map/packets/wide_scan.cpp' || echo '$(srcdir)/'`src/map/packets/wide_scan.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-wide_scan.Tpo $(DEPDIR)/dsgame-wide_scan.Po
#	$(AM_V_CXX)source='src/map/packets/wide_scan.cpp' object='dsgame-wide_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-wide_scan.o `test -f 'src/map/packets/wide_scan.cpp' || echo '$(srcdir)/'`src/map/packets/wide_scan.cpp

dsgame-wide_scan.obj: src/map/packets/wide_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-wide_scan.obj -MD -MP -MF $(DEPDIR)/dsgame-wide_scan.Tpo -c -o dsgame-wide_scan.obj `if test -f 'src/map/packets/wide_scan.cpp'; then $(CYGPATH_W) 'src/map/packets/wide_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/wide_scan.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-wide_scan.Tpo $(DEPDIR)/dsgame-wide_scan.Po
#	$(AM_V_CXX)source='src/map/packets/wide_scan.cpp' object='dsgame-wide_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-wide_scan.obj `if test -f 'src/map/packets/wide_scan.cpp'; then $(CYGPATH_W) 'src/map/packets/wide_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/wide_scan.cpp'; fi`

dsgame-wide_scan_track.o: src/map/packets/wide_scan_track.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-wide_scan_track.o -MD -MP -MF $(DEPDIR)/dsgame-wide_scan_track.Tpo -c -o dsgame-wide_scan_track.o `test -f 'src/map/packets/wide_scan_track.cpp' || echo '$(srcdir)/'`src/map/packets/wide_scan_track.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-wide_scan_track.Tpo $(DEPDIR)/dsgame-wide_scan_track.Po
#	$(AM_V_CXX)source='src/map/packets/wide_scan_track.cpp' object='dsgame-wide_scan_track.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-wide_scan_track.o `test -f 'src/map/packets/wide_scan_track.cpp' || echo '$(srcdir)/'`src/map/packets/wide_scan_track.cpp

dsgame-wide_scan_track.obj: src/map/packets/wide_scan_track.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-wide_scan_track.obj -MD -MP -MF $(DEPDIR)/dsgame-wide_scan_track.Tpo -c -o dsgame-wide_scan_track.obj `if test -f 'src/map/packets/wide_scan_track.cpp'; then $(CYGPATH_W) 'src/map/packets/wide_scan_track.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/wide_scan_track.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-wide_scan_track.Tpo $(DEPDIR)/dsgame-wide_scan_track.Po
#	$(AM_V_CXX)source='src/map/packets/wide_scan_track.cpp' object='dsgame-wide_scan_track.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-wide_scan_track.obj `if test -f 'src/map/packets/wide_scan_track.cpp'; then $(CYGPATH_W) 'src/map/packets/wide_scan_track.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/wide_scan_track.cpp'; fi`

dsgame-zone_in.o: src/map/packets/zone_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_in.o -MD -MP -MF $(DEPDIR)/dsgame-zone_in.Tpo -c -o dsgame-zone_in.o `test -f 'src/map/packets/zone_in.cpp' || echo '$(srcdir)/'`src/map/packets/zone_in.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_in.Tpo $(DEPDIR)/dsgame-zone_in.Po
#	$(AM_V_CXX)source='src/map/packets/zone_in.cpp' object='dsgame-zone_in.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_in.o `test -f 'src/map/packets/zone_in.cpp' || echo '$(srcdir)/'`src/map/packets/zone_in.cpp

dsgame-zone_in.obj: src/map/packets/zone_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_in.obj -MD -MP -MF $(DEPDIR)/dsgame-zone_in.Tpo -c -o dsgame-zone_in.obj `if test -f 'src/map/packets/zone_in.cpp'; then $(CYGPATH_W) 'src/map/packets/zone_in.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/zone_in.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_in.Tpo $(DEPDIR)/dsgame-zone_in.Po
#	$(AM_V_CXX)source='src/map/packets/zone_in.cpp' object='dsgame-zone_in.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_in.obj `if test -f 'src/map/packets/zone_in.cpp'; then $(CYGPATH_W) 'src/map/packets/zone_in.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/zone_in.cpp'; fi`

dsgame-zone_visited.o: src/map/packets/zone_visited.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_visited.o -MD -MP -MF $(DEPDIR)/dsgame-zone_visited.Tpo -c -o dsgame-zone_visited.o `test -f 'src/map/packets/zone_visited.cpp' || echo '$(srcdir)/'`src/map/packets/zone_visited.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_visited.Tpo $(DEPDIR)/dsgame-zone_visited.Po
#	$(AM_V_CXX)source='src/map/packets/zone_visited.cpp' object='dsgame-zone_visited.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_visited.o `test -f 'src/map/packets/zone_visited.cpp' || echo '$(srcdir)/'`src/map/packets/zone_visited.cpp

dsgame-zone_visited.obj: src/map/packets/zone_visited.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_visited.obj -MD -MP -MF $(DEPDIR)/dsgame-zone_visited.Tpo -c -o dsgame-zone_visited.obj `if test -f 'src/map/packets/zone_visited.cpp'; then $(CYGPATH_W) 'src/map/packets/zone_visited.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/zone_visited.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_visited.Tpo $(DEPDIR)/dsgame-zone_visited.Po
#	$(AM_V_CXX)source='src/map/packets/zone_visited.cpp' object='dsgame-zone_visited.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_visited.obj `if test -f 'src/map/packets/zone_visited.cpp'; then $(CYGPATH_W) 'src/map/packets/zone_visited.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packets/zone_visited.cpp'; fi`

dsgame-packet_system.o: src/map/packet_system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-packet_system.o -MD -MP -MF $(DEPDIR)/dsgame-packet_system.Tpo -c -o dsgame-packet_system.o `test -f 'src/map/packet_system.cpp' || echo '$(srcdir)/'`src/map/packet_system.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-packet_system.Tpo $(DEPDIR)/dsgame-packet_system.Po
#	$(AM_V_CXX)source='src/map/packet_system.cpp' object='dsgame-packet_system.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-packet_system.o `test -f 'src/map/packet_system.cpp' || echo '$(srcdir)/'`src/map/packet_system.cpp

dsgame-packet_system.obj: src/map/packet_system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-packet_system.obj -MD -MP -MF $(DEPDIR)/dsgame-packet_system.Tpo -c -o dsgame-packet_system.obj `if test -f 'src/map/packet_system.cpp'; then $(CYGPATH_W) 'src/map/packet_system.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packet_system.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-packet_system.Tpo $(DEPDIR)/dsgame-packet_system.Po
#	$(AM_V_CXX)source='src/map/packet_system.cpp' object='dsgame-packet_system.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-packet_system.obj `if test -f 'src/map/packet_system.cpp'; then $(CYGPATH_W) 'src/map/packet_system.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/packet_system.cpp'; fi`

dsgame-party.o: src/map/party.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party.o -MD -MP -MF $(DEPDIR)/dsgame-party.Tpo -c -o dsgame-party.o `test -f 'src/map/party.cpp' || echo '$(srcdir)/'`src/map/party.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party.Tpo $(DEPDIR)/dsgame-party.Po
#	$(AM_V_CXX)source='src/map/party.cpp' object='dsgame-party.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party.o `test -f 'src/map/party.cpp' || echo '$(srcdir)/'`src/map/party.cpp

dsgame-party.obj: src/map/party.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-party.obj -MD -MP -MF $(DEPDIR)/dsgame-party.Tpo -c -o dsgame-party.obj `if test -f 'src/map/party.cpp'; then $(CYGPATH_W) 'src/map/party.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/party.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-party.Tpo $(DEPDIR)/dsgame-party.Po
#	$(AM_V_CXX)source='src/map/party.cpp' object='dsgame-party.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-party.obj `if test -f 'src/map/party.cpp'; then $(CYGPATH_W) 'src/map/party.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/party.cpp'; fi`

dsgame-recast_container.o: src/map/recast_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-recast_container.o -MD -MP -MF $(DEPDIR)/dsgame-recast_container.Tpo -c -o dsgame-recast_container.o `test -f 'src/map/recast_container.cpp' || echo '$(srcdir)/'`src/map/recast_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-recast_container.Tpo $(DEPDIR)/dsgame-recast_container.Po
#	$(AM_V_CXX)source='src/map/recast_container.cpp' object='dsgame-recast_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-recast_container.o `test -f 'src/map/recast_container.cpp' || echo '$(srcdir)/'`src/map/recast_container.cpp

dsgame-recast_container.obj: src/map/recast_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-recast_container.obj -MD -MP -MF $(DEPDIR)/dsgame-recast_container.Tpo -c -o dsgame-recast_container.obj `if test -f 'src/map/recast_container.cpp'; then $(CYGPATH_W) 'src/map/recast_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/recast_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-recast_container.Tpo $(DEPDIR)/dsgame-recast_container.Po
#	$(AM_V_CXX)source='src/map/recast_container.cpp' object='dsgame-recast_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-recast_container.obj `if test -f 'src/map/recast_container.cpp'; then $(CYGPATH_W) 'src/map/recast_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/recast_container.cpp'; fi`

dsgame-region.o: src/map/region.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-region.o -MD -MP -MF $(DEPDIR)/dsgame-region.Tpo -c -o dsgame-region.o `test -f 'src/map/region.cpp' || echo '$(srcdir)/'`src/map/region.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-region.Tpo $(DEPDIR)/dsgame-region.Po
#	$(AM_V_CXX)source='src/map/region.cpp' object='dsgame-region.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-region.o `test -f 'src/map/region.cpp' || echo '$(srcdir)/'`src/map/region.cpp

dsgame-region.obj: src/map/region.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-region.obj -MD -MP -MF $(DEPDIR)/dsgame-region.Tpo -c -o dsgame-region.obj `if test -f 'src/map/region.cpp'; then $(CYGPATH_W) 'src/map/region.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/region.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-region.Tpo $(DEPDIR)/dsgame-region.Po
#	$(AM_V_CXX)source='src/map/region.cpp' object='dsgame-region.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-region.obj `if test -f 'src/map/region.cpp'; then $(CYGPATH_W) 'src/map/region.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/region.cpp'; fi`

dsgame-spell.o: src/map/spell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-spell.o -MD -MP -MF $(DEPDIR)/dsgame-spell.Tpo -c -o dsgame-spell.o `test -f 'src/map/spell.cpp' || echo '$(srcdir)/'`src/map/spell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-spell.Tpo $(DEPDIR)/dsgame-spell.Po
#	$(AM_V_CXX)source='src/map/spell.cpp' object='dsgame-spell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-spell.o `test -f 'src/map/spell.cpp' || echo '$(srcdir)/'`src/map/spell.cpp

dsgame-spell.obj: src/map/spell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-spell.obj -MD -MP -MF $(DEPDIR)/dsgame-spell.Tpo -c -o dsgame-spell.obj `if test -f 'src/map/spell.cpp'; then $(CYGPATH_W) 'src/map/spell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/spell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-spell.Tpo $(DEPDIR)/dsgame-spell.Po
#	$(AM_V_CXX)source='src/map/spell.cpp' object='dsgame-spell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-spell.obj `if test -f 'src/map/spell.cpp'; then $(CYGPATH_W) 'src/map/spell.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/spell.cpp'; fi`

dsgame-status_effect.o: src/map/status_effect.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-status_effect.o -MD -MP -MF $(DEPDIR)/dsgame-status_effect.Tpo -c -o dsgame-status_effect.o `test -f 'src/map/status_effect.cpp' || echo '$(srcdir)/'`src/map/status_effect.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-status_effect.Tpo $(DEPDIR)/dsgame-status_effect.Po
#	$(AM_V_CXX)source='src/map/status_effect.cpp' object='dsgame-status_effect.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-status_effect.o `test -f 'src/map/status_effect.cpp' || echo '$(srcdir)/'`src/map/status_effect.cpp

dsgame-status_effect.obj: src/map/status_effect.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-status_effect.obj -MD -MP -MF $(DEPDIR)/dsgame-status_effect.Tpo -c -o dsgame-status_effect.obj `if test -f 'src/map/status_effect.cpp'; then $(CYGPATH_W) 'src/map/status_effect.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/status_effect.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-status_effect.Tpo $(DEPDIR)/dsgame-status_effect.Po
#	$(AM_V_CXX)source='src/map/status_effect.cpp' object='dsgame-status_effect.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-status_effect.obj `if test -f 'src/map/status_effect.cpp'; then $(CYGPATH_W) 'src/map/status_effect.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/status_effect.cpp'; fi`

dsgame-status_effect_container.o: src/map/status_effect_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-status_effect_container.o -MD -MP -MF $(DEPDIR)/dsgame-status_effect_container.Tpo -c -o dsgame-status_effect_container.o `test -f 'src/map/status_effect_container.cpp' || echo '$(srcdir)/'`src/map/status_effect_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-status_effect_container.Tpo $(DEPDIR)/dsgame-status_effect_container.Po
#	$(AM_V_CXX)source='src/map/status_effect_container.cpp' object='dsgame-status_effect_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-status_effect_container.o `test -f 'src/map/status_effect_container.cpp' || echo '$(srcdir)/'`src/map/status_effect_container.cpp

dsgame-status_effect_container.obj: src/map/status_effect_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-status_effect_container.obj -MD -MP -MF $(DEPDIR)/dsgame-status_effect_container.Tpo -c -o dsgame-status_effect_container.obj `if test -f 'src/map/status_effect_container.cpp'; then $(CYGPATH_W) 'src/map/status_effect_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/status_effect_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-status_effect_container.Tpo $(DEPDIR)/dsgame-status_effect_container.Po
#	$(AM_V_CXX)source='src/map/status_effect_container.cpp' object='dsgame-status_effect_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-status_effect_container.obj `if test -f 'src/map/status_effect_container.cpp'; then $(CYGPATH_W) 'src/map/status_effect_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/status_effect_container.cpp'; fi`

dsgame-time_server.o: src/map/time_server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-time_server.o -MD -MP -MF $(DEPDIR)/dsgame-time_server.Tpo -c -o dsgame-time_server.o `test -f 'src/map/time_server.cpp' || echo '$(srcdir)/'`src/map/time_server.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-time_server.Tpo $(DEPDIR)/dsgame-time_server.Po
#	$(AM_V_CXX)source='src/map/time_server.cpp' object='dsgame-time_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-time_server.o `test -f 'src/map/time_server.cpp' || echo '$(srcdir)/'`src/map/time_server.cpp

dsgame-time_server.obj: src/map/time_server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-time_server.obj -MD -MP -MF $(DEPDIR)/dsgame-time_server.Tpo -c -o dsgame-time_server.obj `if test -f 'src/map/time_server.cpp'; then $(CYGPATH_W) 'src/map/time_server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/time_server.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-time_server.Tpo $(DEPDIR)/dsgame-time_server.Po
#	$(AM_V_CXX)source='src/map/time_server.cpp' object='dsgame-time_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-time_server.obj `if test -f 'src/map/time_server.cpp'; then $(CYGPATH_W) 'src/map/time_server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/time_server.cpp'; fi`

dsgame-trade_container.o: src/map/trade_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_container.o -MD -MP -MF $(DEPDIR)/dsgame-trade_container.Tpo -c -o dsgame-trade_container.o `test -f 'src/map/trade_container.cpp' || echo '$(srcdir)/'`src/map/trade_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_container.Tpo $(DEPDIR)/dsgame-trade_container.Po
#	$(AM_V_CXX)source='src/map/trade_container.cpp' object='dsgame-trade_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_container.o `test -f 'src/map/trade_container.cpp' || echo '$(srcdir)/'`src/map/trade_container.cpp

dsgame-trade_container.obj: src/map/trade_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trade_container.obj -MD -MP -MF $(DEPDIR)/dsgame-trade_container.Tpo -c -o dsgame-trade_container.obj `if test -f 'src/map/trade_container.cpp'; then $(CYGPATH_W) 'src/map/trade_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/trade_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trade_container.Tpo $(DEPDIR)/dsgame-trade_container.Po
#	$(AM_V_CXX)source='src/map/trade_container.cpp' object='dsgame-trade_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trade_container.obj `if test -f 'src/map/trade_container.cpp'; then $(CYGPATH_W) 'src/map/trade_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/trade_container.cpp'; fi`

dsgame-trait.o: src/map/trait.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trait.o -MD -MP -MF $(DEPDIR)/dsgame-trait.Tpo -c -o dsgame-trait.o `test -f 'src/map/trait.cpp' || echo '$(srcdir)/'`src/map/trait.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trait.Tpo $(DEPDIR)/dsgame-trait.Po
#	$(AM_V_CXX)source='src/map/trait.cpp' object='dsgame-trait.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trait.o `test -f 'src/map/trait.cpp' || echo '$(srcdir)/'`src/map/trait.cpp

dsgame-trait.obj: src/map/trait.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-trait.obj -MD -MP -MF $(DEPDIR)/dsgame-trait.Tpo -c -o dsgame-trait.obj `if test -f 'src/map/trait.cpp'; then $(CYGPATH_W) 'src/map/trait.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/trait.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-trait.Tpo $(DEPDIR)/dsgame-trait.Po
#	$(AM_V_CXX)source='src/map/trait.cpp' object='dsgame-trait.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-trait.obj `if test -f 'src/map/trait.cpp'; then $(CYGPATH_W) 'src/map/trait.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/trait.cpp'; fi`

dsgame-transport.o: src/map/transport.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-transport.o -MD -MP -MF $(DEPDIR)/dsgame-transport.Tpo -c -o dsgame-transport.o `test -f 'src/map/transport.cpp' || echo '$(srcdir)/'`src/map/transport.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-transport.Tpo $(DEPDIR)/dsgame-transport.Po
#	$(AM_V_CXX)source='src/map/transport.cpp' object='dsgame-transport.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-transport.o `test -f 'src/map/transport.cpp' || echo '$(srcdir)/'`src/map/transport.cpp

dsgame-transport.obj: src/map/transport.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-transport.obj -MD -MP -MF $(DEPDIR)/dsgame-transport.Tpo -c -o dsgame-transport.obj `if test -f 'src/map/transport.cpp'; then $(CYGPATH_W) 'src/map/transport.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/transport.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-transport.Tpo $(DEPDIR)/dsgame-transport.Po
#	$(AM_V_CXX)source='src/map/transport.cpp' object='dsgame-transport.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-transport.obj `if test -f 'src/map/transport.cpp'; then $(CYGPATH_W) 'src/map/transport.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/transport.cpp'; fi`

dsgame-treasure_pool.o: src/map/treasure_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-treasure_pool.o -MD -MP -MF $(DEPDIR)/dsgame-treasure_pool.Tpo -c -o dsgame-treasure_pool.o `test -f 'src/map/treasure_pool.cpp' || echo '$(srcdir)/'`src/map/treasure_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-treasure_pool.Tpo $(DEPDIR)/dsgame-treasure_pool.Po
#	$(AM_V_CXX)source='src/map/treasure_pool.cpp' object='dsgame-treasure_pool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-treasure_pool.o `test -f 'src/map/treasure_pool.cpp' || echo '$(srcdir)/'`src/map/treasure_pool.cpp

dsgame-treasure_pool.obj: src/map/treasure_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-treasure_pool.obj -MD -MP -MF $(DEPDIR)/dsgame-treasure_pool.Tpo -c -o dsgame-treasure_pool.obj `if test -f 'src/map/treasure_pool.cpp'; then $(CYGPATH_W) 'src/map/treasure_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/treasure_pool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-treasure_pool.Tpo $(DEPDIR)/dsgame-treasure_pool.Po
#	$(AM_V_CXX)source='src/map/treasure_pool.cpp' object='dsgame-treasure_pool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-treasure_pool.obj `if test -f 'src/map/treasure_pool.cpp'; then $(CYGPATH_W) 'src/map/treasure_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/treasure_pool.cpp'; fi`

dsgame-universal_container.o: src/map/universal_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-universal_container.o -MD -MP -MF $(DEPDIR)/dsgame-universal_container.Tpo -c -o dsgame-universal_container.o `test -f 'src/map/universal_container.cpp' || echo '$(srcdir)/'`src/map/universal_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-universal_container.Tpo $(DEPDIR)/dsgame-universal_container.Po
#	$(AM_V_CXX)source='src/map/universal_container.cpp' object='dsgame-universal_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-universal_container.o `test -f 'src/map/universal_container.cpp' || echo '$(srcdir)/'`src/map/universal_container.cpp

dsgame-universal_container.obj: src/map/universal_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-universal_container.obj -MD -MP -MF $(DEPDIR)/dsgame-universal_container.Tpo -c -o dsgame-universal_container.obj `if test -f 'src/map/universal_container.cpp'; then $(CYGPATH_W) 'src/map/universal_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/universal_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-universal_container.Tpo $(DEPDIR)/dsgame-universal_container.Po
#	$(AM_V_CXX)source='src/map/universal_container.cpp' object='dsgame-universal_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-universal_container.obj `if test -f 'src/map/universal_container.cpp'; then $(CYGPATH_W) 'src/map/universal_container.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/universal_container.cpp'; fi`

dsgame-attackutils.o: src/map/utils/attackutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attackutils.o -MD -MP -MF $(DEPDIR)/dsgame-attackutils.Tpo -c -o dsgame-attackutils.o `test -f 'src/map/utils/attackutils.cpp' || echo '$(srcdir)/'`src/map/utils/attackutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attackutils.Tpo $(DEPDIR)/dsgame-attackutils.Po
#	$(AM_V_CXX)source='src/map/utils/attackutils.cpp' object='dsgame-attackutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attackutils.o `test -f 'src/map/utils/attackutils.cpp' || echo '$(srcdir)/'`src/map/utils/attackutils.cpp

dsgame-attackutils.obj: src/map/utils/attackutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attackutils.obj -MD -MP -MF $(DEPDIR)/dsgame-attackutils.Tpo -c -o dsgame-attackutils.obj `if test -f 'src/map/utils/attackutils.cpp'; then $(CYGPATH_W) 'src/map/utils/attackutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/attackutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attackutils.Tpo $(DEPDIR)/dsgame-attackutils.Po
#	$(AM_V_CXX)source='src/map/utils/attackutils.cpp' object='dsgame-attackutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attackutils.obj `if test -f 'src/map/utils/attackutils.cpp'; then $(CYGPATH_W) 'src/map/utils/attackutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/attackutils.cpp'; fi`

dsgame-battleutils.o: src/map/utils/battleutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battleutils.o -MD -MP -MF $(DEPDIR)/dsgame-battleutils.Tpo -c -o dsgame-battleutils.o `test -f 'src/map/utils/battleutils.cpp' || echo '$(srcdir)/'`src/map/utils/battleutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battleutils.Tpo $(DEPDIR)/dsgame-battleutils.Po
#	$(AM_V_CXX)source='src/map/utils/battleutils.cpp' object='dsgame-battleutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battleutils.o `test -f 'src/map/utils/battleutils.cpp' || echo '$(srcdir)/'`src/map/utils/battleutils.cpp

dsgame-battleutils.obj: src/map/utils/battleutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battleutils.obj -MD -MP -MF $(DEPDIR)/dsgame-battleutils.Tpo -c -o dsgame-battleutils.obj `if test -f 'src/map/utils/battleutils.cpp'; then $(CYGPATH_W) 'src/map/utils/battleutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/battleutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battleutils.Tpo $(DEPDIR)/dsgame-battleutils.Po
#	$(AM_V_CXX)source='src/map/utils/battleutils.cpp' object='dsgame-battleutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battleutils.obj `if test -f 'src/map/utils/battleutils.cpp'; then $(CYGPATH_W) 'src/map/utils/battleutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/battleutils.cpp'; fi`

dsgame-blacklistutils.o: src/map/utils/blacklistutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blacklistutils.o -MD -MP -MF $(DEPDIR)/dsgame-blacklistutils.Tpo -c -o dsgame-blacklistutils.o `test -f 'src/map/utils/blacklistutils.cpp' || echo '$(srcdir)/'`src/map/utils/blacklistutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blacklistutils.Tpo $(DEPDIR)/dsgame-blacklistutils.Po
#	$(AM_V_CXX)source='src/map/utils/blacklistutils.cpp' object='dsgame-blacklistutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blacklistutils.o `test -f 'src/map/utils/blacklistutils.cpp' || echo '$(srcdir)/'`src/map/utils/blacklistutils.cpp

dsgame-blacklistutils.obj: src/map/utils/blacklistutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blacklistutils.obj -MD -MP -MF $(DEPDIR)/dsgame-blacklistutils.Tpo -c -o dsgame-blacklistutils.obj `if test -f 'src/map/utils/blacklistutils.cpp'; then $(CYGPATH_W) 'src/map/utils/blacklistutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/blacklistutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blacklistutils.Tpo $(DEPDIR)/dsgame-blacklistutils.Po
#	$(AM_V_CXX)source='src/map/utils/blacklistutils.cpp' object='dsgame-blacklistutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blacklistutils.obj `if test -f 'src/map/utils/blacklistutils.cpp'; then $(CYGPATH_W) 'src/map/utils/blacklistutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/blacklistutils.cpp'; fi`

dsgame-blueutils.o: src/map/utils/blueutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blueutils.o -MD -MP -MF $(DEPDIR)/dsgame-blueutils.Tpo -c -o dsgame-blueutils.o `test -f 'src/map/utils/blueutils.cpp' || echo '$(srcdir)/'`src/map/utils/blueutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blueutils.Tpo $(DEPDIR)/dsgame-blueutils.Po
#	$(AM_V_CXX)source='src/map/utils/blueutils.cpp' object='dsgame-blueutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blueutils.o `test -f 'src/map/utils/blueutils.cpp' || echo '$(srcdir)/'`src/map/utils/blueutils.cpp

dsgame-blueutils.obj: src/map/utils/blueutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-blueutils.obj -MD -MP -MF $(DEPDIR)/dsgame-blueutils.Tpo -c -o dsgame-blueutils.obj `if test -f 'src/map/utils/blueutils.cpp'; then $(CYGPATH_W) 'src/map/utils/blueutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/blueutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-blueutils.Tpo $(DEPDIR)/dsgame-blueutils.Po
#	$(AM_V_CXX)source='src/map/utils/blueutils.cpp' object='dsgame-blueutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-blueutils.obj `if test -f 'src/map/utils/blueutils.cpp'; then $(CYGPATH_W) 'src/map/utils/blueutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/blueutils.cpp'; fi`

dsgame-charutils.o: src/map/utils/charutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-charutils.o -MD -MP -MF $(DEPDIR)/dsgame-charutils.Tpo -c -o dsgame-charutils.o `test -f 'src/map/utils/charutils.cpp' || echo '$(srcdir)/'`src/map/utils/charutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-charutils.Tpo $(DEPDIR)/dsgame-charutils.Po
#	$(AM_V_CXX)source='src/map/utils/charutils.cpp' object='dsgame-charutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-charutils.o `test -f 'src/map/utils/charutils.cpp' || echo '$(srcdir)/'`src/map/utils/charutils.cpp

dsgame-charutils.obj: src/map/utils/charutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-charutils.obj -MD -MP -MF $(DEPDIR)/dsgame-charutils.Tpo -c -o dsgame-charutils.obj `if test -f 'src/map/utils/charutils.cpp'; then $(CYGPATH_W) 'src/map/utils/charutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/charutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-charutils.Tpo $(DEPDIR)/dsgame-charutils.Po
#	$(AM_V_CXX)source='src/map/utils/charutils.cpp' object='dsgame-charutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-charutils.obj `if test -f 'src/map/utils/charutils.cpp'; then $(CYGPATH_W) 'src/map/utils/charutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/charutils.cpp'; fi`

dsgame-fishingutils.o: src/map/utils/fishingutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-fishingutils.o -MD -MP -MF $(DEPDIR)/dsgame-fishingutils.Tpo -c -o dsgame-fishingutils.o `test -f 'src/map/utils/fishingutils.cpp' || echo '$(srcdir)/'`src/map/utils/fishingutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-fishingutils.Tpo $(DEPDIR)/dsgame-fishingutils.Po
#	$(AM_V_CXX)source='src/map/utils/fishingutils.cpp' object='dsgame-fishingutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-fishingutils.o `test -f 'src/map/utils/fishingutils.cpp' || echo '$(srcdir)/'`src/map/utils/fishingutils.cpp

dsgame-fishingutils.obj: src/map/utils/fishingutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-fishingutils.obj -MD -MP -MF $(DEPDIR)/dsgame-fishingutils.Tpo -c -o dsgame-fishingutils.obj `if test -f 'src/map/utils/fishingutils.cpp'; then $(CYGPATH_W) 'src/map/utils/fishingutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/fishingutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-fishingutils.Tpo $(DEPDIR)/dsgame-fishingutils.Po
#	$(AM_V_CXX)source='src/map/utils/fishingutils.cpp' object='dsgame-fishingutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-fishingutils.obj `if test -f 'src/map/utils/fishingutils.cpp'; then $(CYGPATH_W) 'src/map/utils/fishingutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/fishingutils.cpp'; fi`

dsgame-guildutils.o: src/map/utils/guildutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guildutils.o -MD -MP -MF $(DEPDIR)/dsgame-guildutils.Tpo -c -o dsgame-guildutils.o `test -f 'src/map/utils/guildutils.cpp' || echo '$(srcdir)/'`src/map/utils/guildutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guildutils.Tpo $(DEPDIR)/dsgame-guildutils.Po
#	$(AM_V_CXX)source='src/map/utils/guildutils.cpp' object='dsgame-guildutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guildutils.o `test -f 'src/map/utils/guildutils.cpp' || echo '$(srcdir)/'`src/map/utils/guildutils.cpp

dsgame-guildutils.obj: src/map/utils/guildutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-guildutils.obj -MD -MP -MF $(DEPDIR)/dsgame-guildutils.Tpo -c -o dsgame-guildutils.obj `if test -f 'src/map/utils/guildutils.cpp'; then $(CYGPATH_W) 'src/map/utils/guildutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/guildutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-guildutils.Tpo $(DEPDIR)/dsgame-guildutils.Po
#	$(AM_V_CXX)source='src/map/utils/guildutils.cpp' object='dsgame-guildutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-guildutils.obj `if test -f 'src/map/utils/guildutils.cpp'; then $(CYGPATH_W) 'src/map/utils/guildutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/guildutils.cpp'; fi`

dsgame-battlefieldutils.o: src/map/utils/battlefieldutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battlefieldutils.o -MD -MP -MF $(DEPDIR)/dsgame-battlefieldutils.Tpo -c -o dsgame-battlefieldutils.o `test -f 'src/map/utils/battlefieldutils.cpp' || echo '$(srcdir)/'`src/map/utils/battlefieldutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battlefieldutils.Tpo $(DEPDIR)/dsgame-battlefieldutils.Po
#	$(AM_V_CXX)source='src/map/utils/battlefieldutils.cpp' object='dsgame-battlefieldutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battlefieldutils.o `test -f 'src/map/utils/battlefieldutils.cpp' || echo '$(srcdir)/'`src/map/utils/battlefieldutils.cpp

dsgame-battlefieldutils.obj: src/map/utils/battlefieldutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-battlefieldutils.obj -MD -MP -MF $(DEPDIR)/dsgame-battlefieldutils.Tpo -c -o dsgame-battlefieldutils.obj `if test -f 'src/map/utils/battlefieldutils.cpp'; then $(CYGPATH_W) 'src/map/utils/battlefieldutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/battlefieldutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-battlefieldutils.Tpo $(DEPDIR)/dsgame-battlefieldutils.Po
#	$(AM_V_CXX)source='src/map/utils/battlefieldutils.cpp' object='dsgame-battlefieldutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-battlefieldutils.obj `if test -f 'src/map/utils/battlefieldutils.cpp'; then $(CYGPATH_W) 'src/map/utils/battlefieldutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/battlefieldutils.cpp'; fi`

dsgame-instanceutils.o: src/map/utils/instanceutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instanceutils.o -MD -MP -MF $(DEPDIR)/dsgame-instanceutils.Tpo -c -o dsgame-instanceutils.o `test -f 'src/map/utils/instanceutils.cpp' || echo '$(srcdir)/'`src/map/utils/instanceutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instanceutils.Tpo $(DEPDIR)/dsgame-instanceutils.Po
#	$(AM_V_CXX)source='src/map/utils/instanceutils.cpp' object='dsgame-instanceutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instanceutils.o `test -f 'src/map/utils/instanceutils.cpp' || echo '$(srcdir)/'`src/map/utils/instanceutils.cpp

dsgame-instanceutils.obj: src/map/utils/instanceutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-instanceutils.obj -MD -MP -MF $(DEPDIR)/dsgame-instanceutils.Tpo -c -o dsgame-instanceutils.obj `if test -f 'src/map/utils/instanceutils.cpp'; then $(CYGPATH_W) 'src/map/utils/instanceutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/instanceutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-instanceutils.Tpo $(DEPDIR)/dsgame-instanceutils.Po
#	$(AM_V_CXX)source='src/map/utils/instanceutils.cpp' object='dsgame-instanceutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-instanceutils.obj `if test -f 'src/map/utils/instanceutils.cpp'; then $(CYGPATH_W) 'src/map/utils/instanceutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/instanceutils.cpp'; fi`

dsgame-itemutils.o: src/map/utils/itemutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-itemutils.o -MD -MP -MF $(DEPDIR)/dsgame-itemutils.Tpo -c -o dsgame-itemutils.o `test -f 'src/map/utils/itemutils.cpp' || echo '$(srcdir)/'`src/map/utils/itemutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-itemutils.Tpo $(DEPDIR)/dsgame-itemutils.Po
#	$(AM_V_CXX)source='src/map/utils/itemutils.cpp' object='dsgame-itemutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-itemutils.o `test -f 'src/map/utils/itemutils.cpp' || echo '$(srcdir)/'`src/map/utils/itemutils.cpp

dsgame-itemutils.obj: src/map/utils/itemutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-itemutils.obj -MD -MP -MF $(DEPDIR)/dsgame-itemutils.Tpo -c -o dsgame-itemutils.obj `if test -f 'src/map/utils/itemutils.cpp'; then $(CYGPATH_W) 'src/map/utils/itemutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/itemutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-itemutils.Tpo $(DEPDIR)/dsgame-itemutils.Po
#	$(AM_V_CXX)source='src/map/utils/itemutils.cpp' object='dsgame-itemutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-itemutils.obj `if test -f 'src/map/utils/itemutils.cpp'; then $(CYGPATH_W) 'src/map/utils/itemutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/itemutils.cpp'; fi`

dsgame-jailutils.o: src/map/utils/jailutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-jailutils.o -MD -MP -MF $(DEPDIR)/dsgame-jailutils.Tpo -c -o dsgame-jailutils.o `test -f 'src/map/utils/jailutils.cpp' || echo '$(srcdir)/'`src/map/utils/jailutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-jailutils.Tpo $(DEPDIR)/dsgame-jailutils.Po
#	$(AM_V_CXX)source='src/map/utils/jailutils.cpp' object='dsgame-jailutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-jailutils.o `test -f 'src/map/utils/jailutils.cpp' || echo '$(srcdir)/'`src/map/utils/jailutils.cpp

dsgame-jailutils.obj: src/map/utils/jailutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-jailutils.obj -MD -MP -MF $(DEPDIR)/dsgame-jailutils.Tpo -c -o dsgame-jailutils.obj `if test -f 'src/map/utils/jailutils.cpp'; then $(CYGPATH_W) 'src/map/utils/jailutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/jailutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-jailutils.Tpo $(DEPDIR)/dsgame-jailutils.Po
#	$(AM_V_CXX)source='src/map/utils/jailutils.cpp' object='dsgame-jailutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-jailutils.obj `if test -f 'src/map/utils/jailutils.cpp'; then $(CYGPATH_W) 'src/map/utils/jailutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/jailutils.cpp'; fi`

dsgame-mobutils.o: src/map/utils/mobutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobutils.o -MD -MP -MF $(DEPDIR)/dsgame-mobutils.Tpo -c -o dsgame-mobutils.o `test -f 'src/map/utils/mobutils.cpp' || echo '$(srcdir)/'`src/map/utils/mobutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobutils.Tpo $(DEPDIR)/dsgame-mobutils.Po
#	$(AM_V_CXX)source='src/map/utils/mobutils.cpp' object='dsgame-mobutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobutils.o `test -f 'src/map/utils/mobutils.cpp' || echo '$(srcdir)/'`src/map/utils/mobutils.cpp

dsgame-mobutils.obj: src/map/utils/mobutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-mobutils.obj -MD -MP -MF $(DEPDIR)/dsgame-mobutils.Tpo -c -o dsgame-mobutils.obj `if test -f 'src/map/utils/mobutils.cpp'; then $(CYGPATH_W) 'src/map/utils/mobutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/mobutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-mobutils.Tpo $(DEPDIR)/dsgame-mobutils.Po
#	$(AM_V_CXX)source='src/map/utils/mobutils.cpp' object='dsgame-mobutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-mobutils.obj `if test -f 'src/map/utils/mobutils.cpp'; then $(CYGPATH_W) 'src/map/utils/mobutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/mobutils.cpp'; fi`

dsgame-petutils.o: src/map/utils/petutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-petutils.o -MD -MP -MF $(DEPDIR)/dsgame-petutils.Tpo -c -o dsgame-petutils.o `test -f 'src/map/utils/petutils.cpp' || echo '$(srcdir)/'`src/map/utils/petutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-petutils.Tpo $(DEPDIR)/dsgame-petutils.Po
#	$(AM_V_CXX)source='src/map/utils/petutils.cpp' object='dsgame-petutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-petutils.o `test -f 'src/map/utils/petutils.cpp' || echo '$(srcdir)/'`src/map/utils/petutils.cpp

dsgame-petutils.obj: src/map/utils/petutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-petutils.obj -MD -MP -MF $(DEPDIR)/dsgame-petutils.Tpo -c -o dsgame-petutils.obj `if test -f 'src/map/utils/petutils.cpp'; then $(CYGPATH_W) 'src/map/utils/petutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/petutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-petutils.Tpo $(DEPDIR)/dsgame-petutils.Po
#	$(AM_V_CXX)source='src/map/utils/petutils.cpp' object='dsgame-petutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-petutils.obj `if test -f 'src/map/utils/petutils.cpp'; then $(CYGPATH_W) 'src/map/utils/petutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/petutils.cpp'; fi`

dsgame-puppetutils.o: src/map/utils/puppetutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-puppetutils.o -MD -MP -MF $(DEPDIR)/dsgame-puppetutils.Tpo -c -o dsgame-puppetutils.o `test -f 'src/map/utils/puppetutils.cpp' || echo '$(srcdir)/'`src/map/utils/puppetutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-puppetutils.Tpo $(DEPDIR)/dsgame-puppetutils.Po
#	$(AM_V_CXX)source='src/map/utils/puppetutils.cpp' object='dsgame-puppetutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-puppetutils.o `test -f 'src/map/utils/puppetutils.cpp' || echo '$(srcdir)/'`src/map/utils/puppetutils.cpp

dsgame-puppetutils.obj: src/map/utils/puppetutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-puppetutils.obj -MD -MP -MF $(DEPDIR)/dsgame-puppetutils.Tpo -c -o dsgame-puppetutils.obj `if test -f 'src/map/utils/puppetutils.cpp'; then $(CYGPATH_W) 'src/map/utils/puppetutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/puppetutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-puppetutils.Tpo $(DEPDIR)/dsgame-puppetutils.Po
#	$(AM_V_CXX)source='src/map/utils/puppetutils.cpp' object='dsgame-puppetutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-puppetutils.obj `if test -f 'src/map/utils/puppetutils.cpp'; then $(CYGPATH_W) 'src/map/utils/puppetutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/puppetutils.cpp'; fi`

dsgame-synthutils.o: src/map/utils/synthutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synthutils.o -MD -MP -MF $(DEPDIR)/dsgame-synthutils.Tpo -c -o dsgame-synthutils.o `test -f 'src/map/utils/synthutils.cpp' || echo '$(srcdir)/'`src/map/utils/synthutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synthutils.Tpo $(DEPDIR)/dsgame-synthutils.Po
#	$(AM_V_CXX)source='src/map/utils/synthutils.cpp' object='dsgame-synthutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synthutils.o `test -f 'src/map/utils/synthutils.cpp' || echo '$(srcdir)/'`src/map/utils/synthutils.cpp

dsgame-synthutils.obj: src/map/utils/synthutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-synthutils.obj -MD -MP -MF $(DEPDIR)/dsgame-synthutils.Tpo -c -o dsgame-synthutils.obj `if test -f 'src/map/utils/synthutils.cpp'; then $(CYGPATH_W) 'src/map/utils/synthutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/synthutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-synthutils.Tpo $(DEPDIR)/dsgame-synthutils.Po
#	$(AM_V_CXX)source='src/map/utils/synthutils.cpp' object='dsgame-synthutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-synthutils.obj `if test -f 'src/map/utils/synthutils.cpp'; then $(CYGPATH_W) 'src/map/utils/synthutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/synthutils.cpp'; fi`

dsgame-zoneutils.o: src/map/utils/zoneutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zoneutils.o -MD -MP -MF $(DEPDIR)/dsgame-zoneutils.Tpo -c -o dsgame-zoneutils.o `test -f 'src/map/utils/zoneutils.cpp' || echo '$(srcdir)/'`src/map/utils/zoneutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zoneutils.Tpo $(DEPDIR)/dsgame-zoneutils.Po
#	$(AM_V_CXX)source='src/map/utils/zoneutils.cpp' object='dsgame-zoneutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zoneutils.o `test -f 'src/map/utils/zoneutils.cpp' || echo '$(srcdir)/'`src/map/utils/zoneutils.cpp

dsgame-zoneutils.obj: src/map/utils/zoneutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zoneutils.obj -MD -MP -MF $(DEPDIR)/dsgame-zoneutils.Tpo -c -o dsgame-zoneutils.obj `if test -f 'src/map/utils/zoneutils.cpp'; then $(CYGPATH_W) 'src/map/utils/zoneutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/zoneutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zoneutils.Tpo $(DEPDIR)/dsgame-zoneutils.Po
#	$(AM_V_CXX)source='src/map/utils/zoneutils.cpp' object='dsgame-zoneutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zoneutils.obj `if test -f 'src/map/utils/zoneutils.cpp'; then $(CYGPATH_W) 'src/map/utils/zoneutils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/utils/zoneutils.cpp'; fi`

dsgame-vana_time.o: src/map/vana_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-vana_time.o -MD -MP -MF $(DEPDIR)/dsgame-vana_time.Tpo -c -o dsgame-vana_time.o `test -f 'src/map/vana_time.cpp' || echo '$(srcdir)/'`src/map/vana_time.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-vana_time.Tpo $(DEPDIR)/dsgame-vana_time.Po
#	$(AM_V_CXX)source='src/map/vana_time.cpp' object='dsgame-vana_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-vana_time.o `test -f 'src/map/vana_time.cpp' || echo '$(srcdir)/'`src/map/vana_time.cpp

dsgame-vana_time.obj: src/map/vana_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-vana_time.obj -MD -MP -MF $(DEPDIR)/dsgame-vana_time.Tpo -c -o dsgame-vana_time.obj `if test -f 'src/map/vana_time.cpp'; then $(CYGPATH_W) 'src/map/vana_time.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/vana_time.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-vana_time.Tpo $(DEPDIR)/dsgame-vana_time.Po
#	$(AM_V_CXX)source='src/map/vana_time.cpp' object='dsgame-vana_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-vana_time.obj `if test -f 'src/map/vana_time.cpp'; then $(CYGPATH_W) 'src/map/vana_time.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/vana_time.cpp'; fi`

dsgame-weapon_skill.o: src/map/weapon_skill.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-weapon_skill.o -MD -MP -MF $(DEPDIR)/dsgame-weapon_skill.Tpo -c -o dsgame-weapon_skill.o `test -f 'src/map/weapon_skill.cpp' || echo '$(srcdir)/'`src/map/weapon_skill.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-weapon_skill.Tpo $(DEPDIR)/dsgame-weapon_skill.Po
#	$(AM_V_CXX)source='src/map/weapon_skill.cpp' object='dsgame-weapon_skill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-weapon_skill.o `test -f 'src/map/weapon_skill.cpp' || echo '$(srcdir)/'`src/map/weapon_skill.cpp

dsgame-weapon_skill.obj: src/map/weapon_skill.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-weapon_skill.obj -MD -MP -MF $(DEPDIR)/dsgame-weapon_skill.Tpo -c -o dsgame-weapon_skill.obj `if test -f 'src/map/weapon_skill.cpp'; then $(CYGPATH_W) 'src/map/weapon_skill.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/weapon_skill.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-weapon_skill.Tpo $(DEPDIR)/dsgame-weapon_skill.Po
#	$(AM_V_CXX)source='src/map/weapon_skill.cpp' object='dsgame-weapon_skill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-weapon_skill.obj `if test -f 'src/map/weapon_skill.cpp'; then $(CYGPATH_W) 'src/map/weapon_skill.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/weapon_skill.cpp'; fi`

dsgame-zone.o: src/map/zone.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone.o -MD -MP -MF $(DEPDIR)/dsgame-zone.Tpo -c -o dsgame-zone.o `test -f 'src/map/zone.cpp' || echo '$(srcdir)/'`src/map/zone.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone.Tpo $(DEPDIR)/dsgame-zone.Po
#	$(AM_V_CXX)source='src/map/zone.cpp' object='dsgame-zone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone.o `test -f 'src/map/zone.cpp' || echo '$(srcdir)/'`src/map/zone.cpp

dsgame-zone.obj: src/map/zone.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone.obj -MD -MP -MF $(DEPDIR)/dsgame-zone.Tpo -c -o dsgame-zone.obj `if test -f 'src/map/zone.cpp'; then $(CYGPATH_W) 'src/map/zone.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/zone.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone.Tpo $(DEPDIR)/dsgame-zone.Po
#	$(AM_V_CXX)source='src/map/zone.cpp' object='dsgame-zone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone.obj `if test -f 'src/map/zone.cpp'; then $(CYGPATH_W) 'src/map/zone.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/zone.cpp'; fi`

dsgame-attack.o: src/map/attack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attack.o -MD -MP -MF $(DEPDIR)/dsgame-attack.Tpo -c -o dsgame-attack.o `test -f 'src/map/attack.cpp' || echo '$(srcdir)/'`src/map/attack.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attack.Tpo $(DEPDIR)/dsgame-attack.Po
#	$(AM_V_CXX)source='src/map/attack.cpp' object='dsgame-attack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attack.o `test -f 'src/map/attack.cpp' || echo '$(srcdir)/'`src/map/attack.cpp

dsgame-attack.obj: src/map/attack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attack.obj -MD -MP -MF $(DEPDIR)/dsgame-attack.Tpo -c -o dsgame-attack.obj `if test -f 'src/map/attack.cpp'; then $(CYGPATH_W) 'src/map/attack.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/attack.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attack.Tpo $(DEPDIR)/dsgame-attack.Po
#	$(AM_V_CXX)source='src/map/attack.cpp' object='dsgame-attack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attack.obj `if test -f 'src/map/attack.cpp'; then $(CYGPATH_W) 'src/map/attack.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/attack.cpp'; fi`

dsgame-attackround.o: src/map/attackround.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attackround.o -MD -MP -MF $(DEPDIR)/dsgame-attackround.Tpo -c -o dsgame-attackround.o `test -f 'src/map/attackround.cpp' || echo '$(srcdir)/'`src/map/attackround.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attackround.Tpo $(DEPDIR)/dsgame-attackround.Po
#	$(AM_V_CXX)source='src/map/attackround.cpp' object='dsgame-attackround.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attackround.o `test -f 'src/map/attackround.cpp' || echo '$(srcdir)/'`src/map/attackround.cpp

dsgame-attackround.obj: src/map/attackround.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-attackround.obj -MD -MP -MF $(DEPDIR)/dsgame-attackround.Tpo -c -o dsgame-attackround.obj `if test -f 'src/map/attackround.cpp'; then $(CYGPATH_W) 'src/map/attackround.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/attackround.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-attackround.Tpo $(DEPDIR)/dsgame-attackround.Po
#	$(AM_V_CXX)source='src/map/attackround.cpp' object='dsgame-attackround.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-attackround.obj `if test -f 'src/map/attackround.cpp'; then $(CYGPATH_W) 'src/map/attackround.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/attackround.cpp'; fi`

dsgame-zone_entities.o: src/map/zone_entities.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_entities.o -MD -MP -MF $(DEPDIR)/dsgame-zone_entities.Tpo -c -o dsgame-zone_entities.o `test -f 'src/map/zone_entities.cpp' || echo '$(srcdir)/'`src/map/zone_entities.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_entities.Tpo $(DEPDIR)/dsgame-zone_entities.Po
#	$(AM_V_CXX)source='src/map/zone_entities.cpp' object='dsgame-zone_entities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_entities.o `test -f 'src/map/zone_entities.cpp' || echo '$(srcdir)/'`src/map/zone_entities.cpp

dsgame-zone_entities.obj: src/map/zone_entities.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_entities.obj -MD -MP -MF $(DEPDIR)/dsgame-zone_entities.Tpo -c -o dsgame-zone_entities.obj `if test -f 'src/map/zone_entities.cpp'; then $(CYGPATH_W) 'src/map/zone_entities.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/zone_entities.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_entities.Tpo $(DEPDIR)/dsgame-zone_entities.Po
#	$(AM_V_CXX)source='src/map/zone_entities.cpp' object='dsgame-zone_entities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_entities.obj `if test -f 'src/map/zone_entities.cpp'; then $(CYGPATH_W) 'src/map/zone_entities.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/zone_entities.cpp'; fi`

dsgame-zone_instance.o: src/map/zone_instance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_instance.o -MD -MP -MF $(DEPDIR)/dsgame-zone_instance.Tpo -c -o dsgame-zone_instance.o `test -f 'src/map/zone_instance.cpp' || echo '$(srcdir)/'`src/map/zone_instance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_instance.Tpo $(DEPDIR)/dsgame-zone_instance.Po
#	$(AM_V_CXX)source='src/map/zone_instance.cpp' object='dsgame-zone_instance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_instance.o `test -f 'src/map/zone_instance.cpp' || echo '$(srcdir)/'`src/map/zone_instance.cpp

dsgame-zone_instance.obj: src/map/zone_instance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -MT dsgame-zone_instance.obj -MD -MP -MF $(DEPDIR)/dsgame-zone_instance.Tpo -c -o dsgame-zone_instance.obj `if test -f 'src/map/zone_instance.cpp'; then $(CYGPATH_W) 'src/map/zone_instance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/zone_instance.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsgame-zone_instance.Tpo $(DEPDIR)/dsgame-zone_instance.Po
#	$(AM_V_CXX)source='src/map/zone_instance.cpp' object='dsgame-zone_instance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dsgame_CPPFLAGS) $(CPPFLAGS) $(dsgame_CXXFLAGS) $(CXXFLAGS) -c -o dsgame-zone_instance.obj `if test -f 'src/map/zone_instance.cpp'; then $(CYGPATH_W) 'src/map/zone_instance.cpp'; else $(CYGPATH_W) '$(srcdir)/src/map/zone_instance.cpp'; fi`

dssearch-blowfish.o: src/common/blowfish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-blowfish.o -MD -MP -MF $(DEPDIR)/dssearch-blowfish.Tpo -c -o dssearch-blowfish.o `test -f 'src/common/blowfish.cpp' || echo '$(srcdir)/'`src/common/blowfish.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-blowfish.Tpo $(DEPDIR)/dssearch-blowfish.Po
#	$(AM_V_CXX)source='src/common/blowfish.cpp' object='dssearch-blowfish.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-blowfish.o `test -f 'src/common/blowfish.cpp' || echo '$(srcdir)/'`src/common/blowfish.cpp

dssearch-blowfish.obj: src/common/blowfish.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-blowfish.obj -MD -MP -MF $(DEPDIR)/dssearch-blowfish.Tpo -c -o dssearch-blowfish.obj `if test -f 'src/common/blowfish.cpp'; then $(CYGPATH_W) 'src/common/blowfish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/blowfish.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-blowfish.Tpo $(DEPDIR)/dssearch-blowfish.Po
#	$(AM_V_CXX)source='src/common/blowfish.cpp' object='dssearch-blowfish.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-blowfish.obj `if test -f 'src/common/blowfish.cpp'; then $(CYGPATH_W) 'src/common/blowfish.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/blowfish.cpp'; fi`

dssearch-malloc.o: src/common/malloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-malloc.o -MD -MP -MF $(DEPDIR)/dssearch-malloc.Tpo -c -o dssearch-malloc.o `test -f 'src/common/malloc.cpp' || echo '$(srcdir)/'`src/common/malloc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-malloc.Tpo $(DEPDIR)/dssearch-malloc.Po
#	$(AM_V_CXX)source='src/common/malloc.cpp' object='dssearch-malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-malloc.o `test -f 'src/common/malloc.cpp' || echo '$(srcdir)/'`src/common/malloc.cpp

dssearch-malloc.obj: src/common/malloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-malloc.obj -MD -MP -MF $(DEPDIR)/dssearch-malloc.Tpo -c -o dssearch-malloc.obj `if test -f 'src/common/malloc.cpp'; then $(CYGPATH_W) 'src/common/malloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/malloc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-malloc.Tpo $(DEPDIR)/dssearch-malloc.Po
#	$(AM_V_CXX)source='src/common/malloc.cpp' object='dssearch-malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-malloc.obj `if test -f 'src/common/malloc.cpp'; then $(CYGPATH_W) 'src/common/malloc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/malloc.cpp'; fi`

dssearch-md52.o: src/common/md52.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-md52.o -MD -MP -MF $(DEPDIR)/dssearch-md52.Tpo -c -o dssearch-md52.o `test -f 'src/common/md52.cpp' || echo '$(srcdir)/'`src/common/md52.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-md52.Tpo $(DEPDIR)/dssearch-md52.Po
#	$(AM_V_CXX)source='src/common/md52.cpp' object='dssearch-md52.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-md52.o `test -f 'src/common/md52.cpp' || echo '$(srcdir)/'`src/common/md52.cpp

dssearch-md52.obj: src/common/md52.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-md52.obj -MD -MP -MF $(DEPDIR)/dssearch-md52.Tpo -c -o dssearch-md52.obj `if test -f 'src/common/md52.cpp'; then $(CYGPATH_W) 'src/common/md52.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/md52.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-md52.Tpo $(DEPDIR)/dssearch-md52.Po
#	$(AM_V_CXX)source='src/common/md52.cpp' object='dssearch-md52.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-md52.obj `if test -f 'src/common/md52.cpp'; then $(CYGPATH_W) 'src/common/md52.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/md52.cpp'; fi`

dssearch-showmsg.o: src/common/showmsg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-showmsg.o -MD -MP -MF $(DEPDIR)/dssearch-showmsg.Tpo -c -o dssearch-showmsg.o `test -f 'src/common/showmsg.cpp' || echo '$(srcdir)/'`src/common/showmsg.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-showmsg.Tpo $(DEPDIR)/dssearch-showmsg.Po
#	$(AM_V_CXX)source='src/common/showmsg.cpp' object='dssearch-showmsg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-showmsg.o `test -f 'src/common/showmsg.cpp' || echo '$(srcdir)/'`src/common/showmsg.cpp

dssearch-showmsg.obj: src/common/showmsg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-showmsg.obj -MD -MP -MF $(DEPDIR)/dssearch-showmsg.Tpo -c -o dssearch-showmsg.obj `if test -f 'src/common/showmsg.cpp'; then $(CYGPATH_W) 'src/common/showmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/showmsg.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-showmsg.Tpo $(DEPDIR)/dssearch-showmsg.Po
#	$(AM_V_CXX)source='src/common/showmsg.cpp' object='dssearch-showmsg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-showmsg.obj `if test -f 'src/common/showmsg.cpp'; then $(CYGPATH_W) 'src/common/showmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/showmsg.cpp'; fi`

dssearch-sql.o: src/common/sql.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-sql.o -MD -MP -MF $(DEPDIR)/dssearch-sql.Tpo -c -o dssearch-sql.o `test -f 'src/common/sql.cpp' || echo '$(srcdir)/'`src/common/sql.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-sql.Tpo $(DEPDIR)/dssearch-sql.Po
#	$(AM_V_CXX)source='src/common/sql.cpp' object='dssearch-sql.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-sql.o `test -f 'src/common/sql.cpp' || echo '$(srcdir)/'`src/common/sql.cpp

dssearch-sql.obj: src/common/sql.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-sql.obj -MD -MP -MF $(DEPDIR)/dssearch-sql.Tpo -c -o dssearch-sql.obj `if test -f 'src/common/sql.cpp'; then $(CYGPATH_W) 'src/common/sql.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/sql.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-sql.Tpo $(DEPDIR)/dssearch-sql.Po
#	$(AM_V_CXX)source='src/common/sql.cpp' object='dssearch-sql.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-sql.obj `if test -f 'src/common/sql.cpp'; then $(CYGPATH_W) 'src/common/sql.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/sql.cpp'; fi`

dssearch-strlib.o: src/common/strlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-strlib.o -MD -MP -MF $(DEPDIR)/dssearch-strlib.Tpo -c -o dssearch-strlib.o `test -f 'src/common/strlib.cpp' || echo '$(srcdir)/'`src/common/strlib.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-strlib.Tpo $(DEPDIR)/dssearch-strlib.Po
#	$(AM_V_CXX)source='src/common/strlib.cpp' object='dssearch-strlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-strlib.o `test -f 'src/common/strlib.cpp' || echo '$(srcdir)/'`src/common/strlib.cpp

dssearch-strlib.obj: src/common/strlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-strlib.obj -MD -MP -MF $(DEPDIR)/dssearch-strlib.Tpo -c -o dssearch-strlib.obj `if test -f 'src/common/strlib.cpp'; then $(CYGPATH_W) 'src/common/strlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/strlib.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-strlib.Tpo $(DEPDIR)/dssearch-strlib.Po
#	$(AM_V_CXX)source='src/common/strlib.cpp' object='dssearch-strlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-strlib.obj `if test -f 'src/common/strlib.cpp'; then $(CYGPATH_W) 'src/common/strlib.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/strlib.cpp'; fi`

dssearch-taskmgr.o: src/common/taskmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-taskmgr.o -MD -MP -MF $(DEPDIR)/dssearch-taskmgr.Tpo -c -o dssearch-taskmgr.o `test -f 'src/common/taskmgr.cpp' || echo '$(srcdir)/'`src/common/taskmgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-taskmgr.Tpo $(DEPDIR)/dssearch-taskmgr.Po
#	$(AM_V_CXX)source='src/common/taskmgr.cpp' object='dssearch-taskmgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-taskmgr.o `test -f 'src/common/taskmgr.cpp' || echo '$(srcdir)/'`src/common/taskmgr.cpp

dssearch-taskmgr.obj: src/common/taskmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-taskmgr.obj -MD -MP -MF $(DEPDIR)/dssearch-taskmgr.Tpo -c -o dssearch-taskmgr.obj `if test -f 'src/common/taskmgr.cpp'; then $(CYGPATH_W) 'src/common/taskmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/taskmgr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-taskmgr.Tpo $(DEPDIR)/dssearch-taskmgr.Po
#	$(AM_V_CXX)source='src/common/taskmgr.cpp' object='dssearch-taskmgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-taskmgr.obj `if test -f 'src/common/taskmgr.cpp'; then $(CYGPATH_W) 'src/common/taskmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/taskmgr.cpp'; fi`

dssearch-timer.o: src/common/timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-timer.o -MD -MP -MF $(DEPDIR)/dssearch-timer.Tpo -c -o dssearch-timer.o `test -f 'src/common/timer.cpp' || echo '$(srcdir)/'`src/common/timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-timer.Tpo $(DEPDIR)/dssearch-timer.Po
#	$(AM_V_CXX)source='src/common/timer.cpp' object='dssearch-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-timer.o `test -f 'src/common/timer.cpp' || echo '$(srcdir)/'`src/common/timer.cpp

dssearch-timer.obj: src/common/timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-timer.obj -MD -MP -MF $(DEPDIR)/dssearch-timer.Tpo -c -o dssearch-timer.obj `if test -f 'src/common/timer.cpp'; then $(CYGPATH_W) 'src/common/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/timer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-timer.Tpo $(DEPDIR)/dssearch-timer.Po
#	$(AM_V_CXX)source='src/common/timer.cpp' object='dssearch-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-timer.obj `if test -f 'src/common/timer.cpp'; then $(CYGPATH_W) 'src/common/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/timer.cpp'; fi`

dssearch-utils.o: src/common/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-utils.o -MD -MP -MF $(DEPDIR)/dssearch-utils.Tpo -c -o dssearch-utils.o `test -f 'src/common/utils.cpp' || echo '$(srcdir)/'`src/common/utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-utils.Tpo $(DEPDIR)/dssearch-utils.Po
#	$(AM_V_CXX)source='src/common/utils.cpp' object='dssearch-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-utils.o `test -f 'src/common/utils.cpp' || echo '$(srcdir)/'`src/common/utils.cpp

dssearch-utils.obj: src/common/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-utils.obj -MD -MP -MF $(DEPDIR)/dssearch-utils.Tpo -c -o dssearch-utils.obj `if test -f 'src/common/utils.cpp'; then $(CYGPATH_W) 'src/common/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-utils.Tpo $(DEPDIR)/dssearch-utils.Po
#	$(AM_V_CXX)source='src/common/utils.cpp' object='dssearch-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-utils.obj `if test -f 'src/common/utils.cpp'; then $(CYGPATH_W) 'src/common/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/common/utils.cpp'; fi`

dssearch-data_loader.o: src/search/data_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-data_loader.o -MD -MP -MF $(DEPDIR)/dssearch-data_loader.Tpo -c -o dssearch-data_loader.o `test -f 'src/search/data_loader.cpp' || echo '$(srcdir)/'`src/search/data_loader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-data_loader.Tpo $(DEPDIR)/dssearch-data_loader.Po
#	$(AM_V_CXX)source='src/search/data_loader.cpp' object='dssearch-data_loader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-data_loader.o `test -f 'src/search/data_loader.cpp' || echo '$(srcdir)/'`src/search/data_loader.cpp

dssearch-data_loader.obj: src/search/data_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-data_loader.obj -MD -MP -MF $(DEPDIR)/dssearch-data_loader.Tpo -c -o dssearch-data_loader.obj `if test -f 'src/search/data_loader.cpp'; then $(CYGPATH_W) 'src/search/data_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/data_loader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-data_loader.Tpo $(DEPDIR)/dssearch-data_loader.Po
#	$(AM_V_CXX)source='src/search/data_loader.cpp' object='dssearch-data_loader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-data_loader.obj `if test -f 'src/search/data_loader.cpp'; then $(CYGPATH_W) 'src/search/data_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/data_loader.cpp'; fi`

dssearch-auction_history.o: src/search/packets/auction_history.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-auction_history.o -MD -MP -MF $(DEPDIR)/dssearch-auction_history.Tpo -c -o dssearch-auction_history.o `test -f 'src/search/packets/auction_history.cpp' || echo '$(srcdir)/'`src/search/packets/auction_history.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-auction_history.Tpo $(DEPDIR)/dssearch-auction_history.Po
#	$(AM_V_CXX)source='src/search/packets/auction_history.cpp' object='dssearch-auction_history.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-auction_history.o `test -f 'src/search/packets/auction_history.cpp' || echo '$(srcdir)/'`src/search/packets/auction_history.cpp

dssearch-auction_history.obj: src/search/packets/auction_history.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-auction_history.obj -MD -MP -MF $(DEPDIR)/dssearch-auction_history.Tpo -c -o dssearch-auction_history.obj `if test -f 'src/search/packets/auction_history.cpp'; then $(CYGPATH_W) 'src/search/packets/auction_history.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/auction_history.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-auction_history.Tpo $(DEPDIR)/dssearch-auction_history.Po
#	$(AM_V_CXX)source='src/search/packets/auction_history.cpp' object='dssearch-auction_history.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-auction_history.obj `if test -f 'src/search/packets/auction_history.cpp'; then $(CYGPATH_W) 'src/search/packets/auction_history.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/auction_history.cpp'; fi`

dssearch-auction_list.o: src/search/packets/auction_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-auction_list.o -MD -MP -MF $(DEPDIR)/dssearch-auction_list.Tpo -c -o dssearch-auction_list.o `test -f 'src/search/packets/auction_list.cpp' || echo '$(srcdir)/'`src/search/packets/auction_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-auction_list.Tpo $(DEPDIR)/dssearch-auction_list.Po
#	$(AM_V_CXX)source='src/search/packets/auction_list.cpp' object='dssearch-auction_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-auction_list.o `test -f 'src/search/packets/auction_list.cpp' || echo '$(srcdir)/'`src/search/packets/auction_list.cpp

dssearch-auction_list.obj: src/search/packets/auction_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-auction_list.obj -MD -MP -MF $(DEPDIR)/dssearch-auction_list.Tpo -c -o dssearch-auction_list.obj `if test -f 'src/search/packets/auction_list.cpp'; then $(CYGPATH_W) 'src/search/packets/auction_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/auction_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-auction_list.Tpo $(DEPDIR)/dssearch-auction_list.Po
#	$(AM_V_CXX)source='src/search/packets/auction_list.cpp' object='dssearch-auction_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-auction_list.obj `if test -f 'src/search/packets/auction_list.cpp'; then $(CYGPATH_W) 'src/search/packets/auction_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/auction_list.cpp'; fi`

dssearch-linkshell_list.o: src/search/packets/linkshell_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-linkshell_list.o -MD -MP -MF $(DEPDIR)/dssearch-linkshell_list.Tpo -c -o dssearch-linkshell_list.o `test -f 'src/search/packets/linkshell_list.cpp' || echo '$(srcdir)/'`src/search/packets/linkshell_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-linkshell_list.Tpo $(DEPDIR)/dssearch-linkshell_list.Po
#	$(AM_V_CXX)source='src/search/packets/linkshell_list.cpp' object='dssearch-linkshell_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-linkshell_list.o `test -f 'src/search/packets/linkshell_list.cpp' || echo '$(srcdir)/'`src/search/packets/linkshell_list.cpp

dssearch-linkshell_list.obj: src/search/packets/linkshell_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-linkshell_list.obj -MD -MP -MF $(DEPDIR)/dssearch-linkshell_list.Tpo -c -o dssearch-linkshell_list.obj `if test -f 'src/search/packets/linkshell_list.cpp'; then $(CYGPATH_W) 'src/search/packets/linkshell_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/linkshell_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-linkshell_list.Tpo $(DEPDIR)/dssearch-linkshell_list.Po
#	$(AM_V_CXX)source='src/search/packets/linkshell_list.cpp' object='dssearch-linkshell_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-linkshell_list.obj `if test -f 'src/search/packets/linkshell_list.cpp'; then $(CYGPATH_W) 'src/search/packets/linkshell_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/linkshell_list.cpp'; fi`

dssearch-party_list.o: src/search/packets/party_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-party_list.o -MD -MP -MF $(DEPDIR)/dssearch-party_list.Tpo -c -o dssearch-party_list.o `test -f 'src/search/packets/party_list.cpp' || echo '$(srcdir)/'`src/search/packets/party_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-party_list.Tpo $(DEPDIR)/dssearch-party_list.Po
#	$(AM_V_CXX)source='src/search/packets/party_list.cpp' object='dssearch-party_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-party_list.o `test -f 'src/search/packets/party_list.cpp' || echo '$(srcdir)/'`src/search/packets/party_list.cpp

dssearch-party_list.obj: src/search/packets/party_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-party_list.obj -MD -MP -MF $(DEPDIR)/dssearch-party_list.Tpo -c -o dssearch-party_list.obj `if test -f 'src/search/packets/party_list.cpp'; then $(CYGPATH_W) 'src/search/packets/party_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/party_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-party_list.Tpo $(DEPDIR)/dssearch-party_list.Po
#	$(AM_V_CXX)source='src/search/packets/party_list.cpp' object='dssearch-party_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-party_list.obj `if test -f 'src/search/packets/party_list.cpp'; then $(CYGPATH_W) 'src/search/packets/party_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/party_list.cpp'; fi`

dssearch-search_comment.o: src/search/packets/search_comment.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-search_comment.o -MD -MP -MF $(DEPDIR)/dssearch-search_comment.Tpo -c -o dssearch-search_comment.o `test -f 'src/search/packets/search_comment.cpp' || echo '$(srcdir)/'`src/search/packets/search_comment.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-search_comment.Tpo $(DEPDIR)/dssearch-search_comment.Po
#	$(AM_V_CXX)source='src/search/packets/search_comment.cpp' object='dssearch-search_comment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-search_comment.o `test -f 'src/search/packets/search_comment.cpp' || echo '$(srcdir)/'`src/search/packets/search_comment.cpp

dssearch-search_comment.obj: src/search/packets/search_comment.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-search_comment.obj -MD -MP -MF $(DEPDIR)/dssearch-search_comment.Tpo -c -o dssearch-search_comment.obj `if test -f 'src/search/packets/search_comment.cpp'; then $(CYGPATH_W) 'src/search/packets/search_comment.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/search_comment.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-search_comment.Tpo $(DEPDIR)/dssearch-search_comment.Po
#	$(AM_V_CXX)source='src/search/packets/search_comment.cpp' object='dssearch-search_comment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-search_comment.obj `if test -f 'src/search/packets/search_comment.cpp'; then $(CYGPATH_W) 'src/search/packets/search_comment.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/search_comment.cpp'; fi`

dssearch-search_list.o: src/search/packets/search_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-search_list.o -MD -MP -MF $(DEPDIR)/dssearch-search_list.Tpo -c -o dssearch-search_list.o `test -f 'src/search/packets/search_list.cpp' || echo '$(srcdir)/'`src/search/packets/search_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-search_list.Tpo $(DEPDIR)/dssearch-search_list.Po
#	$(AM_V_CXX)source='src/search/packets/search_list.cpp' object='dssearch-search_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-search_list.o `test -f 'src/search/packets/search_list.cpp' || echo '$(srcdir)/'`src/search/packets/search_list.cpp

dssearch-search_list.obj: src/search/packets/search_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-search_list.obj -MD -MP -MF $(DEPDIR)/dssearch-search_list.Tpo -c -o dssearch-search_list.obj `if test -f 'src/search/packets/search_list.cpp'; then $(CYGPATH_W) 'src/search/packets/search_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/search_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-search_list.Tpo $(DEPDIR)/dssearch-search_list.Po
#	$(AM_V_CXX)source='src/search/packets/search_list.cpp' object='dssearch-search_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-search_list.obj `if test -f 'src/search/packets/search_list.cpp'; then $(CYGPATH_W) 'src/search/packets/search_list.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/packets/search_list.cpp'; fi`

dssearch-search.o: src/search/search.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-search.o -MD -MP -MF $(DEPDIR)/dssearch-search.Tpo -c -o dssearch-search.o `test -f 'src/search/search.cpp' || echo '$(srcdir)/'`src/search/search.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-search.Tpo $(DEPDIR)/dssearch-search.Po
#	$(AM_V_CXX)source='src/search/search.cpp' object='dssearch-search.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-search.o `test -f 'src/search/search.cpp' || echo '$(srcdir)/'`src/search/search.cpp

dssearch-search.obj: src/search/search.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-search.obj -MD -MP -MF $(DEPDIR)/dssearch-search.Tpo -c -o dssearch-search.obj `if test -f 'src/search/search.cpp'; then $(CYGPATH_W) 'src/search/search.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/search.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-search.Tpo $(DEPDIR)/dssearch-search.Po
#	$(AM_V_CXX)source='src/search/search.cpp' object='dssearch-search.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-search.obj `if test -f 'src/search/search.cpp'; then $(CYGPATH_W) 'src/search/search.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/search.cpp'; fi`

dssearch-tcp_request.o: src/search/tcp_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-tcp_request.o -MD -MP -MF $(DEPDIR)/dssearch-tcp_request.Tpo -c -o dssearch-tcp_request.o `test -f 'src/search/tcp_request.cpp' || echo '$(srcdir)/'`src/search/tcp_request.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-tcp_request.Tpo $(DEPDIR)/dssearch-tcp_request.Po
#	$(AM_V_CXX)source='src/search/tcp_request.cpp' object='dssearch-tcp_request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-tcp_request.o `test -f 'src/search/tcp_request.cpp' || echo '$(srcdir)/'`src/search/tcp_request.cpp

dssearch-tcp_request.obj: src/search/tcp_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -MT dssearch-tcp_request.obj -MD -MP -MF $(DEPDIR)/dssearch-tcp_request.Tpo -c -o dssearch-tcp_request.obj `if test -f 'src/search/tcp_request.cpp'; then $(CYGPATH_W) 'src/search/tcp_request.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/tcp_request.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dssearch-tcp_request.Tpo $(DEPDIR)/dssearch-tcp_request.Po
#	$(AM_V_CXX)source='src/search/tcp_request.cpp' object='dssearch-tcp_request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dssearch_CPPFLAGS) $(CPPFLAGS) $(dssearch_CXXFLAGS) $(CXXFLAGS) -c -o dssearch-tcp_request.obj `if test -f 'src/search/tcp_request.cpp'; then $(CYGPATH_W) 'src/search/tcp_request.cpp'; else $(CYGPATH_W) '$(srcdir)/src/search/tcp_request.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-cscope clean-generic cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
